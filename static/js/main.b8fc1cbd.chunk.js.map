{"version":3,"sources":["utils/LogUploader/log.worker.ts","containers/custom-browser-router.tsx","containers/theme-container.tsx","components/custom-button.tsx","utils/custom-storage.ts","stores/global.ts","i18n/zh.ts","i18n/en.ts","i18n.ts","components/role-radio.tsx","components/icon.tsx","components/form-input.tsx","components/form-select.tsx","components/lang-select.tsx","utils/platform.ts","utils/agora-rtm-client.ts","containers/platform-container.tsx","utils/config.ts","utils/helper.ts","utils/agora-electron-client.ts","utils/agora-rtc-client.ts","utils/agora-web-client.ts","services/intl-error-helper.ts","utils/fetch.ts","stores/history.ts","services/edu-api.ts","stores/room.ts","components/github-icon/index.tsx","utils/api/rtm-restful.ts","utils/api/whiteboard-api.ts","utils/api/index.ts","utils/LogUploader/db.ts","utils/LogUploader/index.ts","pages/home.tsx","components/volume/speaker.tsx","components/volume/voice.tsx","pages/error-page/state.tsx","stores/whiteboard.ts","containers/root-container.tsx","components/video-player.tsx","components/setting-card.tsx","hooks/use-setting-control.tsx","pages/device-test.tsx","utils/types.ts","components/nav.tsx","components/dialog/index.tsx","components/native-shared-window.tsx","pages/classroom/index.tsx","components/loading.tsx","components/toast.tsx","components/progress/progress.tsx","pages/replay/model.ts","components/whiteboard/agora/rtm-player.tsx","components/chat/message.tsx","utils/agora-web-player/logger.ts","pages/replay/replay.tsx","utils/agora-web-player/agora-player.ts","utils/agora-web-player/timeline-scheduler.ts","pages/replay/agora-replay.tsx","hooks/use-streams.ts","components/video-marquee.tsx","components/whiteboard.tsx","components/whiteboard/control.tsx","components/whiteboard/tools.tsx","utils/upload-manager.ts","components/whiteboard/upload/upload-btn.tsx","components/whiteboard/resources-menu/index.tsx","components/whiteboard/scale-controller.tsx","components/whiteboard/upload/upload-notice.tsx","components/mediaboard.tsx","components/chat/panel.tsx","hooks/use-chat-control.ts","components/student-list.tsx","hooks/use-chat-text.ts","components/roomboard.tsx","pages/classroom/small-class.tsx","components/chat/board.tsx","pages/classroom/one-to-one.tsx","pages/classroom/big-class.tsx","pages/404.tsx","pages/replay/index.tsx","pages/config/index.tsx","pages/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Worker","RouterContext","React","createContext","CustomBrowserRouter","children","routeProps","Provider","value","THEME","createMuiTheme","typography","overrides","MuiRadio","root","padding","MuiSvgIcon","width","height","MuiFormControl","margin","MuiInput","underline","borderBottom","ThemeProvider","theme","props","Button","id","variant","className","color","onClick","name","GlobalStorage","storage","languageKey","this","window","sessionStorage","key","JSON","parse","getItem","_","val","setItem","stringify","removeItem","lang","save","language","read","navigator","channelMessages","isEmpty","count","messages","chatMessages","filter","it","message_type","reduce","collect","payload","json","content","concat","account","ms","src","length","roomTypes","text","path","globalStore","subject","state","defaultState","loading","toast","type","message","dialog","confirmText","cancelText","uploadNotice","title","notice","reason","nativeWindowInfo","visible","items","lock","active","newMessageCount","getLanguage","Subject","next","updateState","initialize","subscribe","unsubscribe","rootState","commit","location","reload","len","zhCN","process","en","t","options","match","get","replace","console","error","useStyles","makeStyles","radioGroup","display","clear","justifyContent","required","fontSize","lineHeight","position","top","classes","RadioGroup","row","role","onChange","FormControlLabel","control","Radio","label","labelPlacement","requiredText","Typography","data","icon","disable","iconClass","dataName","data-name","formInput","InputLabel","Label","Input","evt","target","memo","Select","map","item","MenuItem","log","RoomMessage","ChatCmdType","CoVideoType","PlatformContext","usePlatform","useContext","PlatformContainer","platform","useLocation","ipc","useEffect","pathname","send","handleClick","NavBtn","HomeBtn","handleSetting","SettingBtn","APP_ID","REACT_APP_AGORA_APP_TOKEN","logFilter","AgoraRTM","LOG_FILTER_DEBUG","AgoraRTMClient","_bus","_currentChannel","_currentChannelName","_channels","_client","_channelAttrsKey","_logged","_joined","EventEmitter","removeAllListeners","Object","keys","channel","evtName","cb","on","off","appID","uid","token","rtmClient","createInstance","enableLogUpload","login","newState","emit","peerId","logout","destroy","_channel","createChannel","join","memberId","attributes","destroyChannel","deleteChannelAttributesByKey","leave","params","cmd","enableHistoricalMessaging","body","sendMessage","resolveMessage","sendMessageToPeer","result","hasPeerReceived","msgData","recordId","notifyMessage","replay","attrs","channelAttributes","addOrUpdateChannelAttributes","enableNotificationToChannelMembers","deleteChannelAttributesByKeys","getChannelAttributes","ids","getChannelMemberCount","accounts","results","teacherCount","totalCount","studentTotalCount","queryPeersOnlineStatus","teacher","find","studentsTotalCount","warn","channelName","teacherObj","jsonParse","push","student","ossConfig","ossClient","OSS","acceptCoVideo","rejectCoVideo","cancelCoVideo","applyCoVideo","muteVideo","muteAudio","unmuteAudio","unmuteVideo","err","resolveFileInfo","file","fileName","encodeURI","fileType","substring","lastIndexOf","level","NetworkQualityEvaluation","Math","max","downlinkNetworkQuality","uplinkNetworkQuality","StreamType","AgoraRtcEngine","rtcEngine","setChannelProfile","enableVideo","enableAudio","enableWebSdkInteroperability","setVideoProfile","once","events","args","logPath","videoSourceLogPath","videoSourceAddonLogPath","setLogFile","doGzip","AgoraRTC","Logger","setLogLevel","DEBUG","streamEvents","clientEvents","AgoraRTCClient","streamID","_init","_published","_internalTimer","createClient","mode","codec","_localStream","_streamEvents","_clientEvents","_addEventListener","appId","prepareInit","Promise","resolve","reject","init","enableRtt","initClient","subscribeClientEvents","setInterval","getTransportStats","stats","RTT","unsubscribeClientEvents","removeEventListener","newToken","renewToken","publish","setTimeout","unpublish","destroyLocalStream","stream","streamType","setRemoteVideoStreamType","enableDualStream","createStream","mirror","subscribeLocalStreamEvents","audioOutput","deviceId","setAudioOutput","then","catch","unsubscribeLocalStreamEvents","isPlaying","stop","close","speakerId","volume","setAudioVolume","video","audio","clearInterval","getDevices","devices","_devices","forEach","kind","cameraCanUse","microphoneCanUse","tempAudioStream","tempVideoStream","audioPermissionOK","videoPermissionOK","all","microphone","camera","AgoraWebClient","deps","rtc","shareClient","localUid","bus","shared","joined","forceGetDevice","published","tmpStream","roomStore","client","deviceResult","forceGetDevices","cameraList","microphoneList","dual","setRTCJoined","unpublishLocalStream","destroyClient","cameraId","microphoneId","createLocalStream","screen","screenAudio","undefined","errors","leaveChannel","getIntlError","errorCode","res","locale","_getIntlError","Fetch","input","a","onResponse","response","ok","Error","statusText","onError","rescueError","fetch","AgoraFetch","retryCount","code","isErrorCode","showToast","msg","historyStore","history","PREFIX","REACT_APP_AGORA_EDU_ENDPOINT_PREFIX","AgoraFetchJson","url","method","full_url","opts","headers","resp","responseData","api_error","AgoraEduApi","roomId","_userToken","fileExt","_roomId","bucketName","callbackBody","callbackContentType","accessKeyId","accessKeySecret","securityToken","ossKey","ext","fetchStsToken","ossParams","stsToken","bucket","secure","endpoint","put","callback","contentType","uploadToOss","userToken","rtcToken","rtmToken","screenToken","room","user","userId","userAttrs","config","boardData","boardId","boardToken","getWhiteboardBy","users","coVideoUsers","getRoomInfoBy","rawUsers","rawCourse","me","usersMap","acc","set","userName","chat","enableChat","grantBoard","screenId","Map","courseState","muteChat","muteAllChat","isRecording","lockBoard","teacherId","memberCount","onlineUsers","roomName","roomType","recordingTime","Boolean","entry","teacherState","userList","course","rid","userUuid","uuid","coVideoUids","teacherRecord","recordStatus","startTime","endTime","status","userIds","eduApi","fetchI18n","_state","freeze","rtmLock","recordLock","roomToken","coVideo","applyUser","rtm","Set","localStream","localSharedStream","remoteStreams","mediaDevice","speakerVolume","speaker","List","windowId","rtcClient","fetchRoomBy","add","delete","remoteStream","sendChannelMessage","teacherSendReject","studentSendApply","teacherSendAccept","teacherSendStop","applyUserId","updateApplyUser","showNotice","updateLocalMe","broad","updateUserBy","Login","roomUuid","newMe","prop","hasOwnProperty","newCourse","getCourseState","updateCourse","getRoomState","updateRoomState","usersJson","toJSON","meParams","compositeMe","newMeAttrs","userAttrsParams","updateRoomUser","userParams","prevUser","newUserAttrs","userKeys","stateValue","stateKey","unlockBoard","startCourse","endCourse","unmuteAllChat","courseParams","resolveCourseAttrsToOperate","compositeCourse","exitRoom","exit","webClient","refreshToken","startScreenShare","stopWebScreenShare","finally","stopScreenShare","removeLocalSharedStream","setNativeWindowInfo","getScreenShareWindows","startWebScreenShare","nativeClient","lockRecording","startRecording","recordingConfig","maxIdleTime","unlockRecording","stopRecording","roomInfo","meState","GithubIcon","href","rel","protocol","host","RTMRestful","customerId","appSecret","source","destination","offset","limit","plainCredentials","btoa","Authorization","basicAuthorization","start_time","end_time","order","responseA","jsonA","respB","jsonB","fetchChannelMessageCount","fetchChannelMessages","WhiteboardAPI","replayRoom","beginTimestamp","duration","mediaURL","retrying","genUUID","localStorage","uuidv4","db","Dexie","version","stores","logs","flat","UAParser","getResult","arr","elem","Log","thread","LogWorker","debugLog","e","indexOf","context","arguments","postMessage","apply","proxy","uploadZipLogFile","uploadLog","toArray","logsStr","reverse","Array","isArray","File","Date","now","uploadLogFile","exists","open","originConsole","formControl","minWidth","maxWidth","hiddenStyle","yourName","document","useHistory","useState","setLock","ref","useRef","current","session","setSessionInfo","setRequired","style","Tooltip","placement","doUpload","resultCode","showDialog","setLanguage","FormControl","queryString","URL","room_id","searchParams","axios","post","showLoading","LoginToRoom","stopLoading","marginTop","sliderClass","marginLeft","ContinuousSlider","setValue","Slider","event","newValue","aria-labelledby","sliderRailClass","sliderMarkClass","CustomSlider","VoiceSlider","errorStore","BehaviorSubject","getValue","plugins","createPlugins","videoPlugin","audioPlugin","setPluginContext","identity","whiteboard","scenes","currentScenePath","currentHeight","currentWidth","dirs","zoomRadio","scale","recording","totalPage","currentPage","disconnected","WhiteWebSdk","deviceType","DeviceType","Surface","loggerOptions","disableReportLog","reportLevelMask","printLevelMask","operator","scenePath","sceneMap","roomState","sceneState","ppt","index","entireScenes","dirPath","sceneInfo","getNameByScenePath","rootPath","_dirPath","exec","RegExp","$1","pathName","_dirs","findIndex","userPayload","disableDeviceInputs","disableOperations","isWritable","roomParams","disableBezier","joinRoom","onPhaseChanged","phase","RoomPhase","Connected","updateLoading","onRoomStateChanged","zoomScale","updateScale","globalState","onDisconnectWithError","onKickedWithReason","onKeyDown","onKeyUp","onHandToolActive","onPPTLoadProgress","progress","disconnect","cleanRoom","lockBoardStatus","useObserver","store","setState","netlessStore","RootContext","useStore","useGlobalState","useRoomState","RootProvider","whiteboardState","errorState","historyState","setHistory","resolvePeerMessage","handlePeerMessage","setMessageCount","chatMessage","ts","updateChannelMessage","roomMemberChanged","total","updateRoomMember","roomInfoChanged","updateRoomInfo","coVideoUsersChanged","updateCoVideoUsers","replayMessage","link","screenShare","updateScreenShare","recordStateChanged","updateRecordState","preview","domId","local","handleClose","autoplay","loadVideo","loadAudio","lockPlay","resume","setResume","needResume","useMemo","play","fit","isPaused","setDevices","speakerList","setCamera","setMicrophone","setSpeaker","setSpeakerVolume","setVolume","mounted","addEventListener","getAudioRecordingDevices","microphoneIds","getAudioPlaybackDevices","speakerIds","getVideoDevices","cameraIds","microphones","devicename","deviceid","speakers","cameras","setStream","createPreviewStream","interval","getAudioLevel","onVolumeChange","speakerNumber","totalVolume","Number","toFixed","setClientRole","enableAudioVolumeIndication","startAudioRecordingDeviceTest","stopAudioPlaybackDeviceTest","PreviewPlayer","useCallback","MicrophoneVolume","mediaInfo","updateDevice","useSettingControl","handleFinish","ClassState","AgoraStream","networkQualityIcon","Nav","delay","network","cpu","time","showSetting","classState","onCardConfirm","moment","format","NavContainer","updateTime","timer","setTimer","card","setCard","rtt","updateRtt","quality","updateQuality","cpuUsage","updateCpuUsage","cpuTotalUsage","txquality","rxquality","STARTED","calcDuration","CLOSED","removeDialog","unlock","RoomDialog","onConfirm","onClose","desc","Dialog","disableBackdropClick","aria-describedby","DialogContent","DialogContentText","teacherRejectApply","removeNotice","goBack","teacherAcceptApply","WindowItem","ownerName","image","backgroundImage","WindowList","selectWindow","confirm","cancel","onDoubleClick","NativeSharedWindowContainer","setWindowId","electronStream","addLocalSharedStream","releaseScreenShare","RoomPage","fetchCurrentRoom","classroom","isSmallClass","removeUploadNotice","exitAll","canPublish","publishLock","rtcJoined","streamSpec","publishLocalStream","_stream","getId","addLocalStream","addRTCUser","addRemoteStream","removeRemoteStream","removePeerUser","attr","info","joinChannel","eventName","removeLocalStream","spacing","container","left","alignItems","background","opacity","zIndex","Loading","CircularProgress","LoadContainer","ConsecutiveSnackbars","queueRef","setMessages","timerRef","shift","idx","Progress","RtmPlayerState","currentTime","boardPlayPhase","PlayerPhase","Pause","isFirstScreenReady","isPlayerSeeking","isChatOpen","isVisible","replayFail","courseRecordData","player","videoPlayer","timelineScheduler","replayStore","scheduleTime","getCourseRecordBy","seekToScheduleTime","Playing","Ended","scheduler","Message","nickname","sender","to","LogLevel","RTMReplayer","currentSeekTime","senderId","pending","useAsync","rtmRecord","utc","getAllChannelMessages","load","serializeMessage","rtmMessages","replayMessages","scrollTop","scrollHeight","MessageList","ReplayContext","ReplayContainer","replayState","useParams","URLSearchParams","search","useInterval","whiteboardUUID","mediaUrl","NetlessAgoraReplay","handlePlayerClick","WaitingFirstFrame","pause","onWindowResize","refreshViewSize","handleSpaceKey","handleOperationClick","abs","onCatchErrorWhenRender","onCatchErrorWhenAppendFrame","updateWhiteboardPhase","onLoadFirstFrame","loadFirstFrame","onSliceChanged","onPlayerStateChanged","onStoppedWithError","setReplayFail","onScheduleTimeChanged","setCurrentTime","setPlayer","bindHtmlElement","getElementById","totalTime","PlayerCover","Buffering","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","updateProgress","min","playsInline","objectFit","PhaseState","rawLog","PlayerLogger","prefix","TimelineScheduler","fps","rafId","_lastTimeoutId","_stopTimer","_visibilityHandler","currentDuration","hidden","_time","frame","durationBase","raf","nextTick","timestamp","v","elapsedTime","ceil","currentFrame","floor","isTimer","AgoraPlayer","cover","phaseState","$el","mediaType","createElement","Videojs","preload","controls","loop","html5","hls","overrideNative","split","pop","$dom","appendChild","paused","seconds","ended","dispose","readyState","TimelineReplay","startTimestamp","endTimestamp","updatePlayState","addVideoPlayer","timeline","seekTo","addTimeline","whiteboardPlayStatus","addWhiteboardPlayer","initPlayer","playerElementRef","whiteboardElementRef","initVideo","start","playState","useStream","teacherInfo","teacherUid","remoteTeacherStream","students","studentIds","studentStreams","myAttr","_tmpStream","studentId","studentAttr","sharedStream","currentHost","coVideoUid","userAttr","peerUid","peerUserAttr","onPlayerClick","targetUser","targetUid","mute","unmute","showScrollbar","$marquee","querySelector","clientWidth","marqueeLength","querySelectorAll","videoMarqueeMark","marqueeEl","scrollLeft","childNodes","offsetWidth","scrollBar","setScrollBar","useLayoutEffect","Whiteboard","domRef","domObserver","ResizeObserver","entries","observer","moveCamera","centerX","centerY","observe","ControlItem","Control","sharing","isHost","handleRecording","recordingErr","marginRight","ToolItem","Tools","handleToolClick","currentTool","PPTType","PPTProgressPhase","UploadManager","ossUploadCallback","getFile","generateObjectUrl","addFile","rawFile","onProgress","multipartUpload","p","Uploading","pptConverter","folder","pptURL","PptKind","Static","convert","onProgressUpdated","Converting","documentFile","pptType","static","MD5","putScenes","setScenePath","dynamic","imageInnerSize","windowSize","innerWidth","innerHeight","widthHeightProportion","imageFiles","x","y","newAcceptedFilePromises","fetchWhiteImageFileWith","newAcceptedFiles","uploadImageFilesArray","Image","reader","FileReader","readAsDataURL","onload","getImageSize","imageFile","coordinateX","coordinateY","tasks","convertToPointInWorld","insertImage","task","handleUploadTask","setMemberState","currentApplianceName","fileUrl","completeImageUpload","UploadBtn","onFailure","onSuccess","didUpload","ImageInput","DynamicInput","StaticInput","AudioVideoInput","uploadDynamic","currentTarget","files","uploadManager","convertFile","Dynamic","uploadStatic","uploadImage","uploadFileArray","$whiteboard","clientHeight","uploadImageFiles","uploadAudioVideo","isHttps","toLowerCase","insertPlugin","originX","originY","pluginVideoUrl","pluginAudioUrl","htmlFor","accept","ResourceItem","setName","useDebounce","blob","Blob","globalStateLength","sceneMapLength","size","setGlobalState","isMainScene","activeClass","removeScenes","newSceneMap","omit","coverType","defaultValue","ResourcesMenu","activeScenePath","ScaleController","tempRuleIndex","syncRuleIndexTimer","clearTimeout","syncDuration","readRuleIndexByScale","delaySyncRuleIndex","zoomChange","deltaIndex","dividingRule","targetScale","moveRuleIndex","onClickBoardLock","i","prePoint","point","nextPoint","begin","MIN_SAFE_INTEGER","end","MAX_SAFE_INTEGER","Component","UploadNotice","UploadNoticeView","rtmState","pageTool","setPageTool","studentIsHost","addNewPage","newIndex","currentPath","setSceneIndex","changePage","force","_idx","pptNextStep","pptPreviousStep","showControl","toolItems","drawable","tool","setTool","selector","updateSelector","uploadPhase","updateUploadPhase","convertPhase","updateConvertPhase","UploadPanel","percent","showUploadNotice","setViewMode","ViewMode","Broadcaster","Freedom","handToolActive","disableCameraTransform","UploadProgressView","strokeColor","memberState","r","g","b","showTools","onChangeComplete","rgb","regexPattern","truncateBlank","ChatPanel","handleChange","muteControl","disableChat","handleMute","useChatControl","disabled","placeholder","disableUnderline","onKeyPress","CustomIcon","StudentList","list","useChatText","my","slice","Roomboard","setVisible","setActive","SmallClass","currentActive","ChatBoard","roomCount","OneToOne","BigClass","closeLock","studentStopCoVideo","quitClient","teacherCancelStudent","BasicLayout","PageNotFound","ReplayPageWrapper","Copyright","align","Link","getFullYear","paper","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","ConfigPage","Container","component","CssBaseline","Avatar","noValidate","TextField","fullWidth","autoFocus","Grid","xs","Box","mt","exact","hostname","userAgentInfo","REACT_APP_AGORA_GTM_ID","TagManager","gtmId","ReactDOM","render","click","serviceWorker","ready","registration","unregister","device","el","Eruda"],"mappings":"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","file":"static/js/main.b8fc1cbd.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"46d9c7c9f7a9212c1e9e.worker.js\");\n};","import React from 'react';\nimport {HashRouter, Route, Router} from 'react-router-dom';\n\nexport const RouterContext = React.createContext({} as Router);\n\nfunction CustomBrowserRouter ({children}: any) {\n  return (\n    <HashRouter>\n      <Route>\n        {(routeProps: any) => (\n          <RouterContext.Provider value={routeProps}>\n            {children}\n          </RouterContext.Provider>\n        )}\n      </Route>\n    </HashRouter>\n  )\n}\n\nexport default CustomBrowserRouter;","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst THEME = createMuiTheme({\n  typography: {\n   \"fontFamily\": '-apple-system, BlinkMacSystemFont, \\\\\"Segoe UI\\\\\", \\\\\"Roboto\\\\\", \\\\\"Oxygen\\\\\", \\\\\"Ubuntu\\\\\", \\\\\"Cantarell\\\\\", \\\\\"Fira Sans\\\\\", \\\\\"Droid Sans\\\\\", \\\\\"Helvetica Neue\\\\\", sans-serif',\n   \"fontSize\": 14,\n   \"fontWeightLight\": 300,\n   \"fontWeightRegular\": 400,\n   \"fontWeightMedium\": 500,\n  },\n\n  overrides: {\n    MuiRadio: {\n      root: {\n        padding: '4px'\n      }\n    },\n    MuiSvgIcon: {\n      root: {\n        width: '1rem',\n        height: '1rem',\n      }\n    },\n    MuiFormControl: {\n      root: {\n        margin: '0.3rem 0',\n      }\n    },\n    MuiInput: {\n      underline: {\n        '&:before': {\n          borderBottom: '1px solid #EAEAEA',\n        },\n        '&:hover:not($disabled):not($focused):not($error):before': {\n          borderBottom: `2px solid #EAEAEA`,\n        },\n        '&$focused': {\n          '&:after': {\n            borderBottom: '2px solid #44a2fc',\n          }\n        },\n      }\n    }\n  }\n});\n\nexport default function ({children}: any) {\n  return (\n    <ThemeProvider theme={THEME}>\n      {children}\n    </ThemeProvider>\n  )\n}","import React from 'react';\nimport { Button } from '@material-ui/core';\nexport default function (props: any) {\n  return (\n    <Button id=\"room_join\" variant=\"contained\" className={props.className ? props.className : 'custom-button'} color=\"primary\" onClick={props.onClick}>\n      {props.name}\n    </Button>\n  )\n}","import { isEmpty } from \"lodash\";\n\nexport class CustomStorage {\n\n  private storage: Storage;\n\n  languageKey: string = 'demo_language'\n\n  constructor() {\n    this.storage = window.sessionStorage;\n  }\n\n  read(key: string): any {\n    try {\n      let json = JSON.parse(this.storage.getItem(key) as string);\n      return json\n    } catch(_) {\n      return this.storage.getItem(key);\n    }\n  }\n\n  save(key: string, val: any) {\n    this.storage.setItem(key, JSON.stringify(val));\n  }\n\n  clear(key: string) {\n    this.storage.removeItem(key);\n  }\n\n  setLanguage(lang: string) {\n    this.save(this.languageKey, lang)\n  }\n\n  getLanguage() {\n    const language = this.read(this.languageKey) ? this.read(this.languageKey) : navigator.language;\n    return {language};\n  }\n\n  getRtmMessage (): {count: any, messages: any[]} {\n    const channelMessages = GlobalStorage.read('channelMessages');\n    if (isEmpty(channelMessages)) return {\n      count: 0,\n      messages: []\n    }\n    const messages = channelMessages.filter((it: any) => it.message_type === \"group_message\");\n    const chatMessages = messages.reduce((collect: any[], value: any) => {\n      const payload = value.payload;\n      const json = JSON.parse(payload);\n      if (json.content) {\n        return collect.concat({\n          account: json.account,\n          content: json.content,\n          ms: value.ms,\n          src: value.src\n        });\n      }\n      return collect;\n    }, []);\n    return {\n      messages: chatMessages,\n      count: chatMessages.length\n    }\n  }\n}\n\nconst GlobalStorage = new CustomStorage();\n// @ts-ignore\nwindow.GlobalStorage = GlobalStorage;\nexport default GlobalStorage;","import {Subject} from 'rxjs';\nimport GlobalStorage from '../utils/custom-storage';\n\nexport const roomTypes = [\n  {value: 0, text: 'home.1v1', path: 'one-to-one'},\n  {value: 1, text: 'home.mini_class', path: 'small-class'},\n  {value: 2, text: 'home.large_class', path: 'big-class'},\n]\n\nexport type GlobalState = {\n  loading: boolean\n  lock: boolean\n  toast: {\n    type: string\n    message: string\n  }\n  dialog: {\n    type: string\n    message: string\n    confirmText?: string\n    cancelText?: string\n  }\n  uploadNotice: {\n    type: string\n    title: string\n  },\n  notice: {\n    text: string\n    reason: string\n  },\n  nativeWindowInfo: {\n    visible: boolean\n    items: any[]\n  },\n  active: string,\n  language: string,\n  newMessageCount: number,\n}\n\nexport class Root {\n  private subject: Subject<GlobalState> | null;\n  public state: GlobalState;\n  public readonly defaultState: GlobalState = {\n    loading: false,\n    toast: {\n      type: '',\n      message: '',\n    },\n    dialog: {\n      type: '',\n      message: '',\n      confirmText: 'confirm',\n      cancelText: 'cancel'\n    },\n    uploadNotice: {\n      type: '',\n      title: '',\n    },\n    notice: {\n      reason: '',\n      text: '',\n    },\n    nativeWindowInfo: {\n      visible: false,\n      items: []\n    },\n    lock: false,\n    active: 'chatroom',\n    language: navigator.language,\n    newMessageCount: 0,\n    ...GlobalStorage.getLanguage(),\n  }\n\n  constructor() {\n    this.subject = null;\n    this.state = this.defaultState;\n  }\n\n  initialize() {\n    this.subject = new Subject<GlobalState>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit (state: GlobalState) {\n    this.subject && this.subject.next(state);\n  }\n\n  updateState(rootState: GlobalState) {\n    this.state = {\n      ...this.state,\n      ...rootState,\n    }\n    this.commit(this.state);\n  }\n\n  showNotice({\n    reason,\n    text,\n  }:{\n    reason: string,\n    text: string\n  }) {\n    this.state = {\n      ...this.state,\n      notice: {\n        text,\n        reason\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeNotice() {\n    this.state = {\n      ...this.state,\n      notice: {\n        text: '',\n        reason: ''\n      }\n    }\n    this.commit(this.state);\n  }\n\n  setNativeWindowInfo({visible, items}: {visible: boolean, items: any[]}) {\n    this.state = {\n      ...this.state,\n      nativeWindowInfo: {\n        visible,\n        items\n      }\n    }\n    this.commit(this.state);\n  }\n\n  showUploadNotice({type, title}: {type: string, title: string}) {\n    this.state = {\n      ...this.state,\n      uploadNotice: {\n        type,\n        title\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeUploadNotice() {\n    this.state = {\n      ...this.state,\n      uploadNotice: {\n        type: '',\n        title: ''\n      }\n    }\n    this.commit(this.state);\n  }\n\n  showToast({type, message}: {type: string, message: string}) {\n    this.state = {\n      ...this.state,\n      toast: {\n        type, message\n      },\n    }\n    this.commit(this.state);\n  }\n\n  showDialog({type, message}: {type: string, message: string}) {\n    this.state = {\n      ...this.state,\n      dialog: {\n        type,\n        message\n      },\n    }\n    this.commit(this.state);\n  }\n\n  removeDialog() {\n    this.state = {\n      ...this.state,\n      dialog: {\n        type: '',\n        message: ''\n      },\n    }\n    this.commit(this.state);\n  }\n\n  showLoading () {\n    this.state = {\n      ...this.state,\n      loading: true\n    }\n    this.commit(this.state);\n  }\n\n  stopLoading () {\n    this.state = {\n      ...this.state,\n      loading: false\n    }\n    this.commit(this.state);\n  }\n\n  getLanguage(): string {\n    return GlobalStorage.read('demo_language')\n  }\n\n  setLanguage(language: string) {\n    this.state = {\n      ...this.state,\n      language,\n    }\n    this.commit(this.state);\n    GlobalStorage.save('demo_language', this.state.language);\n    window.location.reload();\n  }\n\n  setActive(active: string) {\n    if (active !== 'chatroom') {\n      this.state = {\n        ...this.state,\n        active,\n      }\n    } else {\n      this.state = {\n        ...this.state,\n        active,\n        newMessageCount: 0,\n      }\n    }\n    this.commit(this.state);\n  }\n\n  setMessageCount(len: number) {\n    this.state = {\n      ...this.state,\n      newMessageCount: len\n    }\n    this.commit(this.state);\n  }\n\n  lock() {\n    this.state = {\n      ...this.state,\n      lock: true\n    }\n    this.commit(this.state)\n  }\n\n  unlock() {\n    this.state = {\n      ...this.state,\n      lock: false\n    }\n    this.commit(this.state)\n  }\n}\n\nexport const globalStore = new Root();\n\n// @ts-ignore\nwindow.globalStore = globalStore;","const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\nconst build_version = BUILD_VERSION ? BUILD_VERSION : '0.0.1';\n\nconst zhCN: any = {\n  \"screen_share_permission\": \"缺少屏幕共享权限\",\n  \"electron\": {\n    \"start_screen_share_failed\": \"native screen sharing failed\"\n  },\n  \"icon\": {\n    \"setting\": \"设置\",\n    \"upload-log\": \"上传日志\",\n    \"exit-room\": \"退出教室\",\n    \"lang-select\": \"语言切换\",\n  },\n  'doc_center': '文档中心',\n  'upload_picture': '上传图片',\n  'convert_webpage': '转换动态PPT',\n  'convert_to_picture': 'PPT转图片',\n  'upload_audio_video': '上传音视频',\n  'return': {\n    'home': '返回主页',\n  },\n  'control_items': {\n    \"first_page\": \"第一页\",\n    \"prev_page\": \"上一页\",\n    \"next_page\": \"下一页\",\n    \"last_page\": \"最后一页\",\n    \"stop_recording\": \"停止云端录制\",\n    \"recording\": \"开始云端录制\",\n    \"quit_screen_sharing\": \"停止屏幕分享\",\n    \"screen_sharing\": \"开始屏幕分享\",\n    \"delete_current\": \"删除当前\",\n    \"delete_all\": \"删除全部\",\n  },\n  'zoom_control': {\n    'folder': '文档中心',\n    'lock_board': '设置白板跟随',\n    'unlock_board': '取消白板跟随'\n  },\n  'tool': {\n    'selector': '鼠标选择器',\n    'pencil': '画笔',\n    'rectangle': '矩形',\n    'ellipse': '椭圆',\n    'eraser': '橡皮擦',\n    'text': '文字',\n    'color_picker': '调色板',\n    'add': '新增一页',\n    'upload': '上传',\n    'hand_tool': '手抓工具'\n  },\n  'error': {\n    'not_found': '页面找不到',\n    'components': {\n      'paramsEmpty': '参数：{reason}不能为空',\n    }\n  },\n  'whiteboard': {\n    'loading': '加载中...',\n    'global_state_limit': '请不要给白板设置过大的globalState size',\n    'locked_board': '老师正在控制白板，请勿书写',\n    'unlocked_board': '白板已解除锁定。',\n  },\n  'toast': {\n    'upload_log_failure': '上传日志失败，错误类型：{reason}, 详情参考开发者工具',\n    'show_log_id': `请提供你的日志ID: {no}`,\n    'api_login_failured': '房间加入失败, 原因: {reason}',\n    'confirm': '确定',\n    'cancel': '取消',\n    'quit_room': '确定退出课程吗？',\n    'kick': '其他端登录，被踢出房间',\n    'login_failure': '登录房间失败',\n    'whiteboard_lock': '设置白板跟随',\n    'whiteboard_unlock': '取消白板跟随',\n    'canceled_screen_share': '已取消屏幕共享',\n    'screen_sharing_failed': '屏幕分享失败, 原因：{reason}',\n    'recording_failed': '开启云录制失败, 原因：{reason}',\n    'start_recording': '开始云录制',\n    'stop_recording': '结束云录制',\n    'recording_too_short': '录制太短，至少15秒',\n    'rtm_login_failed': '房间登录失败, 请检查网络设置',\n    'rtm_login_failed_reason': '房间登录失败, 原因： {reason}',\n    'replay_failed': '回放失败，请刷新页面重试',\n    'teacher_exists': '该房间老师已存在，请等待30秒或重新创建教室',\n    'student_over_limit': '超出学生最大人数，请等待30秒或重新创建教室',\n    'teacher_and_student_over_limit': '超出学生和老师的最大人数',\n    'teacher_accept_whiteboard': '老师已授权了你白板的权限',\n    'teacher_cancel_whiteboard': '老师已收回了你白板的权限',\n    'teacher_accept_co_video': '老师已允许连麦',\n    'teacher_reject_co_video': '老师已拒绝连麦',\n    'teacher_cancel_co_video': '老师已取消连麦',\n    'student_cancel_co_video': '学生已取消连麦',\n    'student_send_co_video_apply': '\"{reason}\" 学生发起了连麦申请',\n    'student_peer_leave': '\"{reason}\" 离开了',\n    'stop_co_video': '教师停止了\"{reason}\"的连麦',\n    'reject_co_video': '您取消了学生的连麦申请',\n    'close_co_video': '您关闭了学生的连麦',\n    'close_youself_co_video': '你关闭了自己的连麦',\n    'accept_co_video': '您同意了连麦',\n  },\n  'notice': {\n    'student_interactive_apply': `\"{reason}\"想和你连麦`\n  },\n  'chat': {\n    'placeholder': '说点什么',\n    'banned': '禁言中',\n    'send': '发送'\n  },\n  'device': {\n    'camera': '摄像头',\n    'microphone': '麦克风',\n    'speaker': '扬声器',\n    'finish': '完成',\n  },\n  'nav': {\n    'delay': '延迟: ',\n    'network': '网络: ',\n    'cpu': 'CPU: ',\n    'class_end': '课程结束',\n    'class_start': '课程开始'\n  },\n  'home': {\n    'entry-home': '进入教室',\n    'teacher': '老师',\n    'student': '学生',\n    'cover_class': 'cover-cn',\n    'room_name': '房间名',\n    'nickname': '昵称',\n    'room_type': '房间类型',\n    'room_join': '加入房间',\n    'short_title': {\n      'title': '声网云课堂',\n      'subtitle': '由声网提供',\n    },\n    'name_too_long': '名字过长，不得超过20个字符',\n    '1v1': '一对一',\n    'mini_class': '小班课',\n    'large_class': '大班课',\n    'missing_room_name': '缺少房间名',\n    'missing_your_name': '缺少昵称',\n    'missing_password': '缺少房间密码',\n    'missing_role': '\b缺少角色',\n    'account': '姓名',\n    'password': '密码',\n  },\n  'room': {\n    'chat_room': '消息列表',\n    'student_list': '学生列表',\n    'uploading': '上传中...',\n    'converting': '转换中...',\n    'upload_success': '上传成功',\n    'upload_failure': '上传失败，请检查网络',\n    'convert_success': '转换成功',\n    'convert_failure': '转换失败，请检查网络',\n  },\n  'replay': {\n    'loading': '加载中...',\n    'recording': '在录制中',\n    'finished': '录制完成',\n    'finished_recording_to_be_download': '服务端准备下载中',\n    'finished_download_to_be_convert': '服务端准备转换中',\n    'finished_convert_to_be_upload': '服务端准备保存中',\n  },\n  'course_recording': '录制回放',\n  'build_version': `构建版本: ${build_version}`,\n}\n\nexport default zhCN;","const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\nconst build_version = BUILD_VERSION ? BUILD_VERSION : '0.0.1';\n\nconst en = {\n  \"screen_share_permission\": \"Need Electron Screen Capture Permission\",\n  \"electron\": {\n    \"start_screen_share_failed\": \"native screen sharing failed\"\n  },\n  \"icon\": {\n    \"setting\": \"Setting\",\n    \"upload-log\": \"Upload Log\",\n    \"exit-room\": \"Exit Room\",\n    \"lang-select\": \"Switch Language\",\n  },\n  'doc_center': 'Course Document Center',\n  'upload_picture': 'Upload Picture',\n  'convert_webpage': 'Dynamic PPT',\n  'convert_to_picture': 'Static PPT',\n  'upload_audio_video': 'Upload Audio/Video',\n  'return': {\n    'home': 'Back To Home',\n  },\n  'control_items': {\n    \"first_page\": \"First Page\",\n    \"prev_page\": \"Prev Page\",\n    \"next_page\": \"Next Page\",\n    \"last_page\": \"Last Page\",\n    \"stop_recording\": \"Stop Cloud Recording\",\n    \"recording\": \"Start Cloud Recording\",\n    \"quit_screen_sharing\": \"Stop Screen Sharing\",\n    \"screen_sharing\": \"Start Screen Sharing\",\n    \"delete_current\": \"Remove Current\",\n    \"delete_all\": \"Remove All\",\n  },\n  'zoom_control': {\n    'folder': 'Document Center',\n    'lock_board': 'Set Whiteboard Follow',\n    'unlock_board': 'Reset Whiteboard Follow'\n  },\n  'tool': {\n    'selector': 'mouse selector',\n    'pencil': 'penceil',\n    'rectangle': 'rectangle',\n    'ellipse': 'ellipse',\n    'eraser': 'eraser',\n    'text': 'text',\n    'color_picker': 'color picker',\n    'add': 'add new page',\n    'upload': 'upload ',\n    'hand_tool': 'hand selector'\n  },\n  'error': {\n    'not_found': 'Page Not Found',\n    'components': {\n      'paramsEmpty': 'params：{reason} can`t be empty',\n    }\n  },\n  'whiteboard': {\n    'loading': 'Loading...',\n    'global_state_limit': 'globalState size limit size probably overflow',\n    'locked_board': 'The teacher is moving the whiteboard. Please do not draw on it.',\n    'unlocked_board': 'The whiteboard already unlocked',\n  },\n  'toast': {\n    'upload_log_failure': 'Upload Log Failure，ErrorName: {reason}，see more details in devtool',\n    'show_log_id': `Report your log ID: {reason}`,\n    'api_login_failured': 'Join Failured, Reason: {reason}',\n    'confirm': 'Confirm',\n    'cancel': 'Cancel',\n    'quit_room': 'Are you sure to exit the classroom?',\n    'kick': 'kicked',\n    'login_failure': 'login failure',\n    'whiteboard_lock': 'Whiteboard follow',\n    'whiteboard_unlock': 'Whiteboard nofollow',\n    'canceled_screen_share': 'Canceled screen sharing',\n    'screen_sharing_failed': 'Screen sharing failed, reason: {reason}',\n    'recording_failed': 'Start cloud recording failed, reason: {reason}',\n    'start_recording': 'Start cloud recording success',\n    'stop_recording': 'Stop cloud recording success',\n    'recording_too_short': 'Recording too short, at least 15 seconds',\n    'rtm_login_failed': 'login failure, please check your network',\n    'rtm_login_failed_reason': 'login failure, reason: {reason}',\n    'replay_failed': 'Replay Failed please refresh browser',\n    'teacher_exists': 'Teacher already exists, Please waiting for 30s or reopen new class',\n    'student_over_limit': 'Student have reached upper limit, , Please waiting for 30s or rejoin new class',\n    'teacher_and_student_over_limit': 'The number of students and teacher have reached upper limit',\n    'teacher_accept_whiteboard': 'Teacher already grant your whiteboard',\n    'teacher_cancel_whiteboard': 'Teacher already cancel your whiteboard',\n    'teacher_accept_co_video': 'Teacher already accept co-video',\n    'teacher_reject_co_video': 'Teacher already rejected co-video',\n    'teacher_cancel_co_video': 'Teacher already canceled co-video',\n    'student_cancel_co_video': 'Student canceled co-video',\n    'student_peer_leave': '\"{reason}\" Left',\n    'student_send_co_video_apply': '\"{reason}\" send the co-video request',\n    'stop_co_video': 'Stop \"{reason}\" co-video',\n    'reject_co_video': 'Reject co-video',\n    'close_co_video': 'Close co-video',\n    'close_youself_co_video': 'Stop co-video',\n    'accept_co_video': 'Accept co-video',\n  },\n  'notice': {\n    'student_interactive_apply': `\"{reason}\" wants to interact with you`\n  },\n  'chat': {\n    'placeholder': 'Input Message',\n    'banned': 'Banned',\n    'send': 'send'\n  },\n  'device': {\n    'camera': 'Camera',\n    'microphone': 'Microphone',\n    'speaker': 'Speaker',\n    'finish': 'Finish',\n  },\n  'nav': {\n    'delay': 'Delay: ',\n    'network': 'Network: ',\n    'cpu': 'CPU: ',\n    'class_end': 'Class end',\n    'class_start': 'Class start'\n  },\n  'home': {\n    'entry-home': 'Join Classroom',\n    'teacher': 'teacher',\n    'student': 'student',\n    'cover_class': 'cover-en',\n    'room_name': 'Room Name',\n    'nickname': 'Your Name',\n    'room_type': 'Room Type',\n    'room_join': 'Join',\n    'short_title': {\n      'title': 'Agora Cloud Class',\n      'subtitle': 'Powered by agora.io, a leading online learning engagement platform',\n    },\n    'name_too_long': 'name too long, should <= 20 characters',\n    '1v1': 'One to One Classroom',\n    'mini_class': 'Small Classroom',\n    'large_class': 'Lecture Hall',\n    'missing_room_name': 'missing room name',\n    'missing_your_name': 'missing your name',\n    'missing_password': 'missing password',\n    'missing_role': 'missing role',\n    'account': 'Name',\n    'password': 'Password',\n  },\n  'room': {\n    'chat_room': 'Chat Room',\n    'student_list': 'Student List',\n    'uploading': 'Uploading...',\n    'converting': 'Converting...',\n    'upload_success': 'upload success',\n    'upload_failure': 'upload failure, check the network',\n    'convert_success': 'convert success',\n    'convert_failure': 'convert failure, check the network',\n  },\n  'replay': {\n    'loading': 'loading...',\n    'recording': 'In Recording',\n    'finished': 'Finished',\n    'finished_recording_to_be_download': 'Server prepare downloading',\n    'finished_download_to_be_convert': 'Server prepare converting',\n    'finished_convert_to_be_upload': 'Server prepare saving',\n  },\n  'course_recording': 'course recording',\n  'build_version': `build version: ${build_version}`,\n}\n\nexport default en;","import { globalStore } from './stores/global';\nimport {get, isEmpty} from 'lodash';\nimport zhCN from './i18n/zh';\nimport en from './i18n/en';\n\nexport const BUILD_VERSION = process.env.REACT_APP_BUILD_VERSION as string;\n\nexport const t = (name: string, options?: any): string => {\n  const lang = globalStore.state.language.match(/zh/) ? zhCN : en;\n  let content = get(lang, name, null);\n  if (!content) {\n    console.error(`${lang}: ${name} has no match`);\n    return `${lang}.${name}`;\n  }\n\n  if (!isEmpty(options)) {\n    if (options.reason && content.match(/\\{.+\\}/)) {\n      content = content.replace(/\\{.+\\}/, options.reason);\n    }\n  }\n\n  return content;\n}","import React from 'react';\nimport { Theme, RadioGroup, Radio, FormControlLabel, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './role-radio.scss';\nimport { t } from '../i18n';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  radioGroup: {\n    display: 'block',\n    clear: 'both',\n    justifyContent: 'space-between'\n  },\n  required: {\n    fontSize: '12px',\n    color: '#ff0000',\n    lineHeight: '17px',\n    position: 'absolute',\n    top: '23px',\n  }\n}));\n\nexport default function (props: any) {\n  const classes = useStyles();\n  return (\n    <RadioGroup className={classes.radioGroup} row value={props.role} onChange={props.onChange}>\n      <FormControlLabel\n        className={\"custom-radio align-left\"}\n        value=\"teacher\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.teacher\")}\n        labelPlacement=\"end\"\n      />\n      <FormControlLabel\n        className={\"custom-radio align-right\"}\n        value=\"student\"\n        control={<Radio className={\"custom-radio\"} color=\"primary\" />}\n        label={t(\"home.student\")}\n        labelPlacement=\"end\"\n      />\n      {props.requiredText ? <Typography className={classes.required}>{props.requiredText}</Typography> : null}\n    </RadioGroup>\n  )\n}","import React from 'react';\nexport default function ({data, icon, disable, className, onClick, active}: any) {\n  let iconClass = disable ? '' : (icon ? 'icon-btn' : 'icon');\n  iconClass = active ? iconClass + \" active\" : iconClass;\n\n  const dataName = data ? data : ''\n  return (\n    <div className={`${iconClass} ${className}`} onClick={onClick} data-name={dataName}></div>\n  )\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport { Theme, Typography, InputLabel, Input } from '@material-ui/core';\n\nconst useStyles = makeStyles ((theme: Theme) => ({\n  formInput: {\n    '&:after': {\n      borderBottom: '1px solid #44a2fc'\n    }\n  },\n  required: {\n    fontSize: '12px',\n    color: '#ff0000',\n    lineHeight: '17px',\n    position: 'absolute',\n    top: '48px'\n  }\n}));\n\n// const ALPHABETICAL = /^[a-zA-Z0-9]*/\n\nexport default function (props: any) {\n  const classes = useStyles();\n\n  const onChange = (evt: any) => {\n    const val = evt.target.value\n    // const val = evt.target.value.match(ALPHABETICAL)[0];\n    props.onChange(val ? val : '');\n  }\n  return (\n    <>\n      <InputLabel>{props.Label}</InputLabel>\n      <Input className={classes.formInput} value={props.value}\n        onChange={onChange}>\n      </Input>\n      {props.requiredText ? <Typography className={classes.required}>{props.requiredText}</Typography> : null}\n    </>\n  );\n}","import React from 'react';\nimport { Select, InputLabel, MenuItem } from '@material-ui/core';\n// import { t } from '../i18n';\n\nexport interface FormSelectItems {\n  text: string\n}\n\nexport interface FormSelect {\n  items: FormSelectItems[]\n  Label: string\n  value: any\n  onChange: (evt: any) => any\n}\n\nconst FormSelect: React.FC<FormSelect> = ({\n  Label,\n  value,\n  onChange,\n  items\n}) => {\n  return (\n    <>\n      <InputLabel>{Label}</InputLabel>\n      <Select\n        value={value}\n        onChange={onChange}\n      >\n        {items.map((item: any, key: number) => \n          <MenuItem key={key} value={key}>{item.text}</MenuItem>\n        )}\n      </Select>\n    </>\n  );\n}\n\nexport default React.memo(FormSelect);","import React from 'react';\nimport { Select, MenuItem } from '@material-ui/core';\n\nconst LangSelect: React.FC<any> = ({\n  value,\n  onChange,\n  items,\n}) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n    >\n      {items.map((item: any, key: number) => \n        <MenuItem key={key} value={key}>{item.text}</MenuItem>\n      )}\n    </Select>\n  );\n}\n\nexport default React.memo(LangSelect);","console.log(`CURRENT RUNTIME: ${process.env.REACT_APP_RUNTIME_PLATFORM}`);\n\nexport const isElectron = process.env.REACT_APP_RUNTIME_PLATFORM === 'electron'\n\nexport const platform = process.env.REACT_APP_RUNTIME_PLATFORM as string;","import AgoraRTM from 'agora-rtm-sdk';\nimport EventEmitter from 'events';\nimport * as _ from 'lodash';\nimport { resolveMessage, jsonParse } from './helper';\n\nexport const APP_ID = process.env.REACT_APP_AGORA_APP_ID as string;\nconst ENABLE_LOG = process.env.REACT_APP_AGORA_LOG === 'true';\nconst logFilter = ENABLE_LOG ? AgoraRTM.LOG_FILTER_DEBUG : AgoraRTM.LOG_FILTER_OFF;\n\nexport enum RoomMessage {\n  muteAudio = 101,\n  unmuteAudio = 102,\n  muteVideo = 103,\n  unmuteVideo = 104,\n  applyCoVideo = 105,\n  acceptCoVideo = 106,\n  rejectCoVideo = 107,\n  cancelCoVideo = 108,\n  muteChat = 109,\n  unmuteChat = 110,\n  muteBoard = 200,\n  unmuteBoard = 201,\n  lockBoard = 301,\n  unlockBoard = 302,\n  startCourse = 401,\n  endCourse = 402,\n  muteAllChat = 501,\n  unmuteAllChat = 502\n}\n\nexport enum ChatCmdType {\n  chat = 1,\n  roomMemberChanged = 2,\n  roomInfoChanged = 3,\n  coVideoUsersChanged = 4,\n  replay = 5,\n  screenShare = 6,\n  recordStateChanged = 7,\n}\n\nexport enum CoVideoType {\n  studentSendApply = 1,\n  teacherSendReject = 2,\n  // studentCancelApply = 3,\n  teacherSendAccept = 4,\n  teacherSendStop = 5,\n  studentSendStop = 6,\n}\n\nexport interface ChannelBodyParams {\n  account: string\n  content: string\n  recordId: string\n}\n\nexport interface NotifyMessageParams {\n  cmd: ChatCmdType\n  data: ChatMessage | UserMessage | CourseMessage | ReplayMessage\n  enableHistoricalMessaging?: boolean\n}\n\nexport interface CourseMessage {\n  operate: \n    RoomMessage.startCourse | \n    RoomMessage.endCourse | \n    RoomMessage.muteAllChat |\n    RoomMessage.unmuteAllChat |\n    RoomMessage.lockBoard |\n    RoomMessage.unlockBoard |\n    RoomMessage.acceptCoVideo |\n    RoomMessage.cancelCoVideo |\n    RoomMessage.applyCoVideo\n}\n\nexport type ChatMessage = {\n  account: string\n  content: string\n  userId?: string\n}\n\nexport interface ReplayMessage {\n  account: string\n  recordId: string\n}\n\nexport interface UserMessage {\n  uid: string\n  account: string\n  resource: string\n  value: number\n}\n\n\nexport interface ChatBody {\n  account: string\n  content: string\n}\n\nexport interface PeerMessage {\n  uid: string\n  userId: string\n  account: string\n  operate: number\n}\n\nexport interface MessageBody {\n  cmd: RoomMessage\n  text?: string\n  data?: ChatMessage |\n    UserMessage |\n    CourseMessage |\n    PeerMessage |\n    ReplayMessage\n}\n\nexport type SessionProps = {\n  roomType: number,\n  role: string,\n  id: string,\n  room: string,\n  token: string\n}\n\nexport default class AgoraRTMClient {\n\n  private _bus: EventEmitter;\n  public _currentChannel: any;\n  public _currentChannelName: string | any;\n  private _channels: any;\n  private _client: any;\n  private _channelAttrsKey: string | any;\n  public _logged: boolean = false;\n  private _joined: boolean = false;\n\n  constructor () {\n    this._bus = new EventEmitter();\n    this._channels = {};\n    this._currentChannel = null;\n    this._currentChannelName = null;\n    this._channelAttrsKey = null;\n    this._client = null;\n  }\n\n  public removeAllListeners(): any {\n    this._bus.removeAllListeners();\n  }\n\n  destroy (): void {\n    for (let channel of Object.keys(this._channels)) {\n      if (this._channels[channel]) {\n        this._channels[channel].removeAllListeners();\n        this._channels[channel] = null;\n      }\n    }\n    this._currentChannel = null;\n    this._currentChannelName = null;\n    this._client.removeAllListeners();\n  }\n\n  on(evtName: string, cb: (args: any) => void) {\n    this._bus.on(evtName, cb);\n  }\n\n  off(evtName: string, cb: (args: any) => void) {\n    this._bus.off(evtName, cb);\n  }\n\n  async login (appID: string, uid: string, token?: string) {\n    const rtmClient = AgoraRTM.createInstance(appID, { enableLogUpload: ENABLE_LOG, logFilter });\n    try {\n      await rtmClient.login({uid, token});\n      rtmClient.on(\"ConnectionStateChanged\", (newState: string, reason: string) => {\n        this._bus.emit(\"ConnectionStateChanged\", {newState, reason});\n      });\n      rtmClient.on(\"MessageFromPeer\", (message: any, peerId: string, props: any) => {\n        this._bus.emit(\"MessageFromPeer\", {message, peerId, props});\n      });\n      this._client = rtmClient\n      this._logged = true;\n    } catch(err) {\n      rtmClient.removeAllListeners()\n      throw err\n    }\n    return\n  }\n\n  async logout () {\n    if (!this._logged) return;\n    await this._client.logout();\n    this.destroy();\n    this._logged = false;\n    return;\n  }\n\n  async join (channel: string) {\n    const _channel = this._client.createChannel(channel);\n    this._channels[channel] = _channel;\n    this._currentChannel = this._channels[channel];\n    this._currentChannelName = channel;\n    await _channel.join();\n    _channel.on('ChannelMessage', (message: string, memberId: string) => {\n      this._bus.emit('ChannelMessage', {message, memberId});\n    });\n\n    _channel.on('MemberJoined', (memberId: string) => {\n      this._bus.emit('MemberJoined', memberId);\n    });\n\n    _channel.on('MemberLeft', (memberId: string) => {\n      this._bus.emit('MemberLeft', memberId);\n    });\n\n    _channel.on('MemberCountUpdated', (count: number) => {\n      this._bus.emit('MemberCountUpdated', count);\n    })\n\n    _channel.on('AttributesUpdated', (attributes: any) => {\n      this._bus.emit('AttributesUpdated', attributes);\n    });\n    this._joined = true;\n    return;\n  }\n\n  destroyChannel(channel: string) {\n    if (this._channels[channel]) {\n      this._channels[channel].removeAllListeners();\n      this._channels[channel] = null;\n    }\n  }\n\n  async leave (channel: string) {\n    if (this._channels[channel]) {\n      // await this._channels[channel].leave();\n      this._joined = false;\n      this.destroyChannel(channel);\n    }\n  }\n\n  async exit() {\n    try {\n      await this.deleteChannelAttributesByKey();\n    } catch (err) {\n\n    } finally {\n      await this.leave(this._currentChannelName);\n      await this.logout();\n    }\n  }\n\n  async notifyMessage(params: NotifyMessageParams) {\n    const {cmd, data, enableHistoricalMessaging = false} = params\n\n    const body = JSON.stringify({\n      cmd,\n      data,\n    })\n\n    return this._currentChannel.sendMessage({text: body}, {enableHistoricalMessaging})\n  }\n\n  async sendPeerMessage(peerId: string, body: MessageBody) {\n    resolveMessage(peerId, body);\n    console.log(\"[rtm-client] send peer message \", peerId, JSON.stringify(body));\n    let result = await this._client.sendMessageToPeer({text: JSON.stringify(body)}, peerId, {enableHistoricalMessaging: true});\n    return result.hasPeerReceived;\n  }\n\n  async sendRecordMessage(data: Partial<ChannelBodyParams>) {\n    const msgData: ReplayMessage = {\n      account: data.account as string,\n      recordId: data.recordId as string,\n    }\n\n    return this.notifyMessage({\n      cmd: ChatCmdType.replay,\n      data: msgData,\n      enableHistoricalMessaging: false\n    })\n  }\n\n  // async sendChannelMessage(data: Partial<ChannelBodyParams>) {\n  //   const msgData: ChatMessage = {\n  //     account: data.account as string,\n  //     content: data.content as string,\n  //   }\n\n  //   return this.notifyMessage({\n  //     cmd: ChatCmdType.chat,\n  //     data: msgData,\n  //     enableHistoricalMessaging: true\n  //   })\n  // }\n\n  async updateChannelAttrsByKey (key: string, attrs: any) {\n    this._channelAttrsKey = key;\n    const channelAttributes: {[key: string]: string} = {}\n    if (key) {\n      channelAttributes[key] = JSON.stringify(attrs);\n    }\n\n    console.log(\"[rtm-client] updateChannelAttrsByKey \", attrs, \" key \", key, channelAttributes);\n    await this._client.addOrUpdateChannelAttributes(\n      this._currentChannelName,\n      channelAttributes,\n      {enableNotificationToChannelMembers: true});\n  }\n\n  async deleteChannelAttributesByKey() {\n    if (!this._channelAttrsKey) return;\n    await this._client.deleteChannelAttributesByKeys(\n      this._currentChannelName,\n      [this._channelAttrsKey],\n      {enableNotificationToChannelMembers: true}\n    );\n    this._channelAttrsKey = null;\n    return;\n  }\n  \n  async getChannelAttrs (): Promise<string> {\n    let json = await this._client.getChannelAttributes(this._currentChannelName);\n    return JSON.stringify(json);\n  }\n\n  async getChannelMemberCount(ids: string[]) {\n    return this._client.getChannelMemberCount(ids);\n  }\n\n  async queryOnlineStatusBy(accounts: any[]) {\n    let results: any = {\n      teacherCount: 0,\n      totalCount: 0,\n      studentTotalCount: 0\n    };\n    if (accounts.length > 0) {\n      const ids = accounts.map((it: any) => `${it.uid}`);\n      results = await this._client.queryPeersOnlineStatus(ids);\n      if (results && Object.keys(results).length) {\n        const teacher = accounts.find((it: any) => it.role === 'teacher');\n        if (teacher && results[teacher.uid]) {\n          results.teacher = results[teacher.uid];\n          results.teacherCount = 1;\n        }\n        results.totalCount = accounts.filter((it: any) => results[it.uid]).length;\n        results.studentsTotalCount = results.totalCount - results.teacherCount;\n      } else {\n        console.warn(`accounts: ${ids}, cannot get peers online status from [queryPeersOnlineStatus]`);\n      }\n    }\n    return results;\n  }\n\n  async getChannelAttributeBy(channelName: string) {\n    let json = await this._client.getChannelAttributes(channelName);\n    const accounts = [];\n    for (let key of Object.keys(json)) {\n      if (key === 'teacher') {\n        const teacherObj = jsonParse(_.get(json, `${key}.value`));\n        // when teacher is not empty object\n        if(teacherObj && Object.keys(teacherObj).length) {\n          accounts.push({role: 'teacher', ...teacherObj});\n        }\n        continue;\n      }\n      const student = jsonParse(_.get(json, `${key}.value`));\n      // when student is not empty object\n      if (student && Object.keys(student).length) {\n        student.uid = key;\n        accounts.push(student);\n      }\n    }\n    return accounts;\n  }\n}","import React, { useEffect } from 'react';\nimport Icon from '../components/icon';\nimport _ from 'lodash';\nimport { useLocation } from 'react-router';\n\nexport interface IPlatformContext {\n  platform: string\n  NavBtn: React.FC<any>\n  HomeBtn: React.FC<any>\n  SettingBtn: React.FC<any>\n}\n\nexport interface IWindow {\n  ownerName: string\n  name: string\n  windowId: any\n  image: string\n}\n\nconst PlatformContext: React.Context<IPlatformContext> = React.createContext({} as IPlatformContext);\n\nexport const usePlatform = () => React.useContext(PlatformContext);\n\nexport const PlatformContainer: React.FC<React.ComponentProps<any>> = ({ children }: React.ComponentProps<any>) => {\n\n  const platform = _.get(process.env, 'REACT_APP_RUNTIME_PLATFORM', 'web')\n\n\n  const location = useLocation();\n\n  // @ts-ignore\n  const ipc = window.ipc;\n\n  useEffect(() => {\n    if (!ipc) return;\n    if (location.pathname.match(/classroom|replay/)) {\n      ipc.send('resize-window', {width: 990, height: 706});\n    } else {\n      ipc.send('resize-window', {width: 700, height: 500});\n    }\n  }, [location, ipc]);\n\n  const handleClick = (type: string) => {\n\n    if (!ipc) return;\n    \n    switch (type) {\n      case 'minimum': {\n        ipc.send('minimum');\n        return;\n      }\n      case 'maximum': {\n        ipc.send('maximum');\n        return;\n      }\n      case 'close': {\n        ipc.send('close');\n        return;\n      }\n    }\n  }\n\n  const NavBtn: React.FC<any> = () => {\n    if (platform === 'electron') {\n      return (\n        <div className=\"menu-group\">\n          <Icon className=\"icon-minimum\" icon onClick={() => {\n            handleClick(\"minimum\")\n          }} />\n          <Icon className=\"icon-maximum\" icon onClick={() => {\n            handleClick(\"maximum\")\n          }} />\n          <Icon className=\"icon-close\" icon onClick={() => {\n            handleClick(\"close\")\n          }} />\n        </div>\n      )\n    }\n    return null\n  }\n\n  const HomeBtn: React.FC<any> = ({handleSetting}: any) => {\n    if (platform === 'electron') {\n      return (<>\n        <Icon className=\"icon-setting\" onClick={handleSetting} />\n        <div className=\"icon-container\">\n          <Icon className=\"icon-minimum\" onClick={() => {\n            handleClick(\"minimum\")\n          }}/>\n          <Icon className=\"icon-close\" onClick={() => {\n            handleClick('close')\n          }}/>\n        </div>\n      </>)\n    }\n    return null\n  }\n\n  const SettingBtn: React.FC<any> = () => {\n    if (platform === 'electron') {\n      return (\n        <>\n          <Icon className=\"icon-minimum\" onClick={() => {\n            handleClick(\"minimum\")\n          }}/>\n          <Icon className=\"icon-close\" onClick={() => {\n            handleClick('close')\n          }}/>\n        </>\n      )\n    }\n    return null;\n  }\n\n  const value = {\n    platform,\n    NavBtn,\n    HomeBtn,\n    SettingBtn\n  }\n\n  return (\n    <PlatformContext.Provider value={value}>\n      {children}\n    </PlatformContext.Provider>\n  )\n}","export const APP_ID = process.env.REACT_APP_AGORA_APP_ID as string;\nexport const APP_TOKEN = process.env.REACT_APP_AGORA_APP_TOKEN as string;\nexport const ENABLE_LOG = process.env.REACT_APP_AGORA_LOG as string;\n\nexport const RoomKeyIdentifier = 'agora_meeting_room'\nexport const GlobalKeyIdentifier = 'global_identifier'\nexport const UUIDKeyIdentifier = 'agora_meeting_uuid'\nexport const SessionKeyIdentifier = 'agora_demo_session_profile'","import { RoomMessage } from './agora-rtm-client';\nimport OSS from 'ali-oss';\nimport {get} from 'lodash';\n\nexport interface OSSConfig {\n  accessKeyId: string,\n  accessKeySecret: string,\n  // region: string,\n  endpoint: string,\n  bucket: string,\n  folder: string,\n}\n\nexport const ossConfig: OSSConfig = {\n  \"accessKeyId\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_KEY', 'empty-placeholder'),\n  \"accessKeySecret\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_SECRET', 'empty-placeholder'),\n  \"bucket\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_NAME', 'empty-placeholder'),\n  // \"region\": process.env.REACT_APP_YOUR_OWN_OSS_BUCKET_REGION as string,\n  \"endpoint\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_CDN_ACCELERATE', 'empty-placeholder'),\n  \"folder\": get(process.env, 'REACT_APP_YOUR_OWN_OSS_BUCKET_FOLDER', 'empty-placeholder'),\n}\n\n// console.log(\"your oss config \", ossConfig)\n\nexport const ossClient = new OSS(ossConfig);\n\nexport function resolveMessage(peerId: string, { cmd, text }: { cmd: number, text?: string }) {\n  let type = '';\n  switch (cmd) {\n    case RoomMessage.acceptCoVideo:\n      type = 'accept co-video'\n      break;\n    case RoomMessage.rejectCoVideo:\n      type = 'reject co-video'\n      break;\n    case RoomMessage.cancelCoVideo:\n      type = 'cancel co-video'\n      break;\n    case RoomMessage.applyCoVideo:\n      type = 'apply co-video'\n      break;\n    case RoomMessage.muteVideo:\n      type = 'mute video'\n      break;\n    case RoomMessage.muteAudio:\n      type = 'mute audio'\n      break;\n    case RoomMessage.unmuteAudio:\n      type = 'unmute audio'\n      break;\n    case RoomMessage.unmuteVideo:\n      type = 'unmute video'\n      break;\n    default:\n      return console.warn(`[RoomMessage] unknown type, from peerId: ${peerId}`);\n  }\n  console.log(`[RoomMessage] [${type}] from peerId: ${peerId}`)\n}\n\nexport interface UserAttrs {\n  uid: string\n  account: string\n  role: string\n  audio: number\n  video: number\n  chat: number\n  whiteboard_uid?: string\n  link_uid?: number\n  shared_uid?: number\n  mute_chat?: number\n  class_state?: number\n}\n\nexport function resolveMediaState(body: any) {\n  const cmd: number = body.cmd;\n  const mediaState = {\n    key: 'unknown',\n    val: -1,\n  }\n  switch (cmd) {\n    case RoomMessage.muteVideo:\n      mediaState.key = 'video'\n      mediaState.val = 0\n      break\n    case RoomMessage.unmuteVideo:\n      mediaState.key = 'video'\n      mediaState.val = 1\n      break\n    case RoomMessage.muteAudio:\n      mediaState.key = 'audio'\n      mediaState.val = 0\n      break\n    case RoomMessage.unmuteAudio:\n      mediaState.key = 'audio'\n      mediaState.val = 1\n      break\n    case RoomMessage.muteChat:\n      mediaState.key = 'chat'\n      mediaState.val = 0\n      break\n    case RoomMessage.unmuteChat:\n      mediaState.key = 'chat'\n      mediaState.val = 1\n      break\n    default:\n      console.warn(\"[rtm-message] unknown message protocol\");\n  }\n  return mediaState;\n}\n\nexport function genUid(): string {\n  const id = +Date.now() % 1000000;\n  return id.toString();\n}\n\nexport function jsonParse(json: string) {\n  try {\n    return JSON.parse(json);\n  } catch (err) {\n    return {};\n  }\n}\n\nexport function resolvePeerMessage(text: string) {\n  const body = jsonParse(text);\n  return body;\n}\n\nexport const resolveFileInfo = (file: any) => {\n  const fileName = encodeURI(file.name);\n  const fileType = fileName.substring(fileName.length, fileName.lastIndexOf('.'));\n  return {\n    fileName,\n    fileType\n  }\n}\n\nconst level = [\n  'unknown',\n  'excellent',\n  'good',\n  'poor',\n  'bad',\n  'very bad',\n  'down'\n];\n\nexport function NetworkQualityEvaluation(evt: { downlinkNetworkQuality: number, uplinkNetworkQuality: number }) {\n  let defaultQuality = 'unknown';\n  const val = Math.max(evt.downlinkNetworkQuality, evt.uplinkNetworkQuality);\n  return level[val] ? level[val] : defaultQuality;\n}\n\nexport function CustomBtoa(input: any) {\n  let keyStr =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  let output = \"\";\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n\n  while (i < input.length) {\n    chr1 = input[i++];\n    chr2 = i < input.length ? input[i++] : Number.NaN; // Not sure if the index\n    chr3 = i < input.length ? input[i++] : Number.NaN; // checks are needed here\n\n    enc1 = chr1 >> 2;\n    enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n    enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n    enc4 = chr3 & 63;\n\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output +=\n      keyStr.charAt(enc1) +\n      keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) +\n      keyStr.charAt(enc4);\n  }\n  return output;\n}","import { APP_ID } from './config';\nimport EventEmitter from 'events';\nimport { RoomStore } from '../stores/room';\nimport { globalStore } from '../stores/global';\nimport { CustomBtoa } from './helper';\n// @ts-ignore\nexport const AgoraRtcEngine = window.rtcEngine;\n\nif (AgoraRtcEngine) {\n  AgoraRtcEngine.initialize(APP_ID);\n  AgoraRtcEngine.setChannelProfile(1);\n  AgoraRtcEngine.enableVideo();\n  AgoraRtcEngine.enableAudio();\n  AgoraRtcEngine.enableWebSdkInteroperability(true);\n  AgoraRtcEngine.setVideoProfile(43, false);\n  //@ts-ignore\n  window.ipc && window.ipc.once(\"initialize\", (events: any, args: any) => {\n    const logPath = args[0]\n    const videoSourceLogPath = args[2];\n    const videoSourceAddonLogPath = args[3];\n    //@ts-ignore\n    window.videoSourceLogPath = videoSourceLogPath;\n    //@ts-ignore\n    window.videoSourceAddonLogPath = videoSourceAddonLogPath;\n    AgoraRtcEngine.setLogFile(logPath)\n  })\n}\n\n//@ts-ignore\nwindow.ipc && window.ipc.on(\"export-log\", (events: any, args: any) => {\n  //@ts-ignore\n  window.doGzip();\n  //@ts-ignore\n  console.log('doGzip', window.doGzip);\n})\n\nexport interface Stream {\n  uid: number\n}\n\nexport enum StreamType {\n  local,\n  remote,\n  localVideoSource,\n  remoteVideoSource,\n}\n\nexport class AgoraElectronStream {\n  public stream: Stream;\n  public playing: boolean = false;\n  private domID: string;\n  constructor(\n    public uid: number = uid,\n    public type: StreamType = StreamType.remote,\n  ) {\n    this.domID = '';\n    this.stream = {\n      uid: this.uid,\n    }\n  }\n}\n\nexport interface ElectronStreamSpec {\n  streamID: number\n  microphoneId?: string\n  cameraId?: string\n  speakerId?: string\n  speakerVolume?: number\n}\n\nexport class AgoraElectronClient {\n\n  public joined: boolean;\n  private readonly bus: EventEmitter;\n  public localUid: number;\n  public rid: string;\n  public readonly rtcEngine: any\n  public published: boolean;\n  public shared: boolean;\n  private roomStore: RoomStore;\n  subscribeVideoSource: boolean = false;\n\n  constructor(deps: {roomStore: RoomStore}) {\n    this.rtcEngine = AgoraRtcEngine;\n    this.published = false;\n    this.localUid = 0;\n    this.joined = false;\n    this.shared = false;\n    this.rid = '';\n    this.bus = new EventEmitter();\n    this.roomStore = deps.roomStore;\n  }\n\n  private isLocal(uid: number) {\n    return this.localUid === uid;\n  }\n\n  createStream ({streamID, microphoneId, cameraId, speakerId, speakerVolume}: ElectronStreamSpec) {\n    if (microphoneId) {\n      const res = this.rtcEngine.setAudioRecordingDevice(microphoneId);\n      res !== 0 && console.warn(`[createStream] set microphone: ${microphoneId} failed`);\n    }\n\n    if (cameraId) {\n      const res = this.rtcEngine.setVideoDevice(cameraId);\n      res !== 0 && console.warn(`[createStream] set cameraId: ${cameraId} failed`);\n    }\n\n    if (speakerId) {\n      const res = this.rtcEngine.setAudioPlaybackDevice(speakerId);\n      res !== 0 && console.warn(`[creaetStream] set speakerId: ${speakerId}`);\n    }\n\n    if (speakerVolume) {\n      const res = this.rtcEngine.setAudioPlaybackVolume(speakerVolume);\n      res !== 0 && console.warn(`[creaetStream] set setAudioPlaybackVolume: ${speakerVolume}`);\n    }\n\n    return new AgoraElectronStream(streamID, +streamID !== +this.roomStore.state.course.screenId ? StreamType.local : StreamType.localVideoSource);\n  }\n\n  private readonly events: string[] = [\n    'joinedchannel',\n    'userjoined',\n    'removestream',\n    'leavechannel',\n    'audiodevicestatechanged',\n    'videodevicestatechanged',\n    'error',\n    'executefailed',\n    'rtcStats',\n    'networkquality',\n    'audioquality',\n  ]\n\n  private _subscribedEvents: any[] = [];\n  private destroyed: boolean = false;\n\n  joinChannel({\n    uid,\n    channel,\n    dual,\n    token\n  }: {\n    uid: number,\n    channel: string,\n    dual: boolean,\n    token: string\n  }): number {\n    this.localUid = uid;\n    this.rid = channel;\n    const rtcEngine = this.rtcEngine;\n    const events = [\n      // 'joinedchannel',\n      // 'userjoined',\n      // 'removestream',\n      'leavechannel',\n      'error',\n      'executefailed',\n      'rtcStats',\n      'networkquality',\n      'audioquality',\n    ]\n    for (let event of events) {\n      this._subscribedEvents.push(event);\n      rtcEngine.on(event, (...args: any[]) => {\n        this.bus.emit(event, ...args);\n      })\n    }\n    rtcEngine.on('joinedchannel', (channel: string, uid: number) => {\n      const stream = new AgoraElectronStream(uid, +uid !== +this.roomStore.state.course.screenId ? StreamType.local : StreamType.localVideoSource);\n      this.bus.emit('joinedchannel', {stream});\n    })\n    rtcEngine.on('userjoined', (uid: number) => {\n      const stream = new AgoraElectronStream(uid, StreamType.remote);\n      console.log(\"userjoined\", uid)\n      this.bus.emit('userjoined', {stream});\n    })\n    rtcEngine.on('removestream', (uid: number) => {\n      this.bus.emit('removestream', {uid});\n    })\n    if (dual) {\n      rtcEngine.enableDualStreamMode(true);\n    }\n    // default role is audience\n    this.rtcEngine.setClientRole(2);\n    // WARN: TOKEN\n    let res = this.rtcEngine.joinChannel(token, channel, '', this.localUid);\n    if(res === 0) {\n      this.joined = true;\n      this.destroyed = false;\n    }\n    return res;\n  }\n\n  leave() {\n    if (!this.joined) return;\n    const result = this.rtcEngine.leaveChannel();\n    this.joined = false;\n    this.localUid = 0;\n    this.rid = '';\n    return result;\n  }\n\n  on(name: string, cb: (...args: any[]) => void) {\n    this.bus.on(name, cb);\n  }\n\n  off(name: string, cb: (...args: any[]) => void) {\n    this.bus.off(name, cb);\n  }\n\n  destroyClient() {\n    if (this.destroyed) return;\n    for (let event of this._subscribedEvents) {\n      this.rtcEngine.off(event, () => {});\n    }\n    this.bus.removeAllListeners();\n    this.destroyed = true;\n  }\n\n  getScreenShareWindows() {\n    const items = this.rtcEngine.getScreenWindowsInfo()\n    return items\n      .map((item: any) => ({\n        ownerName: item.ownerName,\n        name: item.name,\n        windowId: item.windowId,\n        image: CustomBtoa(item.image),\n      }));\n  }\n\n  async startScreenShare(\n    windowId: number,\n    uid: number,\n    channel: string,\n    token: string,\n    appId: string,\n    rect = {x: 0, y: 0, width: 0, height: 0},\n    param = {width: 0, height: 0, bitrate: 500, frameRate: 15}\n  ): Promise<AgoraElectronStream> {\n    console.log(\"[native] start screen share\", token, uid, appId);\n    const shareClient = this.rtcEngine;\n    return new Promise((resolve, reject) => {\n      shareClient.videoSourceInitialize(APP_ID);\n      shareClient.videoSourceSetChannelProfile(1);\n      shareClient.videoSourceEnableWebSdkInteroperability(true);\n      // shareClient.setVideoRenderDimension(3, SHARE_ID, 1280, 960);\n      shareClient.videoSourceSetVideoProfile(50, false);\n      //@ts-ignore\n      if (window.videoSourceLogPath) {\n        //@ts-ignore\n        shareClient.videoSourceSetLogFile(window.videoSourceLogPath)\n        //@ts-ignore\n        console.log(`[native] videoSourceSetLogFile, videoSourceLogPath: `, window.videoSourceLogPath)\n      }\n      //@ts-ignore\n      // if (window.videoSourceAddonLogPath) {\n      //   //@ts-ignore\n      //   shareClient.videoSourceSetAddonLogFile(window.videoSourceAddonLogPath)\n      //   //@ts-ignore\n      //   console.log(`[native] videoSourceSetAddonLogFile, videoSourceAddonLogPath: `, window.videoSourceAddonLogPath)\n      // }\n      // to adjust render dimension to optimize performance\n      console.log(\"[electron-debug] SHARE_ID\", uid, \" TOKEN: \", token, \" CHANNEL\", channel);\n      shareClient.videoSourceJoin(token, channel, '', uid);\n      if (!shareClient.subscribeVideoSource) {\n        shareClient.once('videoSourceJoinedSuccess', (uid: number) => {\n          shareClient.subscribeVideoSource = false;\n          console.log(\"[electron-debug] videoSource Joined\", uid);\n          // shareClient.startScreenCapture2(windowId, 15, rect, 0);\n          shareClient.videoSourceStartScreenCaptureByWindow(windowId, {x: 0, y: 0, width: 0, height: 0}, {width: 0, height: 0, bitrate: 500, frameRate: 15});\n          shareClient.startScreenCapturePreview();\n          // shareClient.videoSourceSetVideoProfile(43, false);\n          // shareClient.startScreenCapture2(windowId, 15, rect, 0);\n          // shareClient.startScreenCapturePreview();\n          this.shared = true;\n\n          const electronStream = new AgoraElectronStream(uid, StreamType.localVideoSource);\n          resolve(electronStream);\n          shareClient.off('videoSourceJoinedSuccess', () => {});\n        });\n\n        shareClient.subscribeVideoSource = true;\n\n        setTimeout(() => {\n          reject();\n        }, 5000);\n      }\n    })\n  }\n\n  async stopScreenShare() {\n    globalStore.showLoading();\n    let stopPromise = new Promise((resolve, reject) => {\n      const onSuccess = () => {\n        this.roomStore.removeLocalSharedStream();\n        this.rtcEngine.off('videoSourceLeaveChannel', (evt: any) => {});\n        globalStore.stopLoading();\n      }\n\n      const onFailure = () => {\n        this.roomStore.removeLocalSharedStream();\n        this.rtcEngine.off('videoSourceLeaveChannel', (evt: any) => {});\n        globalStore.stopLoading();\n      }\n\n      // this.rtcEngine.once('videoSourceLeaveChannel', (evt: any) => {\n      //   onSuccess();\n      // });\n      // this.rtcEngine.videoSourceLeave();\n      this.rtcEngine.videoSourceRelease();\n      this.shared = false;\n      resolve(onSuccess());\n      // setTimeout(() => {\n      //   reject(onFailure())\n      // }, 5000)\n    })\n\n    return await stopPromise;\n  }\n\n  releaseScreenShare() {\n    this.roomStore.removeLocalSharedStream();\n    this.rtcEngine.videoSourceLeave()\n    this.rtcEngine.videoSourceRelease();\n    this.rtcEngine.removeAllListeners();\n    this.shared = false;\n    this.rtcEngine.subscribeVideoSource = false;\n  }\n\n  exit () {\n    try {\n      this.leave();\n    } catch(err) {\n      throw err;\n    } finally {\n      this.destroyClient();\n    }\n  }\n\n  publish() {\n    this.published = true;\n    const res = this.rtcEngine.setClientRole(1);\n    return res;\n  }\n\n  unpublish() {\n    this.published = false;\n    const res = this.rtcEngine.setClientRole(2);\n    return res;\n  }\n}\n\n// export const nativeRTCClient = roomStore.rtcClient as AgoraElectronClient;","import EventEmitter from 'events';\nimport AgoraRTC from 'agora-rtc-sdk';\n\nexport type DeviceInfo = {\n  cameraCanUse: boolean\n  microphoneCanUse: boolean\n  devices: Device[]\n}\n\nAgoraRTC.Logger.enableLogUpload();\nAgoraRTC.Logger.setLogLevel(AgoraRTC.Logger.DEBUG);\nexport interface AgoraStreamSpec {\n  streamID: number\n  video: boolean\n  audio: boolean\n  mirror?: boolean\n  screen?: boolean\n  microphoneId?: string\n  cameraId?: string\n  screenAudio?: boolean\n  audioOutput?: {\n    volume: number\n    deviceId: string\n  }\n}\n\nconst streamEvents: string[] = [\n  'accessAllowed', \n  'accessDenied',\n  'stopScreenSharing',\n  'videoTrackEnded',\n  'audioTrackEnded',\n  'player-status-changed'\n];\n\nconst clientEvents: string[] = [\n  'stream-published',\n  'stream-added',\n  'stream-removed',\n  'stream-subscribed',\n  'peer-online',\n  'peer-leave',\n  'error',\n  'network-type-changed',\n  'network-quality',\n  'exception',\n  'onTokenPrivilegeWillExpire',\n  'onTokenPrivilegeDidExpire',\n]\n\nexport class AgoraRTCClient {\n\n  private streamID: any;\n  public _init: boolean = false;\n  public _joined: boolean = false;\n  public _published: boolean = false;\n  private _internalTimer: NodeJS.Timeout | any;\n  public _client: any = AgoraRTC.createClient({mode: 'live', codec: 'vp8'});\n  public _bus: EventEmitter = new EventEmitter();\n  public _localStream: any = null;\n  public _streamEvents: string[];\n  public _clientEvents: string[];\n  public _addEventListener: boolean = false;\n\n  constructor () {\n    this.streamID = null;\n    this._streamEvents = [];\n    this._clientEvents = [];\n  }\n\n  // init rtc client when _init flag is false;\n  async initClient(appId: string) {\n    if (this._init) return;\n    let prepareInit = new Promise((resolve, reject) => {\n      this._init === false && this._client.init(appId, () => {\n        this._init = true;\n        resolve()\n      }, reject);\n    })\n    await prepareInit;\n  }\n\n  // create rtc client;\n  async createClient(appId: string, enableRtt?: boolean) {\n    await this.initClient(appId);\n    this.subscribeClientEvents();\n    if (enableRtt) {\n      this._internalTimer = setInterval(() => {\n        this._client.getTransportStats((stats: any) => {\n          const RTT = stats.RTT ? stats.RTT : 0;\n          this._bus.emit('watch-rtt', RTT);\n        });\n      }, 100);\n    }\n  }\n\n  destroyClient(): void {\n    this.unsubscribeClientEvents();\n  }\n\n  subscribeClientEvents() {\n    if (this._addEventListener) return\n    this._addEventListener = true\n    for (let evtName of clientEvents) {\n      this._clientEvents.push(evtName);\n      this._client.on(evtName, (args: any) => {\n        this._bus.emit(evtName, args);\n      });\n    }\n  }\n\n  unsubscribeClientEvents() {\n    if (this._addEventListener) {\n      for (let evtName of this._clientEvents) {\n        this._client.off(evtName, () => {});\n        this._clientEvents = this._clientEvents.filter((it: any) => it === evtName);\n      }\n      this._addEventListener = false\n    }\n  }\n\n  subscribeLocalStreamEvents() {\n    for (let evtName of streamEvents) {\n      this._streamEvents.push(evtName);\n      this._localStream.on(evtName, (args: any) => {\n        this._bus.emit(evtName, args);\n      });\n    }\n  }\n\n  unsubscribeLocalStreamEvents() {\n    if (this._localStream) {\n      for (let evtName of this._streamEvents) {\n        this._localStream.removeEventListener(evtName, (args: any[]) => {});\n        this._streamEvents = this._streamEvents.filter((it: any) => it === evtName);\n      }\n    }\n  }\n\n  renewToken(newToken: string) {\n    if (!this._client) return console.warn('renewToken is not permitted, checkout your instance');\n    this._client.renewToken(newToken);\n  }\n\n  removeAllListeners() {\n    console.log('[agora-rtc] prepare remove all event listeners')\n    this.unsubscribeClientEvents();\n    this._bus.removeAllListeners();\n    console.log('[agora-rtc] remove all event listeners');\n  }\n\n  // subscribe\n  on(evtName: string, cb: (args: any) => void) {\n    this._bus.on(evtName, cb);\n  }\n\n  // unsubscribe\n  off(evtName: string, cb: (args: any) => void) {\n    this._bus.off(evtName, cb);\n  }\n\n  async publish() {\n    return new Promise((resolve, reject) => {\n      if (this._published) {\n        return resolve();\n      }\n      this._client.publish(this._localStream, (err: any) => {\n        reject(err);\n      })\n      setTimeout(() => {\n        resolve();\n        this._published = true;\n      }, 300);\n    })\n  }\n\n  async unpublish() {\n    return new Promise((resolve, reject) => {\n      if (!this._published || !this._localStream) {\n        return resolve();\n      }\n      this._client.unpublish(this._localStream, (err: any) => {\n        reject(err);\n      })\n      setTimeout(() => {\n        resolve();\n        this.destroyLocalStream();\n        this._published = false;\n      }, 300);\n    })\n  }\n\n  setRemoteVideoStreamType(stream: any, streamType: number) {\n    this._client.setRemoteVideoStreamType(stream, streamType);\n  }\n\n  async enableDualStream() {\n    return new Promise((resolve, reject) => {\n      this._client.enableDualStream(resolve, reject);\n    });\n  }\n\n  createLocalStream(data: AgoraStreamSpec): Promise<any> {\n    this._localStream = AgoraRTC.createStream({...data, mirror: false});\n    return new Promise((resolve, reject) => {\n      this._localStream.init(() => {\n        this.streamID = data.streamID;\n        this.subscribeLocalStreamEvents();\n        if (data.audioOutput && data.audioOutput.deviceId) {\n          this.setAudioOutput(data.audioOutput.deviceId).then(() => {\n            console.log('setAudioOutput success', data.audioOutput)\n          }).catch((err: any) => {\n            console.warn('setAudioOutput failed', err, JSON.stringify(err))\n          })\n        }\n        resolve();\n      }, (err: any) => {\n        reject(err);\n      })\n    });\n  }\n\n  destroyLocalStream () {\n    this.unsubscribeLocalStreamEvents();\n    if(this._localStream) {\n      if (this._localStream.isPlaying()) {\n        this._localStream.stop();\n      }\n      this._localStream.close();\n    }\n    this._localStream = null;\n    this.streamID = 0;\n  }\n\n  async join (uid: number, channel: string, token?: string) {\n    return new Promise((resolve, reject) => {\n      this._client.join(token, channel, +uid, resolve, reject);\n    })\n  }\n\n  async leave () {\n    if (this._client) {\n      return new Promise((resolve, reject) => {\n        this._client.leave(resolve, reject);\n      })\n    }\n  }\n\n  setAudioOutput(speakerId: string) {\n    return new Promise((resolve, reject) => {\n      if (this._client) {\n        this._client.setAudioOutput(speakerId, resolve, reject);\n        return\n      }\n      resolve()\n    })\n  }\n\n  setAudioVolume(volume: number) {\n    this._client.setAudioVolume(volume);\n  }\n\n  subscribe(stream: any) {\n    this._client.subscribe(stream, {video: true, audio: true}, (err: any) => {\n      console.log('[rtc-client] subscribe failed: ', JSON.stringify(err));\n    });\n  }\n\n  destroy (): void {\n    this._internalTimer && clearInterval(this._internalTimer);\n    this._internalTimer = null;\n    this.destroyLocalStream();\n    this.removeAllListeners();\n  }\n\n  async exit () {\n    try {\n      await this.leave();       \n    } catch (err) {\n      throw err;\n    } finally {\n      this.destroy();\n    }\n  }\n\n  getDevices (): Promise<DeviceInfo> {\n    return new Promise((resolve, reject) => {\n      AgoraRTC.getDevices((devices: any) => {\n        const _devices: any[] = [];\n        devices.forEach((item: any) => {\n          _devices.push({deviceId: item.deviceId, kind: item.kind, label: item.label});\n        })\n        resolve({\n          cameraCanUse: devices.filter((it: any) => it.kind === 'videoinput').length > 0 ? true : false,\n          microphoneCanUse: devices.filter((it: any) => it.kind === 'audioinput').length > 0 ? true : false,\n          devices: _devices,\n        });\n      }, (err: any) => {\n        reject(err);\n      });\n    })\n  }\n\n  async forceGetDevices (): Promise<DeviceInfo> {\n    const tempAudioStream = AgoraRTC.createStream({ audio: true, video: false })\n    const tempVideoStream = AgoraRTC.createStream({ audio: false, video: true })\n\n    const audioPermissionOK = new Promise(resolve => {\n      tempAudioStream.init(() => resolve(null), (err: any) => resolve(err))\n    })\n    const videoPermissionOK = new Promise(resolve => {\n      tempVideoStream.init(() => resolve(null), (err: any) => resolve(err))\n    })\n\n    try {\n      let [microphone, camera] = await Promise.all([audioPermissionOK, videoPermissionOK])\n      let result = await this.getDevices()\n\n      if (microphone !== null) {\n        result.microphoneCanUse = false\n        console.warn(\"create audio temp stream failed!\", microphone)\n      }\n      if (camera !== null) {\n        result.cameraCanUse = false\n        console.warn(\"create video temp stream failed!\", camera)\n      }\n      \n      return result\n    } catch (err) {\n      throw err\n    } finally {\n      tempAudioStream.close()\n      tempVideoStream.close()\n    }\n  }\n}","import { AgoraRTCClient, AgoraStreamSpec, DeviceInfo } from './agora-rtc-client';\nimport { roomStore, RoomStore } from '../stores/room';\nimport { isEmpty } from 'lodash';\nimport EventEmitter from 'events';\nimport AgoraRTC from 'agora-rtc-sdk';\nimport { APP_ID } from './config';\n\nexport const createAudioStream = (microphoneId: string) => {\n  const streamInitPromise = new Promise((resolve, reject) => {\n    const stream = AgoraRTC.createStream({\n      video: false,\n      audio: true,\n      microphoneId\n    })\n    stream.init(\n      () => resolve(stream),\n      (err: any) => reject(err)\n    )\n  })\n  return streamInitPromise\n}\n\nexport const createVideoStream = (cameraId: string) => {\n  const streamInitPromise = new Promise((resolve, reject) => {\n    const stream = AgoraRTC.createStream({\n      video: true,\n      audio: false,\n      cameraId\n    })\n    stream.init(\n      () => resolve(stream),\n      (err: any) => reject(err)\n    )\n  })\n  return streamInitPromise\n}\n\nasync function getConnectedDevices(type: string) {\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  return devices.filter(device => device.kind === type)\n}\n\nexport const getCameraDevices = async () => {\n  const agoraVideoStream = AgoraRTC.createStream({video: true, audio: false})\n  try {\n    const requestVideoPermissionPromise = new Promise((resolve, reject) => {\n      agoraVideoStream.init(() => resolve(null), (err: any) => reject(err))\n    })\n    await requestVideoPermissionPromise\n    let videoDevices = await getConnectedDevices('videoinput');\n    return videoDevices.map((device: any, idx: number) => ({\n      deviceId: device.deviceId,\n      text: device.label ? device.label : `camera-${idx}`\n    }))\n  } catch (err) {\n    console.warn('create video stream failed!', err)\n    throw err\n  } finally {\n    agoraVideoStream.close()\n  }\n}\n\nexport const getMicrophoneDevices = async () => {\n  const agoraAudioStream = AgoraRTC.createStream({video: false, audio: true})\n  try {\n    const requestVideoPermissionPromise = new Promise((resolve, reject) => {\n      agoraAudioStream.init(() => resolve(null), (err: any) => reject(err))\n    })\n    await requestVideoPermissionPromise\n    let videoDevices = await getConnectedDevices('audioinput');\n    return videoDevices.map((device: any, idx: number) => ({\n      deviceId: device.deviceId,\n      text: device.label ? device.label : `microphone-${idx}`\n    }))\n  } catch (err) {\n    console.warn('create audio stream failed!', err)\n    throw err\n  } finally {\n    agoraAudioStream.close()\n  }\n}\n\nexport class AgoraWebClient {\n\n  public readonly rtc: AgoraRTCClient;\n  public shareClient: AgoraRTCClient | any;\n  public localUid: number;\n  public channel: string;\n  public readonly bus: EventEmitter;\n  public shared: boolean;\n  public joined: boolean;\n  public cameraCanUse: boolean;\n  public microphoneCanUse: boolean;\n  public forceGetDevice: boolean;\n  public published: boolean;\n  public tmpStream: any;\n\n  private roomStore: RoomStore;\n\n  constructor(deps: {roomStore: RoomStore}) {\n    this.localUid = 0;\n    this.channel = '';\n    this.rtc = new AgoraRTCClient();\n    this.bus = new EventEmitter();\n    this.shared = false;\n    this.shareClient = null;\n    this.tmpStream = null;\n    this.joined = false;\n    this.published = false;\n\n    this.cameraCanUse = false;\n    this.microphoneCanUse = false;\n    this.forceGetDevice = false;\n    \n    this.roomStore = deps.roomStore;\n  }\n\n  async getDevices () {\n    const client = new AgoraRTCClient()\n    let deviceResult: DeviceInfo = {\n      cameraCanUse: this.cameraCanUse,\n      microphoneCanUse: this.microphoneCanUse,\n      devices: []\n    }\n    try {\n      if (!this.forceGetDevice) {\n        deviceResult = await client.forceGetDevices()\n        this.forceGetDevice = true\n      } else {\n        deviceResult = await client.getDevices()\n      }\n      const {cameraCanUse, microphoneCanUse, devices} = deviceResult\n\n      this.cameraCanUse = cameraCanUse\n      this.microphoneCanUse = microphoneCanUse\n\n      const cameraList = devices.filter((it: any) => it.kind === 'videoinput')\n      const microphoneList = devices.filter((it: any) => it.kind === 'audioinput')\n\n      if (!cameraList.length) {\n        console.warn('cameraList is empty', devices)\n      }\n\n      if (!microphoneList.length) {\n        console.warn('microphoneList is empty', devices)\n      }\n\n      // const cameraId = cameraList[0].deviceId\n      // const microphoneId = microphoneList[0].deviceId\n      await client.initClient(APP_ID)\n      // const params = {\n      //   streamID: 0,\n      //   audio: true,\n      //   video: true,\n      //   screen: false,\n      //   microphoneId,\n      //   cameraId,\n      // }\n      // await client.createLocalStream(params)\n      return devices\n    } catch(err) {\n      throw err\n    } finally {\n      // client.destroyLocalStream()\n    }\n  }\n\n\n  async joinChannel({\n    uid, channel, dual, token, appId\n  }: {\n    uid: number,\n    channel: string,\n    dual: boolean,\n    token: string,\n    appId: string\n  }) {\n    this.localUid = +uid;\n    this.channel = channel;\n    console.log('channel', channel, 'dual', dual, this.localUid, appId)\n    await this.rtc.createClient(appId, true);\n    await this.rtc.join(this.localUid, channel, token);\n    dual && await this.rtc.enableDualStream();\n    this.joined = true;\n    roomStore.setRTCJoined(true);\n    console.log('join web agora sdk rtc success')\n  }\n\n  async leaveChannel() {\n    this.localUid = 0;\n    this.channel = '';\n    try {\n      await this.unpublishLocalStream();\n      await this.rtc.leave();\n      this.joined = false;\n      roomStore.setRTCJoined(false);\n    } catch (err) {\n      throw err;\n    } finally {\n      this.rtc.destroy();\n      this.rtc.destroyClient();\n    }\n  }\n\n  async enableDualStream() {\n    return this.rtc.enableDualStream();\n  }\n\n  async publishLocalStream(data: AgoraStreamSpec) {\n    console.log(' publish local stream ', this.published);\n    if (this.published) {\n      await this.unpublishLocalStream();\n      console.log('[agora-web] unpublished', this.published);\n    }\n\n    if (!data.cameraId || !data.microphoneId) {\n      let devices = await this.getDevices()\n      if (!data.cameraId) {\n        data.cameraId = devices.filter((it: any) => it.kind === 'videoinput')[0].deviceId\n      }\n      if (!data.microphoneId) {\n        data.microphoneId = devices.filter((it: any) => it.kind === 'audioinput')[0].deviceId\n      }\n    }\n\n    await this.rtc.createLocalStream(data);\n    await this.rtc.publish();\n    this.published = true;\n  }\n\n  async unpublishLocalStream() {\n    console.log('[agora-web] invoke unpublishStream');\n    await this.rtc.unpublish();\n    this.published = false;\n  }\n\n  async startScreenShare ({\n    uid, channel, token, appId\n  }: {\n    uid: number,\n    channel: string,\n    token: string,\n    appId: string,\n  }) {\n    console.log('startScreenShare ', uid, channel, token, appId)\n    const shareClient = new AgoraRTCClient();\n    try {\n      await shareClient.createLocalStream({\n        video: false,\n        audio: false,\n        screen: true,\n        screenAudio: true,\n        streamID: uid,\n        microphoneId: '',\n        cameraId: ''\n      })\n      await shareClient.createClient(appId);\n      await shareClient.join(uid, channel, token);\n      await shareClient.publish();\n      this.shared = true;\n      this.shareClient = shareClient\n    } catch(err) {\n      throw err\n    }\n  }\n\n  async stopScreenShare () {\n    await this.shareClient.unpublish();\n    await this.shareClient.leave();\n    this.shareClient.destroy();\n    this.shareClient.destroyClient();\n    this.shared = false;\n    this.shareClient = undefined\n  }\n\n  async exit () {\n    const errors: any[] = [];\n    try {\n      await this.leaveChannel();\n    } catch(err) {\n      errors.push({'rtcClient': err});\n    }\n    if (this.shared === true) {\n      try {\n        await this.shareClient.unpublish();\n        await this.shareClient.leave();\n      } catch (err) {\n        errors.push({'shareClient': err});\n      }\n    }\n    if (this.shareClient) {\n      try {\n        this.shareClient.destroy();\n        this.shareClient.destroyClient();\n      } catch(err) {\n        errors.push({'shareClient': err});\n      }\n    }\n    if (!isEmpty(errors)) {\n      throw errors;\n    }\n  }\n\n  async createPreviewStream({cameraId, microphoneId, speakerId}: any) {\n    const tmpStream = AgoraRTC.createStream({\n      video: true,\n      audio: true,\n      screen: false,\n      cameraId,\n      microphoneId,\n      speakerId\n    });\n\n    if (this.tmpStream) {\n      this.tmpStream.isPlaying() && this.tmpStream.stop();\n      this.tmpStream.close();\n    }\n\n    return new Promise((resolve, reject) => {\n      tmpStream.init(() => {\n        this.tmpStream = tmpStream;\n        resolve(tmpStream);\n      }, (err: any) => {\n        reject(err);\n      })\n    });\n  }\n\n  subscribe(stream: any) {\n    this.rtc.subscribe(stream);\n  }\n\n  setRemoteVideoStreamType(stream: any, type: number) {\n    this.rtc.setRemoteVideoStreamType(stream, type);\n  }\n}","import {globalStore} from '../stores/global'\nimport GlobalStorage from '../utils/custom-storage';\n\nconst key = 'demo-i18n-error'\n\nexport function setIntlError (payload: any) {\n  if (payload) {\n    GlobalStorage.save(key, payload)\n  }\n}\n\nfunction _getIntlError (error: string) {\n  try {\n    const locale = globalStore.getLanguage().match(/^zh/) ? 'zh-cn' : 'en-us';\n    const rawData: any = GlobalStorage.read(key)\n    const json = rawData || {}\n    return json[locale][error]\n  } catch(err) {\n    console.warn(err)\n    return null\n  }\n}\n\nexport function getIntlError (errorCode: string) {\n  const res = _getIntlError(errorCode)\n  // TODO: return errorCode when error message not reached \n  // TODO: 处理错误码\n  if (!res) {\n    return errorCode\n  }\n  return res;\n}","import { globalStore } from \"../stores/global\";\nimport { getIntlError } from '../services/intl-error-helper';\n\nconst FETCH_TIMEOUT = 10000\n\n// const delay = 100;\n\nexport async function Fetch (input: RequestInfo, init?: RequestInit, retryCount: number = 0): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const onResponse = (response: Response) => {\n      if (!response.ok) {\n        reject(new Error(response.statusText))\n      }\n      return response.json().then(resolve).catch(reject)\n    }\n\n    const onError = (error: any) => {\n      // retryCount--;\n      // if (retryCount) {\n      //   setTimeout(fetchRequest, delay);\n      // } else {\n        reject(error);\n      // }\n    }\n\n    const rescueError = (error: any) => {\n      console.warn(error)\n      throw error;\n    }\n\n    function fetchRequest() {\n      return fetch(input, init)\n        .then(onResponse)\n        .catch(onError)\n        .catch(rescueError)\n    }\n\n    fetchRequest();\n\n    if (FETCH_TIMEOUT) {\n      const err = new Error(\"request timeout\")\n      setTimeout(reject, FETCH_TIMEOUT, err)\n    }\n  })\n}\n\nexport async function AgoraFetch(input: RequestInfo, init?: RequestInit, retryCount: number = 0) {\n  try {\n    return await Fetch(input, init, retryCount);\n  } catch(err) {\n    if (err && err.message === 'request timeout') {\n      const code = 408\n      const error = getIntlError(`${code}`)\n      const isErrorCode = `${error}` === `${code}`\n      globalStore.showToast({\n        type: 'eduApiError',\n        message: isErrorCode ? `request timeout` : error\n      })\n      return {code, msg: null, response: null}\n    }\n    throw err\n  }\n}","import { Subject } from 'rxjs';\nexport class RouterHistoryEntity {\n  private subject: Subject<any> | null;\n  public state: any;\n\n  public readonly defaultState: any = {\n    state: 'ready',\n    history: null,\n  }\n\n  constructor() {\n    this.subject = null;\n    this.state = this.defaultState;\n  }\n\n  initialize() {\n    this.subject = new Subject<any>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit (state: any) {\n    this.subject && this.subject.next(state);\n  }\n\n  setHistory(history: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      history,\n    }\n    this.commit(this.state)\n  }\n\n  getHistory() {\n    if (!this.state) return\n    return this.state.history\n  }\n}\n\nexport const historyStore = new RouterHistoryEntity();\n\n// TODO: Please remove it before release in production\n// 备注：请在正式发布时删除操作的window属性\n//@ts-ignore\nwindow.historyStore = historyStore","import { BUILD_VERSION, t } from './../i18n';\nimport { AgoraFetch } from \"../utils/fetch\";\nimport { ClassState, AgoraUser, Me } from \"../stores/room\";\nimport {Map} from 'immutable'\nimport {get} from 'lodash'\nimport { getIntlError, setIntlError } from \"./intl-error-helper\";\nimport { globalStore } from \"../stores/global\";\nimport { historyStore } from './../stores/history';\nimport OSS from \"ali-oss\";\nimport axios from 'axios';\n /* eslint-disable */ \nimport Log from '../utils/LogUploader';\n\nconst whiteboardGenerateTokenApiEndpoint = process.env.REACT_APP_YOUR_BACKEND_WHITEBOARD_API as string;\n\nexport interface UserAttrsParams {\n  userId: string\n  enableChat: number\n  enableVideo: number\n  enableAudio: number\n  grantBoard: number\n  // coVideo?: number\n}\n\nconst APP_ID: string = process.env.REACT_APP_AGORA_APP_ID as string;\nconst PREFIX: string = process.env.REACT_APP_AGORA_EDU_ENDPOINT_PREFIX as string;\nconst AUTHORIZATION: string = process.env.REACT_APP_AGORA_RESTFULL_TOKEN as string;\n\nconst AgoraFetchJson = async ({url, method, data, token, full_url}:{url?: string, method: string, data?: any, token?: string, full_url?: string}) => {  \n  const opts: any = {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Basic ${AUTHORIZATION!.replace(/basic\\s+|basic/i, '')}`\n    }\n  }\n\n  if (token) {\n    opts.headers['token'] = token;\n  }\n  if (data) {\n    opts.body = JSON.stringify(data);\n  }\n\n  let resp = undefined;\n  if (full_url) {\n    resp = await AgoraFetch(`${full_url}`, opts);\n  } else {\n    resp = await AgoraFetch(`${PREFIX}${url}`, opts);\n  }\n  const {code, msg, data: responseData} = resp\n\n  if (code !== 0 && code !== 408) {\n    const error = getIntlError(`${code}`)\n    const isErrorCode = `${error}` === `${code}`\n    globalStore.showToast({\n      type: 'eduApiError',\n      message: isErrorCode ? `${msg}` : error\n    })\n    if (code === 401 || code === 1101012) {\n      // historyStore.state.history.goBack()\n      historyStore.state.history.push('/')\n      return\n    }\n    throw {api_error: error, isErrorCode}\n  }\n\n  return responseData\n}\n\nexport interface EntryParams {\n  userName: string\n  roomName: string\n  roomUuid: string\n  userUuid: string\n  type: number\n  role: number\n}\n\nexport type RoomParams = Partial<{\n  muteAllChat: boolean\n  lockBoard: number\n  courseState: number\n  [key: string]: any\n}>\n\ntype FileParams = {\n  file: any,\n  key: string,\n  host: string,\n  policy: any,\n  signature: any,\n  callback: any,\n  accessid: string\n}\n\nconst uploadLogToOSS = async ({\n  file,\n  key,\n  host,\n  policy,\n  signature,\n  callback,\n  accessid\n}: FileParams) => {\n  const formData = new FormData()\n  formData.append('name', 'test.log')\n  formData.append('key', key)\n  formData.append('file', file)\n  formData.append('policy',policy)\n  formData.append('OSSAccessKeyId',accessid)\n  formData.append('success_action_status','200')\n  formData.append('callback',callback)\n  formData.append('signature',encodeURIComponent(signature).replace(/%20/g,'+'))\n  return await axios.post(host, formData, {\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded'}\n  })\n}\n\nexport class AgoraEduApi {\n\n  appID: string = APP_ID;\n  roomId: string = '';\n  public _userToken: string = '';\n\n  public get userToken(): string {\n    const userToken = window.sessionStorage.getItem(\"edu-userToken\") as string || '';\n    return userToken;\n  }\n\n  public set userToken(token: string) {\n    window.sessionStorage.setItem(\"edu-userToken\", token)\n  }\n  \n  recordId: string = '';\n\n  // fetch stsToken\n  // 获取 stsToken\n  async fetchStsToken(roomId: string, fileExt: string) {\n    // NOTE: demo feedback only\n    const appCode = 'edu-demo'\n    const _roomId = roomId ? roomId : 0;\n    let data = await AgoraFetchJson({\n      url: `/v1/log/params?appCode=${appCode}&osType=${3}&terminalType=${3}&appVersion=${BUILD_VERSION}&roomId=${_roomId}&fileExt=${fileExt}&appId=${this.appID}`,\n      method: 'GET',\n    })\n\n    return {\n      bucketName: data.bucketName as string,\n      callbackBody: data.callbackBody as string,\n      callbackContentType: data.callbackContentType as string,\n      accessKeyId: data.accessKeyId as string,\n      accessKeySecret: data.accessKeySecret as string,\n      securityToken: data.securityToken as string,\n      ossKey: data.ossKey as string,\n    }\n  }\n\n  async uploadToOss(roomId: string, file: any, ext: string) {\n    let {\n      bucketName,\n      callbackBody,\n      callbackContentType,\n      accessKeyId,\n      accessKeySecret,\n      securityToken,\n      ossKey\n    } = await this.fetchStsToken(roomId, ext);\n    const ossParams = {\n      bucketName,\n      callbackBody,\n      callbackContentType,\n      accessKeyId,\n      accessKeySecret,\n      securityToken,\n    }\n    const ossClient = new OSS({\n      accessKeyId: ossParams.accessKeyId,\n      accessKeySecret: ossParams.accessKeySecret,\n      stsToken: ossParams.securityToken,\n      bucket: ossParams.bucketName,\n      secure: true,\n      // TODO: 请传递你自己的oss endpoint\n      // TODO: Please use your own oss endpoint\n      endpoint: 'oss-accelerate.aliyuncs.com',\n    })\n\n    const url = `${PREFIX}/v1/log/sts/callback`\n    try {\n      return await ossClient.put(ossKey, file, {\n        callback: {\n          url: `${PREFIX}/v1/log/sts/callback`,\n          body: callbackBody,\n          contentType: callbackContentType,\n        }\n      });\n    } catch(err) {\n      globalStore.showToast({\n        type: 'oss',\n        message: t(\"toast.upload_log_failure\", {reason: err.name})\n      })\n      throw err\n    }\n  }\n\n  async uploadZipLogFile(\n    roomId: string,\n    file: any\n  ) {\n    const res = await this.uploadToOss(roomId, file, 'zip')\n    return res;\n  }\n\n  // upload log\n  async uploadLogFile(\n    roomId: string,\n    file: any\n  ) {\n    const res = await this.uploadToOss(roomId, file, 'log')\n    return res;\n  }\n\n  // fetch i18n\n  static async fetchI18n() {\n    let data = await AgoraFetchJson({\n      url: `/v1/multi/language`,\n      method: 'GET',\n    });\n\n    setIntlError(data || {})\n  }\n\n  // app config\n  // 配置入口\n  // async config() {\n  //   let data = await AgoraFetchJson({\n  //     url: `/v1/config?platform=0&device=0&version=5.2.0`,\n  //     method: 'GET',\n  //   });\n\n  //   if (data['multiLanguage']) {\n  //     setIntlError(data['multiLanguage'])\n  //   }\n\n  //   return {\n  //     appId: data.appId,\n  //     room: data.room,\n  //   }\n  // }\n\n  // room entry\n  // 房间入口\n  async entry(params: EntryParams) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/entry`,\n      method: 'POST',\n      data: params,\n    });\n    \n    this.roomId = data.roomId;\n    this.userToken = data.userToken;\n    return {\n      data\n    }\n  }\n\n  // refresh token\n  // 刷新token \n  async refreshToken() {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/token/refresh`,\n      method: 'POST',\n      token: this.userToken,\n    });\n    return {\n      rtcToken: data.rtcToken,\n      rtmToken: data.rtmToken,\n      screenToken: data.screenToken\n    }\n  }\n\n  // update course\n  // 更新课程状态\n  async updateCourse(params: Partial<RoomParams>) {\n    const {room} = params\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}`,\n      method: 'POST',\n      data: room,\n      token: this.userToken,\n    });\n    return {\n      data,\n    }\n  }\n\n  // updateRoomUser\n  // 更新用户状态，老师可更新房间内所有人，学生只能更新自己\n  async updateRoomUser(user: Partial<UserAttrsParams>) {\n    const {userId, ...userAttrs} = user\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/user/${userId}`,\n      method: 'POST',\n      data: userAttrs,\n      token: this.userToken,\n    });\n    return {\n      data,\n    }\n  }\n\n  // start recording\n  // 开始录制\n  async startRecording(config: RecordingConfig) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/record/start`,\n      method: 'POST',\n      data: config,\n      token: this.userToken,\n    });\n    this.recordId = data.recordId\n    return {\n      data\n    }\n  }\n\n  // stop recording\n  // 结束录制\n  async stopRecording(recordId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/record/${recordId}/stop`,\n      method: 'POST',\n      token: this.userToken,\n    })\n    return {\n      data\n    }\n  }\n\n  // get recording list\n  // 获取录制列表\n  async getRecordingList () {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${this.roomId}/records`,\n      method: 'GET',\n      token: this.userToken,\n    })\n    return {\n      data\n    }\n  }\n\n  // get whiteboard token\n  async getWhiteboardBy(roomId: string): Promise<any> {\n    let boardData = await AgoraFetchJson({\n      full_url: whiteboardGenerateTokenApiEndpoint.replace(\"%app_id%\", this.appID).replace(\"%room_id%\", roomId),\n      method: 'GET',\n      token: this.userToken,\n    })\n    return {\n      boardId: boardData.boardId,\n      boardToken: boardData.boardToken,\n    };\n  }\n\n  // get room info\n  // 获取房间信息\n  async getRoomInfoBy(roomId: string): Promise<{data: any}> {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}`,\n      method: 'GET',\n      token: this.userToken,\n    });\n    let boardData = await this.getWhiteboardBy(roomId);\n    return {\n      data: {\n        room: {\n          ...data.room,\n          boardId: boardData.boardId,\n          boardToken: boardData.boardToken,\n        },\n        users: data.room.coVideoUsers,\n        user: data.user\n      }\n    }\n  }\n\n  // getRoomState\n  // 获取用户状态\n  async getRoomState(roomId: string): Promise<{usersMap: Map<string, AgoraUser>, room: Partial<ClassState>, me: Partial<Me>}> {\n    const {data} = await this.getRoomInfoBy(roomId)\n    const {users: rawUsers, room: rawCourse, user: me} = data\n\n    let usersMap: Map<string, AgoraUser> = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n      return acc.set(`${it.uid}`, {\n        role: it.role,\n        account: it.userName,\n        uid: it.uid,\n        video: it.enableVideo,\n        audio: it.enableAudio,\n        chat: it.enableChat,\n        grantBoard: it.grantBoard,\n        userId: it.userId,\n        screenId: it.screenId,\n      });\n    }, Map<string, AgoraUser>());\n\n    const room: Partial<ClassState> = {\n      courseState: rawCourse.courseState,\n      muteChat: rawCourse.muteAllChat,\n      isRecording: rawCourse.isRecording,\n      boardId: rawCourse.boardId,\n      boardToken: rawCourse.boardToken,\n      lockBoard: rawCourse.lockBoard,\n      teacherId: '',\n      memberCount: rawCourse.onlineUsers,\n    }\n\n    const teacher = usersMap.find((it: AgoraUser) => it.role === 1)\n\n    if (teacher) {\n      room.teacherId = teacher.uid\n    }\n    \n    if (me.role === 1) {\n      room.teacherId = me.uid\n    }\n\n    return {\n      usersMap,\n      room,\n      me\n    }\n  }\n\n  // getCourseState\n  // 获取房间状态\n  async getCourseState(roomId: string): Promise<Partial<ClassState>> {\n    const {data} = await this.getRoomInfoBy(roomId)\n    const {users, room} = data\n\n    const result: Partial<ClassState> = {\n      roomName: room.roomName,\n      roomId: room.roomId,\n      courseState: room.courseState,\n      roomType: room.type,\n      muteChat: room.muteAllChat,\n      recordId: room.recordId,\n      recordingTime: room.recordingTime,\n      isRecording: Boolean(room.isRecording),\n      boardId: room.boardId,\n      boardToken: room.boardToken,\n      lockBoard: room.lockBoard,\n      memberCount: room.onlineUsers,\n    }\n\n    const teacher = users.find((it: any) => it.role === 1)\n    if (teacher) {\n      result.teacherId = teacher.uid\n      result.screenId = teacher.screenId\n      result.screenToken = teacher.screenToken\n    }\n\n    return result\n  }\n\n  // login 登录教室\n  async Login(params: EntryParams) {\n    if (!this.appID) throw `appId is empty: ${this.appID}`\n    let {data: {roomId, userToken}} = await this.entry(params)\n\n    const {data: {room, user, users: userList = []}} = await this.getRoomInfoBy(roomId)\n\n    const me = user\n\n    const teacherState = userList.find((user: any) => +user.role === 1)\n\n    const course: any = {\n      rid: room.channelName,\n      roomName: room.roomName,\n      channelName: room.channelName,\n      roomId: room.roomId,\n      roomType: room.type,\n      courseState: room.courseState,\n      muteAllChat: room.muteAllChat,\n      isRecording: room.isRecording,\n      recordId: room.recordId,\n      recordingTime: room.recordingTime,\n      boardId: room.boardId,\n      boardToken: room.boardToken,\n      lockBoard: room.lockBoard,\n      teacherId: 0\n    }\n\n    if (teacherState) {\n      course.teacherId = +teacherState.uid\n    }\n\n    if (me.role === 1) {\n      course.teacherId = me.uid\n    }\n\n    if (params.userUuid) {\n      me.uuid = params.userUuid\n    }\n\n    const coVideoUids = userList.map((it: any) => `${it.uid}`)\n\n    if (course.teacherId && coVideoUids.length) {\n      course.coVideoUids = coVideoUids.filter((uid: any) => `${uid}` !== `${course.teacherId}`)\n    }\n\n    const result = {\n      course,\n      me,\n      users: userList,\n      appID: this.appID,\n      onlineUsers: room.onlineUsers,\n    }\n\n    return result\n  }\n\n  async fetchRoomBy(roomId: string) {\n    if (!this.appID) throw `appId is empty: ${this.appID}`\n    this.roomId = roomId;\n    const {data: {room, user, users: userList = []}} = await this.getRoomInfoBy(roomId)\n\n    const me = user\n\n    const teacherState = userList.find((user: any) => +user.role === 1)\n\n    const course: any = {\n      rid: room.channelName,\n      roomName: room.roomName,\n      channelName: room.channelName,\n      roomId: room.roomId,\n      roomType: room.type,\n      courseState: room.courseState,\n      muteAllChat: room.muteAllChat,\n      isRecording: room.isRecording,\n      recordId: room.recordId,\n      recordingTime: room.recordingTime,\n      boardId: room.boardId,\n      boardToken: room.boardToken,\n      lockBoard: room.lockBoard,\n      teacherId: 0\n    }\n\n    if (teacherState) {\n      course.teacherId = +teacherState.uid\n    }\n\n    if (me.role === 1) {\n      course.teacherId = me.uid\n    }\n\n    const coVideoUids = userList.map((it: any) => `${it.uid}`)\n\n    if (course.teacherId && coVideoUids.length) {\n      course.coVideoUids = coVideoUids.filter((uid: any) => `${uid}` !== `${course.teacherId}`)\n    }\n\n    const result = {\n      course,\n      me,\n      users: userList,\n      appID: this.appID,\n      onlineUsers: room.onlineUsers,\n    }\n\n    return result;\n  }\n\n  async getCourseRecordBy(recordId: string, roomId: string, token: string) {\n    this.userToken = token\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/record/${recordId}`,\n      method: 'GET',\n      token: this.userToken,\n    });\n\n    const boardData = await this.getWhiteboardBy(roomId);\n    const teacherRecord = get(data, 'recordDetails', []).find((it:any) => it.role === 1)\n\n    const recordStatus = [\n      'recording',\n      'finished',\n      'finished_recording_to_be_download',\n      'finished_download_to_be_convert',\n      'finished_convert_to_be_upload'\n    ]\n\n    const result = {\n      boardId: boardData.boardId,\n      boardToken: boardData.boardToken,\n      startTime: data.startTime,\n      endTime: data.endTime,\n      url: teacherRecord?.url,\n      status: data.status,\n      statusText: recordStatus[data.status],\n    }\n    return result\n  }\n\n  async exitRoom(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/exit`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        appId: this.appID,\n        roomId: roomId\n      }\n    })\n    return\n  }\n\n  // NOTE: student send apply\n  // NOTE: 学生发起连麦申请\n  async studentSendApply(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 1\n      }\n    })\n    return data;\n  }\n\n  // NOTE: student stop apply\n  // NOTE: 学生主动取消连麦申请\n  async studentStopCoVideo(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 6,\n      }\n    })\n    return data;\n  }\n\n  // NOTE: teacher accept apply\n  // NOTE: 教师同意学生申请\n  async teacherAcceptApply(roomId: string, userId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 4,\n        userIds: [userId]\n      }\n    })\n    return data;\n  }\n\n  // NOTE: teacher reject apply\n  // NOTE: 教师拒绝学生连麦\n  async teacherRejectApply(roomId: string, userId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 2,\n        userIds: [userId]\n      }\n    })\n    return data;\n  }\n\n  // NOTE: teacher cancel apply\n  // NOTE: 教师取消学生连麦\n  async teacherCancelStudent(roomId: string, userId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/covideo`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        type: 5,\n        userIds: [userId]\n      }\n    })\n    return data;\n  }\n\n  // NOTE: send channel message\n  // NOTE: 发送聊天消息\n  async sendChannelMessage(payload: any) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${payload.roomId}/chat`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        message: payload.message,\n        type: payload.type\n      }\n    })\n\n    return data;\n  }\n\n  async startScreenShare(roomId: string) {\n    let data = await AgoraFetchJson({\n      url: `/v1/apps/${this.appID}/room/${roomId}/screen`,\n      method: 'POST',\n      token: this.userToken,\n      data: {\n        state: 1\n      }\n    })\n    return data;\n  }\n}\n\nexport const eduApi = new AgoraEduApi();\n\nexport const fetchI18n = async () => {\n  await AgoraEduApi.fetchI18n();\n}\n","import { platform } from '@/utils/platform';\nimport { AgoraElectronClient } from '@/utils/agora-electron-client';\nimport { ChatMessage, AgoraStream } from '../utils/types';\nimport { Subject } from 'rxjs';\nimport { Map, Set, List } from 'immutable';\nimport AgoraRTMClient, { RoomMessage, CoVideoType } from '../utils/agora-rtm-client';\nimport { globalStore } from './global';\nimport {AgoraWebClient} from '../utils/agora-web-client';\nimport { get, set } from 'lodash';\nimport { isElectron } from '../utils/platform';\nimport GlobalStorage from '../utils/custom-storage';\nimport { t } from '../i18n';\nimport { CustomBtoa } from '@/utils/helper';\nimport { eduApi, UserAttrsParams } from '../services/edu-api';\n\nexport interface NotifyFlag {\n  broad: boolean\n}\n\nexport type LocalAttrs = Partial<AgoraUser & ClassState & {rawAccounts: any[]} & {broad: boolean}>;\n\nexport interface AgoraUser {\n  uid: string\n  account: string\n  role: number\n  video: number\n  audio: number\n  chat: number\n  grantBoard: number\n  userId: string // 仅用于服务端\n  screenId: string //仅用于屏幕共享\n}\n\nexport interface Me extends AgoraUser {\n  rtmToken: string\n  rtcToken: string\n  channelName: string\n  screenToken?: string\n  appID: string\n  coVideo: number\n  uuid: string\n}\n\nexport interface ClassState {\n  rid: string\n  roomName: string\n  teacherId: string\n  boardId: string // whiteboard_uuid\n  boardToken: string // whiteboard_token\n  // edu roomId\n  // 房间id\n  roomId: string\n\n  // edu roomType\n  // 房间类型\n  roomType: number\n\n  // lock board\n  // 锁定\n  lockBoard: number // lock_board\n\n  // start class\n  // 开始上课\n  courseState: number\n  // mute all chat\n  // 全员禁言\n  muteChat: number\n  // recording \n  recordId: string\n  recordingTime: number\n  isRecording: boolean\n  screenId: string\n  screenToken: string\n  coVideoUids: string[]\n  memberCount: number\n}\n\ntype RtcState = {\n  published: boolean\n  joined: boolean\n  users: Set<number>\n  shared: boolean\n  localStream: AgoraMediaStream | null\n  localSharedStream: AgoraMediaStream | null\n  remoteStreams: Map<string, AgoraMediaStream>\n}\n\nexport type MediaDeviceState = {\n  microphoneId: string\n  speakerId: string\n  cameraId: string\n  speakerVolume: number\n  camera: number\n  microphone: number\n  speaker: number\n}\n\nexport type SessionInfo = {\n  uid: string\n  rid: string\n  account: string\n  roomName: string\n  roomType: number\n  role: string\n}\n\nexport type RtmState = {\n  joined: boolean\n}\n\nexport type UserParams = {\n  userId: string,\n  account: string,\n}\n\nexport type RoomState = {\n  rtmLock: boolean\n  rtmToken: string\n  recordLock: boolean\n  rtcToken: string\n  appID: string\n  me: Me\n  users: Map<string, AgoraUser>\n  course: ClassState\n  applyUser: UserParams\n  rtc: RtcState\n  rtm: RtmState\n  mediaDevice: MediaDeviceState\n  messages: List<ChatMessage>\n  language: string\n}\n\nexport type AgoraMediaStream = {\n  streamID: number\n  stream?: any\n}\n\nexport class RoomStore {\n  private subject: Subject<RoomState> | null;\n  public _state: RoomState;\n\n  get state() {\n    return this._state;\n  }\n\n  set state(newState) {\n    this._state = newState;\n  }\n  public readonly defaultState: RoomState = Object.freeze({\n    rtmLock: false,\n    rtcToken: '',\n    rtmToken: '',\n    appID: '',\n    recordLock: false,\n    me: {\n      account: \"\",\n      uid: \"\",\n      roomToken: \"\",\n      role: 0,\n      video: 1,\n      audio: 1,\n      chat: 1,\n      grantBoard: 0,\n      rtmToken: '',\n      rtcToken: '',\n      appID: '',\n      coVideo: '',\n    },\n    users: Map<string, AgoraUser>(),\n    applyUser: {\n      userId: '',\n      account: '',\n    },\n    rtm: {\n      joined: false,\n    },\n    rtc: {\n      published: false,\n      joined: false,\n      shared: false,\n      users: Set<number>(),\n      localStream: null,\n      localSharedStream: null,\n      remoteStreams: Map<string, AgoraMediaStream>(),\n    },\n    course: {\n      teacherId: '',\n      boardId: '',\n      boardToken: '',\n      courseState: 0,\n      muteChat: 0,\n      isRecording: false,\n      recordId: '',\n      recordingTime: 0,\n      rid: '',\n      roomName: '',\n      roomType: 0,\n      lockBoard: 0,\n      roomId: '',\n      screenId: '',\n      screenToken: '',\n\n    },\n    mediaDevice: {\n      microphoneId: '',\n      speakerId: '',\n      cameraId: '',\n      speakerVolume: 100,\n      camera: 0,\n      speaker: 0,\n      microphone: 0\n    },\n    messages: List<ChatMessage>(),\n    language: navigator.language,\n    ...GlobalStorage.read('agora_room')\n  });\n\n  public windowId: number = 0;\n\n  // public rtmClient: AgoraRTMClient = new AgoraRTMClient();\n  // public rtcClient: AgoraWebClient | AgoraElectronClient = isElectron ? new AgoraElectronClient() : new AgoraWebClient();\n\n  public rtmClient: AgoraRTMClient;\n  public rtcClient: AgoraWebClient | AgoraElectronClient;\n\n  constructor() {\n    this.subject = null;\n    this._state = {\n      ...this.defaultState\n    };\n    this.rtmClient = new AgoraRTMClient();\n    this.rtcClient = isElectron ? new AgoraElectronClient ({roomStore: this}) : new AgoraWebClient({roomStore: this});\n  }\n\n  initialize() {\n    this.subject = new Subject<RoomState>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit(state: RoomState) {\n    this.subject && this.subject.next(state);\n  }\n\n  updateState(rootState: RoomState) {\n    this.state = {\n      ...this.state,\n      ...rootState,\n    }\n    this.commit(this.state);\n  }\n\n  isTeacher(peerId: string) {\n    if (!`${peerId}`\n      || !`${this.state.course.teacherId}`\n      || `${this.state.course.teacherId}` !== `${peerId}`\n    ) return false;\n    return true;\n  }\n\n  isStudent(peerId: string) {\n    if (!`${peerId}`\n      || `${this.state.course.teacherId}` === `${peerId}`\n    ) return false;\n\n    return true;\n  }\n\n  updateRecordState(params: RecordStateParams) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        roomId: params.roomId,\n        recordId: params.recordId,\n        recordingTime: params.recordingTime,\n        isRecording: !!params.isRecording,\n      },\n    }\n\n    console.log(\">>>: updateRecordState \", params)\n    this.commit(this.state)\n  }\n\n  async fetchCurrentRoom() {\n    try {\n      const res = await eduApi.fetchRoomBy(roomStore.state.course.roomId);\n      const {\n        course,\n        me,\n        users: rawUsers,\n        appID,\n        onlineUsers\n      } = res\n\n      let users = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n        return acc.set(`${it.uid}`, {\n          role: it.role,\n          account: it.userName,\n          uid: it.uid,\n          video: it.enableVideo,\n          audio: it.enableAudio,\n          chat: it.enableChat,\n          grantBoard: it.grantBoard,\n          userId: it.userId,\n          screenId: it.screenId,\n        });\n      }, Map<string, AgoraUser>());\n\n      await this.rtmClient.login(appID, `${me.uid}`, me.rtmToken)\n      await this.rtmClient.join(course.rid)\n      this.state = {\n        ...this.state,\n        rtm: {\n          ...this.state.rtm,\n          joined: true,\n        },\n        course: {\n          ...this.state.course,\n          rid: course.channelName,\n          roomType: course.roomType,\n          roomId: course.roomId,\n          roomName: course.roomName,\n          courseState: course.courseState,\n          muteChat: course.muteAllChat,\n          recordId: `${course.recordId}`,\n          isRecording: course.isRecording,\n          recordingTime: course.recordingTime,\n          lockBoard: course.lockBoard,\n          boardId: `${course.boardId}`,\n          boardToken: `${course.boardToken}`,\n          teacherId: `${course.teacherId}`,\n          screenId: `${me.screenId}`,\n          screenToken: `${me.screenToken}`,\n          coVideoUids: course.coVideoUids,\n          memberCount: +onlineUsers,\n        },\n        me: {\n          ...this.state.me,\n          uid: me.uid,\n          account: me.userName,\n          rtmToken: me.rtmToken,\n          rtcToken: me.rtcToken,\n          channelName: me.channelName,\n          screenId: me.screenId,\n          screenToken: me.screenToken,\n          appID: me.appID,\n          role: me.role,\n          chat: me.enableChat,\n          video: me.enableVideo,\n          audio: me.enableAudio,\n          userId: me.userId,\n          coVideo: me.coVideo,\n        },\n        users,\n        appID,\n      }\n      this.commit(this.state)\n    } catch(err) {\n      if (this.rtmClient._logged) {\n        await this.rtmClient.logout();\n      }\n      throw err;\n    }\n  }\n\n  addLocalStream(stream: AgoraStream) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localStream: stream\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeLocalStream() {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localStream: null,\n        localSharedStream: null\n      }\n    }\n    this.commit(this.state);\n  }\n\n  addLocalSharedStream(stream: any) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localSharedStream: stream\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeLocalSharedStream() {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        localSharedStream: null\n      }\n    }\n    this.commit(this.state);\n  }\n\n  addRTCUser(uid: number) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        users: this.state.rtc.users.add(uid),\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removePeerUser(uid: number) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        users: this.state.rtc.users.delete(uid),\n      }\n    }\n    this.commit(this.state);\n  }\n\n  addRemoteStream(stream: AgoraStream) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        remoteStreams: this.state.rtc.remoteStreams.set(`${stream.streamID}`, stream)\n      }\n    }\n    this.commit(this.state);\n  }\n\n  removeRemoteStream(uid: number) {\n    const remoteStream = this.state.rtc.remoteStreams.get(`${uid}`);\n    if (platform === 'web') {\n      if (remoteStream && remoteStream.stream && remoteStream.stream.isPlaying) {\n        remoteStream.stream.isPlaying() && remoteStream.stream.stop();\n      }\n    }\n\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        remoteStreams: this.state.rtc.remoteStreams.delete(`${uid}`)\n      }\n    }\n    this.commit(this.state);\n  }\n\n  updateRtc(newState: any) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        ...newState,\n      }\n    }\n    this.commit(this.state);\n  }\n\n  updateDevice(state: MediaDeviceState) {\n    this.state = {\n      ...this.state,\n      mediaDevice: state\n    }\n    this.commit(this.state);\n  }\n\n  async sendChannelMessage(args: any) {\n    await eduApi.sendChannelMessage({\n      roomId: this.state.course.roomId,\n      message: args.message,\n      type: 1,\n    })\n  }\n\n  async handlePeerMessage(body: any, peerId: string) {\n    const {cmd, data: {userName, userId, type}} = body\n    if (cmd !== 1) return\n\n    // student follow teacher peer message\n    // 当对端是老师的时候\n    // if (!this.isTeacher(myUid) && this.isTeacher(peerId)) {\n    switch (type) {\n      case CoVideoType.teacherSendReject: {\n        globalStore.showToast({\n          type: 'co-video',\n          message: t(\"toast.teacher_reject_co_video\")\n        });\n        return;\n      }\n      case CoVideoType.studentSendApply: {\n        if (globalStore.state.notice.reason === 'peer_hands_up'\n          && this.state.applyUser.userId) {\n          // when notice is peer_hands_up, ignore peer message\n          // 当已经收到消息以后屏蔽这条\"举手申请\"\n          console.warn(`ignore: `, peerId, userId, type, userName)\n          return\n        }\n        const applyUserId = userId\n\n        if (applyUserId && peerId) {\n          this.updateApplyUser({\n            account: `${userName}`,\n            userId: `${applyUserId}`,\n          });\n          globalStore.showNotice({\n            reason: 'peer_hands_up',\n            text: t('notice.student_interactive_apply', { reason: `${userName}` })\n          });\n          globalStore.showToast({\n            type: 'peer_hands_up', \n            message: t('toast.student_send_co_video_apply', { reason: `${userName}` })\n          });\n          return\n        }\n      }\n      case CoVideoType.teacherSendAccept: {\n        globalStore.showToast({\n          type: 'peer_hands_up',\n          message: t('toast.teacher_accept_co_video', { reason: `${userName}` }),\n        });\n        return;\n      }\n      case CoVideoType.teacherSendStop: {\n        globalStore.showToast({\n          type: 'peer_hands_up',\n          message: t('toast.stop_co_video', { reason: `${userName}` }),\n        });\n        return;\n      }\n    }\n  }\n\n  async mute(uid: string, type: string) {\n    const me = this.state.me;\n    if (`${me.uid}` === `${uid}`) {\n      if (type === 'audio') {\n        await this.updateLocalMe({\n          audio: 0,\n          broad: true\n        });\n      }\n      if (type === 'video') {\n        await this.updateLocalMe({\n          video: 0,\n          broad: true\n        });\n      }\n      if (type === 'chat') {\n        await this.updateLocalMe({\n          chat: 0,\n          broad: true\n        });\n      }\n      // if (type === 'grantBoard') {\n      //   await this.updateLocal({\n      //     grantBoard: 0\n      //   });\n      // }\n    }\n    else if (me.role === 1) {\n      if (type === 'audio') {\n        await this.updateUserBy(`${uid}`, {audio: 0});\n      }\n      if (type === 'video') {\n        await this.updateUserBy(`${uid}`, {video: 0});\n      }\n      if (type === 'chat') {\n        await this.updateUserBy(`${uid}`, {chat: 0});\n      }\n      if (type === 'grantBoard') {\n        await this.updateUserBy(`${uid}`, {grantBoard: 0});\n      }\n    }\n  }\n\n  async unmute(uid: string, type: string) {\n    const me = this.state.me;\n    if (`${me.uid}` === `${uid}`) {\n      if (type === 'audio') {\n        await this.updateLocalMe({\n          audio: 1,\n          broad: true\n        });\n      }\n      if (type === 'video') {\n        await this.updateLocalMe({\n          video: 1,\n          broad: true\n        });\n      }\n      if (type === 'chat') {\n        await this.updateLocalMe({\n          chat: 1,\n          broad: true\n        });\n      }\n      // if (type === 'grantBoard') {\n      //   await this.updateLocal({\n      //     grantBoard: 1\n      //   });\n      // }\n    }\n    else if (me.role === 1) {\n      if (type === 'audio') {\n        await this.updateUserBy(`${uid}`, {audio: 1});\n      }\n      if (type === 'video') {\n        await this.updateUserBy(`${uid}`, {video: 1});\n      }\n      if (type === 'chat') {\n        await this.updateUserBy(`${uid}`, {chat: 1});\n      }\n      if (type === 'grantBoard') {\n        await this.updateUserBy(`${uid}`, {grantBoard: 1});\n      }\n    }\n  }\n\n  async LoginToRoom(payload: any, pass: boolean = false) {\n    const {userName, roomName, role, type, uuid} = payload\n    try {\n      const res = await eduApi.Login({\n        userName,\n        roomName,\n        role,\n        type,\n        roomUuid: roomName,\n        userUuid: uuid\n      })\n\n      const {\n        course,\n        me,\n        users: rawUsers,\n        appID,\n        onlineUsers\n      } = res\n\n      let users = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n        return acc.set(`${it.uid}`, {\n          role: it.role,\n          account: it.userName,\n          uid: it.uid,\n          video: it.enableVideo,\n          audio: it.enableAudio,\n          chat: it.enableChat,\n          grantBoard: it.grantBoard,\n          userId: it.userId,\n          // coVideo: 1,\n          screenId: it.screenId,\n        });\n      }, Map<string, AgoraUser>());\n\n      await this.rtmClient.login(appID, `${me.uid}`, me.rtmToken)\n      await this.rtmClient.join(course.rid)\n      this.state = {\n        ...this.state,\n        rtm: {\n          ...this.state.rtm,\n          joined: true,\n        },\n        course: {\n          ...this.state.course,\n          rid: course.channelName,\n          roomType: course.roomType,\n          roomId: course.roomId,\n          roomName: course.roomName,\n          courseState: course.courseState,\n          muteChat: course.muteAllChat,\n          recordId: `${course.recordId}`,\n          isRecording: course.isRecording,\n          recordingTime: course.recordingTime,\n          lockBoard: course.lockBoard,\n          boardId: `${course.boardId}`,\n          boardToken: `${course.boardToken}`,\n          teacherId: `${course.teacherId}`,\n          screenId: `${me.screenId}`,\n          screenToken: `${me.screenToken}`,\n          coVideoUids: course.coVideoUids,\n          memberCount: +onlineUsers,\n        },\n        me: {\n          ...this.state.me,\n          uid: me.uid,\n          account: me.userName,\n          rtmToken: me.rtmToken,\n          rtcToken: me.rtcToken,\n          channelName: me.channelName,\n          screenId: me.screenId,\n          screenToken: me.screenToken,\n          appID: me.appID,\n          role: me.role,\n          chat: me.enableChat,\n          video: me.enableVideo,\n          audio: me.enableAudio,\n          userId: me.userId,\n          coVideo: me.coVideo,\n        },\n        users,\n        appID,\n      }\n      this.commit(this.state)\n    } catch(err) {\n      if (this.rtmClient._logged) {\n        await this.rtmClient.logout();\n      }\n      throw err;\n    }\n  }\n\n  setRTCJoined(joined: boolean) {\n    this.state = {\n      ...this.state,\n      rtc: {\n        ...this.state.rtc,\n        joined\n      }\n    }\n    this.commit(this.state);\n  }\n\n  updateChannelMessage(msg: ChatMessage) {\n    this.state = {\n      ...this.state,\n      messages: this.state.messages.push(msg)\n    };\n\n    this.commit(this.state);\n  }\n\n  private compositeMe(params: Partial<Me>): Me {\n    console.log(\"compositeMe: \", params);\n    const newMe: Me = { ...this.state.me };\n    for (const prop in params) {\n      if (newMe.hasOwnProperty(prop) && params.hasOwnProperty(prop)) {\n        set(newMe, prop, get(params, prop, ''));\n      }\n    }\n    return newMe;\n  }\n\n  private compositeCourse(params: Partial<ClassState>): ClassState {\n    console.log(\"compositeCourse: \", params);\n    const newCourse = { ...this.state.course };\n    for (const prop in params) {\n      if (newCourse.hasOwnProperty(prop) && params.hasOwnProperty(prop)) {\n        set(newCourse, prop, get(params, prop, ''));\n      }\n    }\n    return newCourse;\n  }\n\n  async fetchCourse() {\n    let course = await eduApi.getCourseState(this.state.course.roomId)\n    return await this.updateCourse({...course, broad: false})\n  }\n\n  async fetchRoomState() {\n    let {usersMap, room, me} = await eduApi.getRoomState(this.state.course.roomId)\n    return await this.updateRoomState({usersMap, room, me, broad: false})\n  }\n\n  async updateRoomState(params: {usersMap: Map<string, AgoraUser>, room: Partial<ClassState>, me: Partial<Me>} & NotifyFlag) {\n    const {usersMap, room, me} = params\n\n    const teacherId = room.teacherId as string\n\n    let coVideoUids = this.state.course.coVideoUids\n\n    if (usersMap.count()) {\n      const ids: any[] = []\n      const usersJson = usersMap.toJSON()\n      for (let key of Object.keys(usersJson)) {\n        ids.push(`${key}`)\n      }\n      coVideoUids = ids.filter((id: string) => `${id}` !== `${teacherId}`)\n    }\n\n    const newMe = me\n\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        ...room,\n        coVideoUids,\n      },\n      me: {\n        ...this.state.me,\n        ...newMe\n      },\n      users: usersMap,\n    }\n    this.commit(this.state)\n  }\n\n  async updateLocalMe(params: Partial<Me & NotifyFlag>) {\n    const {broad, ...meParams} = params\n    const newMe = this.compositeMe(meParams)\n\n    const newMeAttrs = {\n      uid: newMe.uid,\n      account: newMe.account,\n      role: newMe.role,\n      video: newMe.video,\n      audio: newMe.audio,\n      chat: newMe.chat,\n      grantBoard: newMe.grantBoard,\n      coVideo: newMe.coVideo,\n      userId: newMe.userId,\n      screenId: newMe.screenId,\n    }\n\n    const userAttrsParams: UserAttrsParams = {\n      userId: newMeAttrs.userId as string,\n      enableChat: newMeAttrs.chat as number,\n      enableAudio: newMeAttrs.audio as number,\n      enableVideo: newMeAttrs.video as number,\n      grantBoard: newMeAttrs.grantBoard as number,\n      // coVideo: newMeAttrs.coVideo as number\n    }\n\n    if (broad) {\n      await this.updateRoomUser({user: userAttrsParams})\n    }\n\n    this.state = {\n      ...this.state,\n      me: {\n        ...this.state.me,\n        ...newMeAttrs,\n      },\n      users: this.state.users.set(`${this.state.me.uid}`, newMeAttrs)\n    }\n    this.commit(this.state)\n  }\n\n  async updateRoomUser({user}: {user: UserAttrsParams}) {\n    return await eduApi.updateRoomUser(user)\n  }\n\n  updateApplyUser(user: any) {\n    this.state = {\n      ...this.state,\n      applyUser: user\n    }\n    this.commit(this.state)\n  }\n\n  async updateUserBy(uid: string, params: Partial<AgoraUser & NotifyFlag>) {\n    const {broad = true, ...userParams} = params\n    const prevUser = this.state.users.get(`${uid}`)\n    \n    const newUserAttrs: Partial<AgoraUser> = {\n      ...prevUser,\n    }\n\n    const userKeys = Object.keys(userParams)\n\n    for (let key of userKeys) {\n      if (newUserAttrs.hasOwnProperty(key)\n        && userParams.hasOwnProperty(key)) {\n        set(newUserAttrs, key, get(userParams, key))\n      }\n    }\n\n    const userAttrsParams: UserAttrsParams = {\n      userId: newUserAttrs.userId as string,\n      enableChat: newUserAttrs.chat as number,\n      enableAudio: newUserAttrs.audio as number,\n      enableVideo: newUserAttrs.video as number,\n      grantBoard: newUserAttrs.grantBoard as number,\n      // coVideo: newUserAttrs.coVideo as number\n    }\n\n    if (broad) {\n      await this.updateRoomUser({user: userAttrsParams})\n    }\n\n    this.state = {\n      ...this.state,\n      users: this.state.users.set(`${uid}`, newUserAttrs as AgoraUser)\n    }\n    this.commit(this.state)\n  }\n\n  resolveCourseAttrsToOperate(params: Partial<ClassState>): any {\n    const keys = ['lockBoard', 'courseState', 'muteChat']\n    for (let key of keys) {\n      if (params.hasOwnProperty(key)) {\n        let value = -1\n        let stateValue = get(params, key, 0)\n        let stateKey = key;\n        if (key === 'lockBoard') {\n          value = stateValue ? RoomMessage.lockBoard : RoomMessage.unlockBoard\n        } else if (key === 'courseState') {\n          value = stateValue ? RoomMessage.startCourse : RoomMessage.endCourse\n        } else if (key === 'muteChat') {\n          value = stateValue ? RoomMessage.muteAllChat : RoomMessage.unmuteAllChat\n          stateKey = 'muteAllChat'\n        }\n        return {\n          key: stateKey,\n          stateValue,\n          value\n        }\n      }\n    }\n  }\n\n  async updateCourse(params: Partial<ClassState & NotifyFlag>) {\n    const {broad = true, ...courseParams} = params\n\n    const {key, stateValue}: any = this.resolveCourseAttrsToOperate(courseParams)\n\n    if (broad) {\n      await eduApi.updateCourse({\n        room: {\n          [`${key}`]: stateValue\n        }\n      })\n      this.state = {\n        ...this.state,\n        course: {\n          ...this.state.course,\n          ...courseParams\n        }\n      }\n      this.commit(this.state)\n      return\n    }\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        ...courseParams\n      }\n    }\n    this.commit(this.state)\n  }\n\n  async updateLocal(params: LocalAttrs) {\n    const newMe = this.compositeMe(params)\n    const newCourse = this.compositeCourse(params)\n    const users = this.state.users\n\n    this.state = {\n      ...this.state,\n      me: {\n        ...newMe,\n      },\n      users,\n      course: {\n        ...newCourse,\n      }\n    }\n    this.commit(this.state)\n  }\n\n  async exitRoom() {\n    return await eduApi.exitRoom(this.state.course.roomId)\n  }\n\n  async exitAll() {\n    try {\n      try {\n        await this.rtmClient.exit();\n      } catch (err) {\n        console.warn(err);\n      }\n      try {\n        await this.rtcClient.exit();\n      } catch (err) {\n        console.warn(err);\n      }\n    } finally {\n      GlobalStorage.clear('agora_room');\n      this.state = {\n        ...this.defaultState\n      }\n      this.commit(this.state);\n    }\n  }\n\n  async startWebScreenShare() {\n    const webClient = this.rtcClient as AgoraWebClient\n    try {\n      const {screenToken} = await eduApi.refreshToken();\n      const {screenId, rid} = this.state.course\n      const appId = this.state.appID\n      await webClient.startScreenShare({\n        uid: +screenId,\n        token: screenToken,\n        channel: rid,\n        appId\n      })\n      // add screen client listener\n      // 监听屏幕共享主要的事件\n      webClient.shareClient.on('onTokenPrivilegeWillExpire', (evt: any) => {\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        const newToken = '';\n        webClient.shareClient.renewToken(newToken);\n      });\n      webClient.shareClient.on('onTokenPrivilegeDidExpire', (evt: any) => {\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        const newToken = '';\n        webClient.shareClient.renewToken(newToken);\n      });\n      webClient.shareClient.on('stopScreenSharing', (evt: any) => {\n        console.log('stop screen share', evt);\n        this.stopWebScreenShare().then(() => {\n          globalStore.showToast({\n            message: t('toast.canceled_screen_share'),\n            type: 'notice'\n          });\n        }).catch(console.warn).finally(() => {\n          console.log('[agora-web] stop share');\n        })\n      })\n    } catch(err) {\n      if (webClient.shareClient) {\n        webClient.shareClient.off('onTokenPrivilegeWillExpire', (evt: any) => {})\n        webClient.shareClient.off('onTokenPrivilegeDidExpire', (evt: any) => {})\n        webClient.shareClient.off('stopScreenSharing', (evt: any) => {})\n      }\n      if (err.type === 'error' && err.msg === 'NotAllowedError') {\n        globalStore.showToast({\n          message: t('toast.canceled_screen_share'),\n          type: 'notice'\n        });\n      }\n      if (err.type === 'error' && err.msg === 'PERMISSION_DENIED') {\n        globalStore.showToast({\n          message: t('toast.screen_sharing_failed', {reason: err.msg}),\n          type: 'notice'\n        });\n      }\n      throw err\n    }\n  }\n\n  async stopWebScreenShare() {\n    const webClient = this.rtcClient as AgoraWebClient\n    if (webClient.shared) {\n      await webClient.stopScreenShare()\n      this.removeLocalSharedStream();\n    }\n  }\n\n  // WARN: only work in electron environment\n  // 仅用于electron运行环境\n  async startNativeScreenShare() {\n    const rtcClient = this.rtcClient;\n    globalStore.setNativeWindowInfo({\n      visible: true,\n      items: (rtcClient as AgoraElectronClient).getScreenShareWindows()\n    })\n  }\n\n  async startScreenShare() {\n    if (platform === 'electron') {\n      await this.startNativeScreenShare()\n    }\n\n    if (platform === 'web') {\n      await this.startWebScreenShare()\n    }\n  }\n\n  async stopNativeScreenShare() {\n    const nativeClient = this.rtcClient as AgoraElectronClient;\n    await nativeClient.stopScreenShare();\n  }\n\n  async stopScreenShare() {\n    if (platform === 'web') {\n      await this.stopWebScreenShare()\n    }\n\n    if (platform === 'electron') {\n      await this.stopNativeScreenShare()\n    }\n  }\n\n  lockRecording() {\n    if (!this.state) return\n    this.state={\n      ...this.state,\n      recordLock: true\n    }\n    this.commit(this.state)\n  }\n\n  unlockRecording() {\n    if (!this.state) return\n    this.state={\n      ...this.state,\n      recordLock: false\n    }\n    this.commit(this.state)\n  }\n  \n  async startRecording () {\n    this.lockRecording()\n    try {\n      const maxIdleTime = 30\n      const {data: recordId} = await eduApi.startRecording({\n        recordingConfig: {\n          maxIdleTime\n        },\n      })\n      this.state = {\n        ...this.state,\n        course: {\n          ...this.state.course,\n          recordId,\n          isRecording: true\n        }\n      }\n      this.commit(this.state)\n    } catch(err) {\n      throw err;\n    } finally {\n      this.unlockRecording()\n    }\n  }\n\n  async stopRecording () {\n    this.lockRecording()\n    try {\n      await eduApi.stopRecording(this.state.course.recordId)\n      const roomId = this.state.course.roomId\n      const {data: roomInfo} = await eduApi.getRoomInfoBy(roomId)\n      const recordId = roomInfo.room.recordId\n      this.state = {\n        ...this.state,\n        course: {\n          ...this.state.course,\n          recordId: recordId,\n          isRecording: false\n        }\n      }\n      this.commit(this.state)\n    } catch(err) {\n      throw err\n    } finally {\n      this.unlockRecording()\n    }\n  }\n\n  updateCoVideoUsers(rawUsers: any) {\n    const coVideoUids: any[] = []\n    let users = rawUsers.reduce((acc: Map<string, AgoraUser>, it: any) => {\n      if (+it.role === 2) {\n        coVideoUids.push(+it.uid)\n      }\n      \n      return acc.set(`${it.uid}`, {\n        role: it.role,\n        account: it.userName,\n        uid: it.uid,\n        video: it.enableVideo,\n        audio: it.enableAudio,\n        chat: it.enableChat,\n        grantBoard: it.grantBoard,\n        userId: it.userId,\n        screenId: it.screenId,\n      });\n    }, Map<string, AgoraUser>());\n\n    let meState = this.state.me\n\n    let newMe = users.find((user: AgoraUser) => +this.state.me.uid === +user.uid)\n\n    if (newMe) {\n      meState = this.compositeMe({...newMe, coVideo: 1})\n    } else {\n      meState = {\n        ...meState,\n        coVideo: 0\n      }\n    }\n\n    let courseState: any = {\n      screenId: this.state.course.screenId,\n      teacherId: this.state.course.teacherId,\n    }\n\n    let newCourse = users.find((user: AgoraUser) => +user.role === 1)\n\n    if (newCourse) {\n      courseState.screenId = newCourse.screenId\n      courseState.teacherId = newCourse.uid\n    }\n\n    let applyUser = this.state.applyUser;\n    if (applyUser && applyUser.userId) {\n      const foundUser = users.find((user: AgoraUser) => user.userId === applyUser.userId)\n      if (!foundUser) {\n        applyUser = {\n          userId: '',\n          account: ''\n        }\n      }\n    }\n\n    this.state = {\n      ...this.state,\n      users: users,\n      me: {\n        ...this.state.me,\n        ...meState\n      },\n      course: {\n        ...this.state.course,\n        ...courseState,\n        coVideoUids,\n      },\n      applyUser\n    }\n    this.commit(this.state)\n  }\n\n  updateRoomInfo(data: any) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        lockBoard: data.lockBoard,\n        muteChat: data.muteAllChat,\n        courseState: data.courseState,\n      }\n    }\n    this.commit(this.state)\n  }\n\n  updateRoomMember(memberCount: number) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        memberCount\n      }\n    }\n    this.commit(this.state)\n  }\n\n  updateScreenShare(payload: any) {\n    this.state = {\n      ...this.state,\n      course: {\n        ...this.state.course,\n        screenId: payload.screenId,\n      }\n    }\n\n    this.commit(this.state)\n  }\n}\n\nexport const roomStore = new RoomStore();\n\n// TODO: Please remove it before release in production\n// 备注：请在正式发布时删除操作的window属性\n//@ts-ignore\nwindow.roomStore = roomStore;","import React from 'react'\nimport './index.scss';\n\nexport const GithubIcon: React.FC<{}> = (props) => {\n  return (\n    <a href=\"https://github.com/AgoraIO-Usecase/eEducation\" target=\"_blank\" rel=\"noopener noreferrer\" >\n    <span className=\"agora-github-pin\">\n    </span>\n    </a>\n  )\n}","import {get, isEmpty} from 'lodash';\nimport { AgoraFetch } from '../fetch';\n\nconst url = `${window.location.protocol}//${window.location.host}/dev/v2/project/%s/rtm`;\nconst PREFIX = url.replace('%s', process.env.REACT_APP_AGORA_APP_ID as string);\n\nexport type QueryChannelMessage = {\n  channelName: string,\n  startTime: string,\n  endTime: string\n}\n\nexport type AgoraChannelMessage = {\n  dst: string\n  message_type: string\n  ms: number\n  payload: string\n  src: string\n}\n\nexport class RTMRestful {\n  startTime: number\n  endTime: number\n  source: string\n  destination: string\n  customerId: string\n  appSecret: string\n  totalCount: number\n  offset: number\n  limit: number\n\n  constructor(customerId: string, appSecret: string) {\n    this.startTime = 0\n    this.endTime = 0\n    this.source = ''\n    this.destination = ''\n    this.customerId = customerId\n    this.appSecret = appSecret\n    this.totalCount = 0\n    this.offset = 0\n    this.limit = 100\n    // this.agoraAppId = appId\n  }\n\n  private basicAuthorization(): string {\n    const plainCredentials = `${this.customerId}:${this.appSecret}`;\n    return `Basic ${btoa(plainCredentials)}`;\n  }\n\n  async fetchChannelMessageCount({channelName, startTime, endTime}: QueryChannelMessage) {\n    const response: Response = await AgoraFetch(`${PREFIX}/message/history/count?destination=${channelName}&start_time=${startTime}&end_time=${endTime}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuthorization(),\n      },\n    });\n    // const json = await response.json();\n    const json = response;\n    const count = get(json, 'count');\n    this.totalCount = count;\n    this.offset = 0;\n    this.limit = 100;\n    return count;\n  }\n\n  async fetchChannelMessages({\n    channelName, startTime, endTime\n  }: QueryChannelMessage): Promise<AgoraChannelMessage[]> {\n    const responseA: Response = await AgoraFetch(`${PREFIX}/message/history/query`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuthorization(),\n      },\n      body: JSON.stringify({\n          filter: {\n            source: \"\",\n            destination: channelName,\n            start_time: startTime,\n            end_time: endTime\n          },\n          offset: this.offset,\n          limit: this.limit,\n          order: \"asc\"\n        })\n    });\n    const jsonA = responseA;\n    const location = get(jsonA, 'location');\n    if (isEmpty(location)) {\n      throw `location from agora rtm endpoint must be present`\n    }\n    const respB = await AgoraFetch(`${PREFIX}/message/history/query/${location.replace('~/rtm/message/history/query/', '')}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: this.basicAuthorization(),\n      },\n    });\n    // const jsonB = await respB.json();\n    const jsonB = respB;\n    const messages = get(jsonB, 'messages');\n    return messages;\n  }\n\n  async getAllChannelMessages(params: QueryChannelMessage) {\n    let count = await this.fetchChannelMessageCount(params);\n    if (count === 0) {\n      return undefined;\n    }\n    let totalCount = this.totalCount;\n    let channelMessages: AgoraChannelMessage[] = [];\n    while (totalCount > 0) {\n      const messages = await this.fetchChannelMessages(params);\n      channelMessages = channelMessages.concat(...messages);\n      if (totalCount >= messages.length) {\n        totalCount = totalCount - messages.length;\n        this.offset = channelMessages.length;\n        this.limit = 100;\n      }\n    }\n    return channelMessages;\n  }\n}\n\n//@ts-ignore\nwindow.RTMRestful = new RTMRestful(process.env.REACT_APP_AGORA_CUSTOMER_ID as string, process.env.REACT_APP_AGORA_CUSTOMER_CERTIFICATE as string);","import { WhiteWebSdk, ReplayRoomParams, PlayerCallbacks } from 'white-web-sdk';\n\nexport const WhiteboardAPI = {\n  async replayRoom(client: WhiteWebSdk, args: ReplayRoomParams, callback: PlayerCallbacks) {\n    let retrying;\n    do {\n      try {\n        let result = await client.replayRoom({\n          beginTimestamp: args.beginTimestamp,\n          duration: args.duration,\n          room: args.room,\n          mediaURL: args.mediaURL,\n          roomToken: args.roomToken,\n        }, callback);\n        retrying = false;\n        return result;\n      } catch (err) {\n        retrying = true;\n      }\n    } while (retrying);\n  }\n}","import uuidv4 from 'uuid/v4';\n\nexport { RTMRestful } from './rtm-restful';\nexport { WhiteboardAPI } from './whiteboard-api';\nexport function genUUID (): string {\n  let uuid = localStorage.getItem('demo_edu_uuid');\n  if (uuid) {\n    return uuid;\n  }\n  uuid = uuidv4();\n  localStorage.setItem('demo_edu_uuid', uuid);\n  return uuid;\n}","import Dexie from 'dexie';\n\nconst db = new Dexie('webdemo_agora_edu');\n\ndb.version(1).stores({\n  logs: 'content'\n});\n\nexport default db;\n","import { isElectron } from '@/utils/platform';\nimport { roomStore } from '@/stores/room';\nimport { eduApi } from '@/services/edu-api';\nimport Dexie from 'dexie';\n// eslint-disable-next-line\nimport LogWorker from 'worker-loader!./log.worker';\nimport db from './db';\nimport UAParser from 'ua-parser-js';\nimport {get} from 'lodash';\n\nconst parser = new UAParser();\n\nconst userAgentInfo = parser.getResult();\n\nexport const isSafari = () => {\n  return (\n    userAgentInfo.browser.name === 'Safari' ||\n    userAgentInfo.browser.name === 'Mobile Safari'\n  );\n};\n\nexport const isChrome = () => {\n  return userAgentInfo.browser.name === 'Chrome';\n};\n\nexport const isFirefox = () => {\n  return userAgentInfo.browser.name === 'Firefox';\n};\n\nexport const isMobile = () => {\n  return userAgentInfo.device.type === 'mobile';\n};\n\n// const getUserAgent = () => {\n//   return isSafari()\n//     ? 'safari'\n//     : isChrome()\n//     ? 'chrome'\n//     : isFirefox()\n//     ? 'firefox'\n//     : navigator.userAgent;\n// };\n\nconst flat = (arr: any[]) => {\n  return arr.reduce((arr, elem) => arr.concat(elem), []);\n};\n\nexport default class Log {\n  static originConsole = window.console;\n\n  static thread = null;\n\n  static init() {\n    if (!this.thread) {\n      //@ts-ignore\n      this.thread = new LogWorker()\n      this.debugLog();\n    }\n  }\n\n  static debugLog() {\n    const thread = this.thread as any;\n    function proxy(context: any, method: any) {\n      return function() {\n        let args = [...arguments];\n        flat(args).join('');\n        thread.postMessage({\n          type: 'log',\n          data: JSON.stringify([flat(args).join('')])\n        });\n        method.apply(context, args);\n      };\n    }\n\n    Object.keys(console)\n      .filter(e => ['info', 'error', 'warn', 'log', 'debug'].indexOf(e) >= 0)\n      .forEach((method: any, _) => {\n        //@ts-ignore\n        console[method] = proxy(console, console[method]);\n      });\n    //@ts-ignore\n    window.console = console;\n  }\n\n  static async uploadElectronLog(roomId: any) {\n    //@ts-ignore\n    let file = await window.doGzip();\n    const res = await eduApi.uploadZipLogFile(\n      roomId,\n      file\n    )\n    return get(res, 'data.data', -1);\n  }\n\n  static async doUpload() {\n    const ids = [];\n    // Upload Electron log\n    if (isElectron) {\n      ids.push(await this.uploadElectronLog(roomStore.state.course.roomId))\n    }\n    // Web upload log\n    ids.push(await this.uploadLog(roomStore.state.course.roomId))\n    return ids.join(\"#\")\n  }\n\n  static async uploadLog(roomId: string) {\n    // let ua = getUserAgent();\n    //@ts-ignore\n    let logs = await db.logs.toArray();\n    const logsStr = logs\n      .reverse()\n      .map((e: any) => JSON.parse(e.content))\n      .map((e: any) => (Array.isArray(e) ? e[0] : e))\n      .join('\\n');\n\n    //@ts-ignore\n    window.logsStr = logsStr\n\n    const file = await new File([logsStr], `${+Date.now()}`)\n\n    //@ts-ignore\n    window.file = file\n\n    let res = await eduApi.uploadLogFile(\n      roomId,\n      file,\n    )\n    await db.delete();\n    if (!(await Dexie.exists(db.name))) {\n      db.version(1).stores({\n        logs: 'content'\n      });\n    }\n    await db.open();\n    console.log(\"res \", res)\n    return get(res, 'data.data', -1);\n  }\n}\n","import React, { useState, useEffect, useRef, CSSProperties } from 'react';\r\nimport { Theme, FormControl, Tooltip } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '../components/custom-button';\r\nimport RoleRadio from '../components/role-radio';\r\nimport Icon from '../components/icon';\r\nimport FormInput from '../components/form-input';\r\nimport FormSelect from '../components/form-select';\r\nimport LangSelect from '../components/lang-select';\r\nimport { isElectron } from '../utils/platform';\r\nimport { usePlatform } from '../containers/platform-container';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { roomStore } from '../stores/room';\r\nimport {GithubIcon} from '../components/github-icon';\r\nimport { globalStore, roomTypes } from '../stores/global';\r\nimport { t } from '../i18n';\r\nimport GlobalStorage from '../utils/custom-storage';\r\nimport { genUUID } from '../utils/api';\r\nimport Log from '../utils/LogUploader';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles ((theme: Theme) => ({\r\n  formControl: {\r\n    minWidth: '240px',\r\n    maxWidth: '240px',\r\n  }\r\n}));\r\n\r\nconst hiddenStyle: CSSProperties = {\r\n  display: 'none',\r\n}\r\n\r\n\r\ntype SessionInfo = {\r\n  roomName: string\r\n  roomType: number\r\n  yourName: string\r\n  role: string\r\n}\r\n\r\nconst defaultState: SessionInfo = {\r\n  roomName: '',\r\n  roomType: 0,\r\n  role: '',\r\n  yourName: '',\r\n}\r\n\r\nfunction HomePage() {\r\n  document.title = t(`home.short_title.title`)\r\n\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSetting = (evt: any) => {\r\n    history.push({pathname: `/device_test`});\r\n  }\r\n\r\n  const [lock, setLock] = useState<boolean>(false);\r\n\r\n  const handleUpload = (evt: any) => {\r\n    setLock(true)\r\n    Log.doUpload().then((resultCode: any) => {\r\n      globalStore.showDialog({\r\n        type: 'uploadLog',\r\n        message: t('toast.show_log_id', {reason: `${resultCode}`})\r\n      });\r\n    }).finally(() => {\r\n      setLock(false)\r\n    })\r\n  }\r\n\r\n  const {\r\n    HomeBtn\r\n  } = usePlatform();\r\n\r\n  const ref = useRef<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      ref.current = true;\r\n    }\r\n  }, []);\r\n\r\n  const [session, setSessionInfo] = useState<SessionInfo>(defaultState);\r\n\r\n  const [required, setRequired] = useState<any>({} as any);\r\n\r\n  const handleSubmit = () => {\r\n    const queryString = window.location.href;\r\n    var url = new URL(queryString);\r\n    var room_id = url.searchParams.get(\"room\");\r\n    var token = url.searchParams.get(\"token\");\r\n    var room_type = url.searchParams.get(\"roomtype\");\r\n    var subject = url.searchParams.get(\"subject\");\r\n    var description = url.searchParams.get(\"description\");\r\n    var from = url.searchParams.get(\"from\");\r\n    var to = url.searchParams.get(\"to\");\r\n    var status = url.searchParams.get(\"status\");\r\n\r\n\r\n\r\n\r\n\r\n    var data = {\r\n      'token':token,\r\n      'roomName': room_id,\r\n      'roomType': room_type,\r\n      'subject': subject,\r\n      'yourName': '',\r\n      'description': description,\r\n      'from': from,\r\n      'to': to,\r\n      'status': status,\r\n    }\r\n    axios.post(`${process.env.REACT_APP_END_POINT}creat_class_room`, data).then((res)=>{\r\n        session.roomName = res.data.roomName;\r\n        session.role = res.data.role;\r\n        session.roomType = res.data.roomType;\r\n        session.yourName = res.data.yourName;\r\n\r\n        if (!session.roomName) {\r\n          setRequired({...required, roomName: t('home.missing_room_name')});\r\n          return;\r\n        }\r\n    \r\n        if (!session.yourName) {\r\n          setRequired({...required, yourName: t('home.missing_your_name')});\r\n          return;\r\n        }\r\n    \r\n        if (!session.role) {\r\n          setRequired({...required, role: t('home.missing_role')});\r\n          return;\r\n        }\r\n        \r\n        if (!roomTypes[session.roomType]) return;\r\n        const path = roomTypes[session.roomType].path\r\n        globalStore.showLoading()\r\n        roomStore.LoginToRoom({\r\n          userName: session.yourName,\r\n          roomName: session.roomName,\r\n          role: session.role === 'teacher' ? 1 : 2,\r\n          type: session.roomType,\r\n          uuid: genUUID()\r\n        }).then(() => {\r\n\r\n          history.push(`/classroom/${path}`)\r\n        }).catch((err: any) => {\r\n          if (err.hasOwnProperty('api_error')) {\r\n            return\r\n          }\r\n          if (err.reason) {\r\n            globalStore.showToast({\r\n              type: 'rtmClient',\r\n              message: t('toast.rtm_login_failed_reason', {reason: err.reason}),\r\n            })\r\n          } else {\r\n            globalStore.showToast({\r\n              type: 'rtmClient',\r\n              message: t('toast.rtm_login_failed'),\r\n            })\r\n          }\r\n          console.warn(err)\r\n        }).finally(() => {\r\n          globalStore.stopLoading();\r\n        })\r\n    }).catch((err)=>{\r\n      console.log(err)\r\n      globalStore.showToast({\r\n        type: 'rtmClient',\r\n        message: t('toast.rtm_login_failed_reason', {reason: err.response.data.message}),\r\n      })\r\n \r\n    });\r\n    \r\n  }\r\n\r\n  return (\r\n    <div style={hiddenStyle} className={`flex-container ${isElectron ? 'draggable' : 'home-cover-web' }`}>\r\n      {isElectron ? null : \r\n      <div className=\"web-menu\">\r\n        <div className=\"web-menu-container\">\r\n          <div className=\"short-title\">\r\n            <span className=\"title\">{t('home.short_title.title')}</span>\r\n            <span className=\"subtitle\">{t('home.short_title.subtitle')}</span>\r\n            <span className=\"build-version\">{t(\"build_version\")}</span>\r\n          </div>\r\n          <div className=\"setting-container\">\r\n            <div className=\"flex-row\">\r\n              <Tooltip title={t(\"icon.upload-log\")} placement=\"top\">\r\n                <span>\r\n                  <Icon className={lock ? \"icon-loading\" : \"icon-upload\"} onClick={handleUpload}></Icon>\r\n                </span>\r\n              </Tooltip>\r\n              <Tooltip title={t(\"icon.setting\")} placement=\"top\">\r\n                <span>\r\n                  <Icon className=\"icon-setting\" onClick={handleSetting}/>\r\n                </span>\r\n              </Tooltip>\r\n            </div>\r\n            <Tooltip title={t(\"icon.lang-select\")} placement=\"top\">\r\n              <span>\r\n                <LangSelect\r\n                value={GlobalStorage.getLanguage().language.match(/^zh/) ? 0 : 1}\r\n                onChange={(evt: any) => {\r\n                  const value = evt.target.value;\r\n                  if (value === 0) {\r\n                    globalStore.setLanguage('zh-CN');\r\n                  } else {\r\n                    globalStore.setLanguage('en');\r\n                  }\r\n                }}\r\n                items={[\r\n                  {text: '中文', name: 'zh-CN'},\r\n                  {text: 'En', name: 'en'}\r\n                ]}></LangSelect>\r\n              </span>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      }\r\n      <div className=\"custom-card\">\r\n        {!isElectron ? <GithubIcon /> : null}\r\n        <div className=\"flex-item cover\">\r\n          {isElectron ? \r\n          <>\r\n          <div className={`short-title ${globalStore.state.language}`}>\r\n            <span className=\"title\">{t('home.short_title.title')}</span>\r\n            <span className=\"subtitle\">{t('home.short_title.subtitle')}</span>\r\n          </div>\r\n          <div className={`cover-placeholder ${t('home.cover_class')}`}></div>\r\n          <div className='build-version'>{t(\"build_version\")}</div>\r\n          </>\r\n          : <div className={`cover-placeholder-web ${t('home.cover_class')}`}></div>\r\n          }\r\n        </div>\r\n        <div className=\"flex-item card\">\r\n          <div className=\"position-top card-menu\">\r\n            <HomeBtn handleSetting={handleSetting}/>\r\n          </div>\r\n          <div className=\"position-content flex-direction-column\">\r\n            <FormControl className={classes.formControl}>\r\n              <FormInput Label={t('home.room_name')} value={session.roomName} onChange={\r\n                (val: string) => {\r\n                  setSessionInfo({\r\n                    ...session,\r\n                    roomName: val\r\n                  });\r\n                }}\r\n                requiredText={required.roomName}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <FormInput Label={t('home.nickname')} value={session.yourName} onChange={\r\n                (val: string) => {\r\n                  setSessionInfo({\r\n                    ...session,\r\n                    yourName: val\r\n                  });\r\n                }}\r\n                requiredText={required.yourName}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <FormSelect \r\n                Label={t('home.room_type')}\r\n                value={session.roomType}\r\n                onChange={(evt: any) => {\r\n                  setSessionInfo({\r\n                    ...session,\r\n                    roomType: evt.target.value\r\n                  });\r\n                }}\r\n                items={roomTypes.map((it: any) => ({\r\n                  value: it.value,\r\n                  text: t(`${it.text}`),\r\n                  path: it.path\r\n                }))}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <RoleRadio value={session.role} onChange={(evt: any) => {\r\n                 setSessionInfo({\r\n                   ...session,\r\n                   role: evt.target.value\r\n                 });\r\n              }} requiredText={required.role}></RoleRadio>\r\n            </FormControl>\r\n            <Button name={t('home.room_join')} onClick={handleSubmit}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default React.memo(HomePage);","import React, {useEffect} from 'react';\nimport Icon from '../icon';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nimport './index.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    marginTop: '8px',\n  },\n  sliderClass: {\n    color: '#44A2FC',\n    minWidth: '210px',\n    marginLeft: '6px'\n  }\n});\n\ninterface SliderProps {\n  volume: number\n  onChange: (volume: number) => void\n}\n\nexport default function ContinuousSlider(props: SliderProps) {\n  const classes = useStyles(props);\n  const [value, setValue] = React.useState<number>(props.volume);\n\n  const handleChange = (event: any, newValue: any) => {\n    setValue(newValue);\n  };\n\n  useEffect(() => {\n    props.onChange(value);\n  }, [value]);\n\n  return (\n    <div className=\"volume-container\">\n      <div className={classes.root}>\n        <Icon className=\"icon-speaker\" disable/>\n        <Slider className={classes.sliderClass} value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport Icon from '../icon';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport './index.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    marginTop: '8px',\n  },\n  sliderClass: {\n    color: '#44A2FC',\n    minWidth: '210px',\n    marginLeft: '6px',\n  },\n  sliderRailClass: {\n    height: '12px',\n    color: '#44A2FC'\n  },\n  sliderMarkClass: {\n    height: '12px',\n    color: '#CCCCCC'\n  }\n});\n\nconst totalVolumes = 52;\n\nfunction CustomSlider(props: any) {\n  return (\n    <div className=\"voice-sliders\">\n      {[...Array(totalVolumes)].map((e: any, key: number) => <span className={props.volume > key ? \"active\" : \"\"} key={key}></span>)}\n    </div>\n  )\n}\n\nfunction VoiceSlider(props: any) {\n  const classes = useStyles(props);\n  const volume = props.volume;\n\n  return (\n    <div className={classes.root}>\n      <Icon className=\"icon-voice\" disable />\n      <CustomSlider volume={volume * totalVolumes} className={classes.sliderClass} />\n    </div>\n  );\n}\n\nexport default function (props: any) {\n  return (\n    <div className=\"volume-container\">\n      <VoiceSlider volume={props.volume}/>\n    </div>\n  )\n}","import { BehaviorSubject } from \"rxjs\"\n\nexport interface ErrorState {\n  reason: string | null,\n  errors: {[key: string]: any}[] | []\n}\n\nexport class ErrorStore {\n  public readonly defaultState: ErrorState = {\n    reason: null,\n    errors: [] \n  }\n\n  private subject: BehaviorSubject<ErrorState> = new BehaviorSubject<ErrorState>(this.defaultState);\n\n  constructor() {\n    // console.log(\"defaultValue\", this.subject.getValue());\n  }\n\n  set state(newState: Partial<ErrorState>) {\n    this.subject.next({...this.subject.getValue(), ...newState});\n  }\n\n  get state() {\n    return this.subject.getValue();\n  }\n\n  subscribe(updateState: any) {\n    this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject.unsubscribe();\n    this.state = this.defaultState;\n  }\n}\n\nexport const errorStore = new ErrorStore();","import { EventEmitter } from 'events';\nimport { videoPlugin } from '@netless/white-video-plugin';\nimport { audioPlugin } from '@netless/white-audio-plugin';\nimport { Room, WhiteWebSdk, DeviceType, SceneState, createPlugins, RoomPhase } from 'white-web-sdk';\nimport { Subject } from 'rxjs';\nimport GlobalStorage from '../utils/custom-storage';\nimport { isEmpty, get } from 'lodash';\nimport { roomStore } from './room';\nimport { globalStore } from './global';\nimport { t } from '../i18n';\n\nconst ENABLE_LOG = process.env.REACT_APP_AGORA_LOG === 'true';\n\ninterface SceneFile {\n  name: string\n  type: string\n}\n\nexport interface CustomScene {\n  path: string\n  rootPath: string\n  file: SceneFile\n  type: string\n}\n\nexport interface SceneResource {\n  path: string\n  rootPath: string\n  file: SceneFile\n}\n\nconst pathName = (path: string): string => {\n  const reg = /\\/([^\\/]*)\\//g;\n  reg.exec(path);\n  if (RegExp.$1 === \"aria\") {\n    return \"\";\n  } else {\n    return RegExp.$1;\n  }\n}\n\nexport const plugins = createPlugins({\"video\": videoPlugin, \"audio\": audioPlugin});\n\nplugins.setPluginContext(\"video\", {identity: 'guest'});\nplugins.setPluginContext(\"audio\", {identity: 'guest'});\n\nexport type WhiteboardState = {\n  loading: boolean\n  joined: boolean\n  scenes: CustomScene[]\n  currentScenePath: string\n  currentHeight: number\n  currentWidth: number\n  dirs: SceneResource[]\n  zoomRadio: number\n  scale: number\n  room: Room | null\n  recording: boolean\n  startTime: number\n  endTime: number\n\n  totalPage: number\n  currentPage: number\n  type: string\n}\n\ntype JoinParams = {\n  rid: string\n  uuid: string\n  roomToken: string\n  location?: string\n  userPayload: {\n    userId: string,\n    identity: string\n  }\n}\n\nclass Whiteboard extends EventEmitter {\n  public state: WhiteboardState;\n  public subject: Subject<WhiteboardState> | null;\n  public defaultState: WhiteboardState = {\n    joined: false,\n    scenes: [],\n    currentScenePath: '',\n    currentHeight: 0,\n    currentWidth: 0,\n    dirs: [],\n    zoomRadio: 0,\n    scale: 0,\n    recording: false,\n    startTime: 0,\n    endTime: 0,\n    room: null,\n    loading: true,\n    // isWritable: false,\n    ...GlobalStorage.read('mediaDirs'),\n    totalPage: 0,\n    currentPage: 0,\n    type: 'static'\n  }\n\n  public disconnected: boolean = true\n\n  public readonly client: WhiteWebSdk = new WhiteWebSdk({\n    deviceType: DeviceType.Surface,\n    // handToolKey: \" \",\n    plugins,\n    loggerOptions: {\n      disableReportLog: ENABLE_LOG ? false : true,\n      reportLevelMask: \"debug\",\n      printLevelMask: \"debug\",\n    }\n  });\n\n  constructor() {\n    super();\n    this.subject = null;\n    this.state = this.defaultState;\n  }\n\n  initialize() {\n    this.subject = new Subject<WhiteboardState>();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.subject.next(this.state);\n  }\n\n  subscribe(updateState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(updateState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.subject = null;\n  }\n\n  commit (state: WhiteboardState) {\n    this.subject && this.subject.next(state);\n  }\n\n  updateState(newState: WhiteboardState) {\n    this.state = {\n      ...this.state,\n      ...newState,\n    }\n    this.commit(this.state);\n  }\n\n  getNameByScenePath(scenePath: string) {\n    const sceneMap = get(this.state.room, `state.globalState.sceneMap`, {})\n    console.log(\"sceneMap\", sceneMap)\n    return get(sceneMap, scenePath, 'default name')\n  }\n\n  updateRoomState() {\n    if (!this.state.room) return;\n    console.log(\"current room state\", this.state.room.state);\n    const roomState = this.state.room.state;\n\n    const path = roomState.sceneState.scenePath;\n    const ppt = roomState.sceneState.scenes[0].ppt;\n\n    const type = isEmpty(ppt) ? 'static' : 'dynamic';\n    const currentPage = roomState.sceneState.index;\n    const totalPage = roomState.sceneState.scenes.length;\n\n    if (type !== 'dynamic') {\n      this.state = {\n        ...this.state,\n        currentHeight: 0,\n        currentWidth: 0\n      }\n    } else {\n      this.state = {\n        ...this.state,\n        currentHeight: get(ppt, 'height', 0),\n        currentWidth: get(ppt, 'width', 0)\n      }\n    }\n\n    const entireScenes = this.state.room ? this.state.room.entireScenes() : {};\n\n    const paths = Object.keys(entireScenes);\n\n    let scenes: CustomScene[] = [];\n    for (let dirPath of paths) {\n      const sceneInfo = {\n        path: dirPath,\n        file: {\n          name: this.getNameByScenePath(dirPath),\n          type: 'whiteboard'\n        },\n        type: 'static',\n        rootPath: '',\n      }\n      if (entireScenes[dirPath]) {\n        sceneInfo.rootPath = ['/', '/init'].indexOf(dirPath) !== -1 ? '/init' : `${dirPath}/${entireScenes[dirPath][0].name}`\n        sceneInfo.type = entireScenes[dirPath][0].ppt ? 'dynamic' : 'static'\n        if (sceneInfo.type === 'dynamic') {\n          sceneInfo.file.type = 'ppt';\n        }\n      }\n      scenes.push(sceneInfo);\n    }\n\n    const _dirPath = pathName(path);\n    const currentScenePath = _dirPath === \"\" ? \"/\" : `/${_dirPath}`;\n\n    const _dirs: SceneResource[] = [];\n    scenes.forEach((it: CustomScene) => {\n      _dirs.push({\n        path: it.path,\n        rootPath: it.rootPath,\n        file: it.file\n      });\n    });\n\n    this.state = {\n      ...this.state,\n      scenes: scenes,\n      currentScenePath: currentScenePath,\n      dirs: _dirs,\n      totalPage,\n      currentPage,\n      type,\n    }\n    this.commit(this.state);\n  }\n\n  setCurrentScene(dirPath: string) {\n    const currentDirIndex = this.state.dirs.findIndex((it: SceneResource) => it.path === dirPath);\n    this.state = {\n      ...this.state,\n      currentScenePath: dirPath,\n    }\n    this.commit(this.state);\n  }\n\n  updateSceneState(sceneState: SceneState) {\n    const path = sceneState.scenePath;\n    const ppt = sceneState.scenes[0].ppt;\n    const type = isEmpty(ppt) ? 'static' : 'dynamic';\n    const currentPage = sceneState.index;\n    const totalPage = sceneState.scenes.length;\n\n    this.state = {\n      ...this.state,\n      currentPage,\n      totalPage,\n      type,\n    }\n\n    this.commit(this.state);\n  }\n\n  updateScale(scale: number) {\n    this.state = {\n      ...this.state,\n      scale: scale\n    }\n    \n    this.commit(this.state);\n  }\n\n  updateLoading(value: boolean) {\n    this.state = {\n      ...this.state,\n      loading: value\n    }\n    this.commit(this.state);\n  }\n\n  async join({rid, uuid, roomToken, location, userPayload}: JoinParams) {\n    await this.leave();\n    const identity = userPayload.identity === 'host' ? 'host' : 'guest';\n\n    plugins.setPluginContext(\"video\", {identity});\n    plugins.setPluginContext(\"audio\", {identity});\n\n    const disableDeviceInputs: boolean = location!.match(/big-class/) && identity !== 'host' ? true : false;\n    const disableOperations: boolean = location!.match(/big-class/) && identity !== 'host' ? true : false;\n    const isWritable: boolean = location!.match(/big-class/) && identity !== 'host' ? false : true;\n\n    console.log(`[White] isWritable, ${isWritable}, disableDeviceInputs, ${disableDeviceInputs}, disableOperations, ${disableOperations}, location: ${location}`);\n\n    const roomParams = {\n      uuid,\n      roomToken,\n      disableBezier: true,\n      disableDeviceInputs,\n      disableOperations,\n      isWritable,\n      // rejectWhenReadonlyErrorLevel: RoomErrorLevel.Ignore,\n    }\n\n    const room = await this.client.joinRoom(roomParams, {\n      onPhaseChanged: (phase: RoomPhase) => {\n        if (phase === RoomPhase.Connected) {\n          this.disconnected = false\n          this.updateLoading(false);\n        } else {\n          this.disconnected = true\n          this.updateLoading(true);\n        }\n        console.log(\"[White] onPhaseChanged phase : \", phase);\n      },\n      onRoomStateChanged: state => {\n        console.log(\"onRoomStateChanged\", state)\n        if (state.zoomScale) {\n          whiteboard.updateScale(state.zoomScale);\n        }\n        if (state.sceneState || state.globalState) {\n          whiteboard.updateRoomState();\n        }\n      },\n      onDisconnectWithError: error => {},\n      onKickedWithReason: reason => {},\n      onKeyDown: event => {},\n      onKeyUp: event => {},\n      onHandToolActive: active => {},\n      onPPTLoadProgress: (uuid: string, progress: number) => {},\n    });\n\n    this.state = {\n      ...this.state,\n      room,\n    }\n    this.commit(this.state);\n  }\n\n  cleanRoom () {\n    this.state = {\n      ...this.state,\n      room: null\n    }\n    this.commit(this.state);\n  }\n\n  async leave() {\n    if (!this.state.room) return;\n    try {\n      await this.state.room.disconnect();\n    } catch(err) {\n      console.warn('disconnect whiteboard failed', err);\n    } finally {\n      this.disconnected = true\n      this.cleanRoom();\n      console.log(\"cleanRoom\");\n    }\n    this.updateLoading(true);\n  }\n\n  async destroy() {\n    await this.leave();\n    this.state = {\n      ...this.defaultState,\n    }\n    this.commit(this.state);\n    this.removeAllListeners();\n  }\n\n  private operator: any = null;\n\n  async lock() {\n    const lockBoardStatus = Boolean(roomStore.state.course.lockBoard)\n    const lockBoard = lockBoardStatus ? 0 : 1\n    await roomStore.updateCourse({\n      lockBoard\n    })\n    if (lockBoard) {\n      globalStore.showToast({\n        type: 'notice-board',\n        message: t('toast.whiteboard_lock')\n      })\n    } else {\n      globalStore.showToast({\n        type: 'notice-board',\n        message: t('toast.whiteboard_unlock')\n      })\n    }\n  }\n}\n\nexport const whiteboard = new Whiteboard();\n// TODO: Please remove it before release in production\n// 备注：请在正式发布时删除操作的window属性\n//@ts-ignore\nwindow.netlessStore = whiteboard;\n","import React, { useEffect, useRef } from 'react';\nimport {historyStore} from '../stores/history';\nimport { GlobalState, globalStore} from '../stores/global';\nimport { RoomState, roomStore} from '../stores/room';\nimport {ErrorState, errorStore} from '../pages/error-page/state';\nimport { WhiteboardState, whiteboard } from '../stores/whiteboard';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { resolvePeerMessage, jsonParse } from '../utils/helper';\nimport GlobalStorage from '../utils/custom-storage';\nimport {fetchI18n} from '../services/edu-api';\nimport { t } from '../i18n';\nimport { ChatCmdType } from '../utils/agora-rtm-client';\nimport Log from '../utils/LogUploader';\n\nexport type IRootProvider = {\n  globalState: GlobalState\n  roomState: RoomState\n  whiteboardState: WhiteboardState\n  errorState: ErrorState\n  historyState: any\n}\n\nexport interface IObserver<T> {\n  subscribe: (setState: (state: T) => void) => void\n  unsubscribe: () => void\n  defaultState: T\n}\n\nfunction useObserver<T>(store: IObserver<T>) {\n  const [state, setState] = React.useState<T>(store.defaultState);\n  React.useEffect(() => {\n    store.subscribe((state: any) => {\n      setState(state);\n    });\n    return () => {\n      store.unsubscribe();\n    }\n  }, []);\n\n  return state;\n}\n\n\nexport const RootContext = React.createContext({} as IRootProvider);\n\nexport const useStore = () => {\n  const context = React.useContext(RootContext)\n  if (context === undefined) {\n    throw new Error('useStore must be used within a RootProvider');\n  }\n  return context;\n}\n\nexport const useGlobalState = () => {\n  return useStore().globalState;\n}\n\nexport const useRoomState = () => {\n  return useStore().roomState;\n}\n\nexport const useWhiteboardState = () => {\n  return useStore().whiteboardState;\n}\n\nexport const useErrorState = () => {\n  return useStore().errorState;\n}\n\nconst initLogWorker = () => {\n  Log.init();\n};\n\nexport const RootProvider: React.FC<any> = ({children}) => {\n  const globalState = useObserver<GlobalState>(globalStore);\n  const roomState = useObserver<RoomState>(roomStore);\n  const whiteboardState = useObserver<WhiteboardState>(whiteboard);\n  const errorState = useObserver<ErrorState>(errorStore);\n  const historyState = useObserver<any>(historyStore);\n  const history = useHistory();\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const value = {\n    globalState,\n    roomState,\n    whiteboardState,\n    errorState,\n    historyState,\n  }\n\n  useEffect(() => {\n    initLogWorker()\n    fetchI18n()\n    historyStore.setHistory(history)\n  }, [])\n\n  useEffect(() => {\n    if (!roomStore.state.rtm.joined) return;\n    const rtmClient = roomStore.rtmClient;\n    rtmClient.on('ConnectionStateChanged', ({ newState, reason }: { newState: string, reason: string }) => {\n      console.log(`newState: ${newState} reason: ${reason}`);\n      if (reason === 'LOGIN_FAILURE') {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.login_failure'),\n        });\n        history.push('/');\n        return;\n      }\n      if (reason === 'REMOTE_LOGIN' || newState === 'ABORTED') {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.kick'),\n        });\n        history.push('/');\n        return;\n      }\n    });\n    rtmClient.on(\"MessageFromPeer\", ({ message: { text }, peerId, props }: { message: { text: string }, peerId: string, props: any }) => {\n      const body = resolvePeerMessage(text);\n      console.log(\"message\", text, body)\n\n      // resolveMessage(peerId, body);\n      roomStore\n      .handlePeerMessage(body, peerId)\n      .then(() => {\n      }).catch(console.warn);\n    });\n    rtmClient.on(\"ChannelMessage\", ({ memberId, message }: { message: { text: string }, memberId: string }) => {\n      const {cmd, data} = jsonParse(message.text);\n      console.log(\"ChannelMessage cmd:  \", message, cmd, JSON.stringify(data))\n      // TODO: chat message\n      // TODO: 更新即时聊天\n      if (cmd === ChatCmdType.chat) {\n        if (data.userId === roomStore.state.me.userId) return\n        const isChatroom = globalStore.state.active === 'chatroom';\n        if (!isChatroom) {\n          globalStore.setMessageCount(globalStore.state.newMessageCount+1);\n        } else {\n          globalStore.setMessageCount(0);\n        }\n        const chatMessage = {\n          account: data.userName,\n          text: data.message,\n          ts: +Date.now(),\n          id: memberId,\n        }\n        roomStore.updateChannelMessage(chatMessage);\n        console.log(\"[rtmClient] chatMessage \", chatMessage, \" raw Data: \", data);\n      }\n\n      // TODO: update room member changed\n      // TODO: 更新人员进出\n      if (cmd === ChatCmdType.roomMemberChanged) {\n        const memberCount = data.total\n        roomStore.updateRoomMember(memberCount)\n      }\n\n      // TODO: update course state\n      // TODO: 更新房间信息\n      if (cmd === ChatCmdType.roomInfoChanged) {\n        roomStore.updateRoomInfo({\n          muteAllChat: data.muteAllChat,\n          lockBoard: data.lockBoard,\n          courseState: data.courseState\n        })\n      }\n\n      // TODO: update room co-video-users\n      // TODO: 更新连麦用户\n      if (cmd === ChatCmdType.coVideoUsersChanged) {\n        const users = data;\n        roomStore.updateCoVideoUsers(users);\n      }\n\n      // TODO: replay message\n      // TODO: 更新录制回放\n      if (cmd === ChatCmdType.replay) {\n        const isChatroom = globalStore.state.active === 'chatroom';\n        if (!isChatroom) {\n          globalStore.setMessageCount(globalStore.state.newMessageCount+1);\n        } else {\n          globalStore.setMessageCount(0);\n        }\n        const replayMessage = {\n          account: data.userName,\n          text: 'recording',\n          link: data.recordId,\n          ts: +Date.now(),\n          id: data.uid,\n        }\n        roomStore.updateChannelMessage(replayMessage);\n        console.log(\"[rtmClient] replayMessage\", replayMessage, \" raw Data: \", data);\n      }\n\n      if (cmd === ChatCmdType.screenShare) {\n        roomStore.updateScreenShare({\n          state: data.state,\n          screenId: data.screenId,\n          userId: data.userId\n        })\n      }\n\n      // TODO: recordingStateChanged\n      // TODO: 录制状态发生改变了\n      if (cmd === ChatCmdType.recordStateChanged) {\n        console.log(\"Received, ChatCmdType.recordStateChanged: \", cmd)\n        roomStore.updateRecordState({\n          roomId: data.roomId,\n          recordId: data.recordId,\n          isRecording: data.isRecording,\n          recordingTime: data.recordingTime\n        })\n      }\n    });\n    return () => {\n      rtmClient.removeAllListeners();\n    }\n  }, [roomStore.state.rtm.joined]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      return;\n    }\n\n    const room = value.roomState;\n    GlobalStorage.save('agora_room', {\n      me: room.me,\n      course: room.course,\n      mediaDevice: room.mediaDevice,\n      applyUser: room.applyUser,\n    });\n    GlobalStorage.setLanguage(value.globalState.language);\n    // TODO: Please remove it before release in production\n    // 备注：请在正式发布时删除操作的window属性\n    //@ts-ignore\n    window.errorState = errorState;\n    //@ts-ignore\n    window.room = roomState;\n    //@ts-ignore\n    window.globalState = globalState;\n    //@ts-ignore\n    window.whiteboard = whiteboardState;\n  }, [value, location]);\n  return (\n    <RootContext.Provider value={value}>\n      {children}\n    </RootContext.Provider>\n  )\n}","import React, { useRef, useEffect, useState, useMemo } from 'react';\nimport Icon from './icon';\nimport './video-player.scss';\nimport { AgoraElectronStream, StreamType, AgoraRtcEngine } from '../utils/agora-electron-client';\nimport { useRoomState } from '../containers/root-container';\nimport { platform } from '../utils/platform';\n\nconst fillContentMode = 0;\nconst fitContentMode = 1;\n\ninterface VideoPlayerProps {\n  domId?: string\n  id?: string\n  streamID: number\n  preview?: boolean\n  account?: any\n  stream?: any\n  role?: string\n  audio?: boolean\n  video?: boolean\n  className?: string\n  showProfile?: boolean\n  local?: boolean\n  handleClick?: (type: string, streamID: number, uid: string) => Promise<any>\n  close?: boolean\n  handleClose?: (uid: string, streamID: number) => void\n  autoplay?: boolean\n}\n\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({\n  preview,\n  role,\n  account,\n  stream,\n  className,\n  domId,\n  streamID,\n  audio,\n  id,\n  video,\n  handleClick,\n  local,\n  handleClose,\n  close,\n  autoplay\n}) => {\n  const loadVideo = useRef<boolean>(false);\n  const loadAudio = useRef<boolean>(false);\n\n  const lockPlay = useRef<boolean>(false);\n\n  const [resume, setResume] = useState<boolean>(false);\n\n  // TODO: 根据组件autoplay属性，仅判断远端流autoplay失败时触发\n  // TODO: only trigger resume when play remote stream\n  const needResume = useMemo(() => {\n    return resume === true &&\n      autoplay === false &&\n      local === false\n  }, [resume, autoplay, local])\n\n  useEffect(() => {\n    if (!domId || !stream || !AgoraRtcEngine) return;\n    if (platform === 'electron') {\n      const _stream = stream as AgoraElectronStream;\n      const dom = document.getElementById(domId);\n      if (!dom) return;\n      console.log(\"[agora-electron] video player\", dom, streamID, fillContentMode);\n      if (preview) {\n        // set for preview\n        AgoraRtcEngine.setupLocalVideo(dom);\n        AgoraRtcEngine.setupViewContentMode(streamID, fillContentMode);\n        AgoraRtcEngine.setClientRole(1);\n        // preview mode required you become host\n        AgoraRtcEngine.startPreview();\n        // AgoraRtcEngine.muteLocalVideoStream(nativeClient.published);\n        // AgoraRtcEngine.muteLocalAudioStream(nativeClient.published);\n        return () => {\n          console.log(\"[agora-electron] stop preview\", dom, streamID, fillContentMode);\n          AgoraRtcEngine.stopPreview();\n          AgoraRtcEngine.setClientRole(2);\n        }\n      }\n      if (_stream.type === StreamType.local) {\n        console.log(\"[agora-electron] video-player play \", AgoraRtcEngine.setupViewContentMode(streamID, fillContentMode));\n        console.log(\"[agora-electron] video-player setupLocalVideo \", AgoraRtcEngine.setupLocalVideo(dom));\n        return () => {\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n\n      if (_stream.type === StreamType.localVideoSource) {\n        AgoraRtcEngine.setupLocalVideoSource(dom);\n        AgoraRtcEngine.setupViewContentMode('videosource', fitContentMode);\n        // AgoraRtcEngine.setupViewContentMode(streamID, fitContentMode);\n        return () => {\n          // AgoraRtcEngine.destroyRenderView('videosource');\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n\n      if (_stream.type === StreamType.remote) {\n        AgoraRtcEngine.subscribe(streamID, dom);\n        AgoraRtcEngine.setupViewContentMode(streamID, fillContentMode);\n        return () => {\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n\n      if (_stream.type === StreamType.remoteVideoSource) {\n        AgoraRtcEngine.subscribe(streamID, dom);\n        // AgoraRtcEngine.setupViewContentMode('videosource', fitContentMode);\n        AgoraRtcEngine.setupViewContentMode(streamID, fitContentMode);\n        return () => {\n          // AgoraRtcEngine.destroyRenderView('videosource');\n          // AgoraRtcEngine.destroyRenderView(streamID, dom, (err: any) => { console.warn(err.message) });\n        }\n      }\n    }\n  }, [domId, stream, AgoraRtcEngine]);\n\n  useEffect(() => {\n    if (platform === 'web') {\n      if (!stream || !domId || lockPlay.current && stream.isPlaying()) return;\n      lockPlay.current = true;\n      stream.play(`${domId}`, { fit: 'cover' }, (err: any) => {\n        lockPlay.current = false;\n        console.warn('[video-player] ', JSON.stringify(err), id, stream.isPaused(), stream.isPlaying(), ' isLocal: ', local);\n        if (!autoplay && err && err.audio && err.audio.status !== \"aborted\" && !local) {\n          stream.isPaused() && setResume(true);\n          console.warn('[video-player] play failed ', JSON.stringify(err), id, stream.isPaused(), stream.isPlaying());\n        }\n      })\n      return () => {\n        if (stream.isPlaying()) {\n          stream.stop();\n        }\n      }\n    }\n  }, [domId, stream]);\n\n\n  useEffect(() => {\n    if (stream && platform === 'web') {\n      // prevent already muted audio\n      if (!loadAudio.current) {\n        if (!audio) {\n          stream.muteAudio();\n          console.log('stream mute audio');\n        }\n        loadAudio.current = true;\n        return;\n      }\n\n      if (audio) {\n        console.log('stream unmute audio');\n        stream.unmuteAudio();\n      } else {\n        console.log('stream mute audio');\n        stream.muteAudio();\n      }\n    }\n\n    if (stream && platform === 'electron') {\n      if (stream.type !== StreamType.local) return;\n      // prevent already muted video\n      if (!loadAudio.current) {\n        if (!audio) {\n          const res = AgoraRtcEngine.muteLocalAudioStream(true);\n          console.log(\"[agora-electron] muteLocalAudioStream(true); \", res);\n        }\n        loadAudio.current = true;\n        return;\n      }\n\n      if (audio) {\n        const res = AgoraRtcEngine.muteLocalAudioStream(false);\n        console.log(\"[agora-electron] muteLocalAudioStream(false); \", res);\n      } else {\n        const res = AgoraRtcEngine.muteLocalAudioStream(true);\n        console.log(\"[agora-electron] muteLocalAudioStream(true); \", res);\n      }\n    }\n  }, [stream, audio, AgoraRtcEngine]);\n\n  useEffect(() => {\n    if (stream && platform === 'web') {\n      // prevent already muted video\n      if (!loadVideo.current) {\n        if (!video) {\n          console.log('stream mute video');\n          stream.muteVideo();\n        }\n        loadVideo.current = true;\n        return;\n      }\n\n      if (video) {\n        console.log('stream unmute video');\n        stream.unmuteVideo();\n      } else {\n        console.log('stream mute video');\n        stream.muteVideo();\n      }\n    }\n\n    if (stream && platform === 'electron') {\n      if (stream.type !== StreamType.local) return;\n      // prevent already muted video\n      if (!loadVideo.current) {\n        if (!video) {\n          // const res = AgoraRtcEngine.muteLocalVideoStream(true);\n          const res = AgoraRtcEngine.enableLocalVideo(false);\n          console.log(\"[agora-electron] enableLocalVideo(false); \", res);\n        }\n        loadVideo.current = true;\n        return;\n      }\n\n      if (video) {\n        // const res = AgoraRtcEngine.muteLocalVideoStream(false);\n        const res2 = AgoraRtcEngine.enableLocalVideo(true);\n        console.log(\"[agora-electron] enableLocalVideo(true); \", res2);\n      } else {\n        // const res = AgoraRtcEngine.muteLocalVideoStream(true);\n        const res2 = AgoraRtcEngine.enableLocalVideo(false);\n        console.log(\"[agora-electron] enableLocalVideo(false); \", res2);\n      }\n    }\n  }, [stream, video, AgoraRtcEngine]);\n\n  const onAudioClick = (evt: any) => {\n    if (handleClick && id) {\n      handleClick('audio', streamID, id);\n    }\n  }\n\n  const onVideoClick = (evt: any) => {\n    if (handleClick && id) {\n      handleClick('video', streamID, id);\n    }\n  }\n\n  const onClose = (evt: any) => {\n    if (handleClose && id) {\n      handleClose('close', streamID);\n    }\n  }\n\n  const roomState = useRoomState()\n\n  const me = roomState.me;\n\n  return (\n    <div className={`${className ? className : (preview ? 'preview-video rotateY180deg' : `agora-video-view ${Boolean(video) === false && stream ? 'show-placeholder' : ''}`)}`}>\n      {close ? <div className=\"icon-close\" onClick={onClose}></div> : null}\n      {className !== 'screen-sharing' ? <div className={role === 'teacher' ? 'teacher-placeholder' : 'student-placeholder'}></div> : null}\n      {preview ? null :\n        account ?\n          <div className=\"video-profile\">\n            <span className=\"account\">{account}</span>\n            {`${me.uid}` === `${id}` || me.role === 1 ?\n              <span className=\"media-btn\">\n                <Icon onClick={onAudioClick} className={audio ? \"icon-speaker-on\" : \"icon-speaker-off\"} data={\"audio\"} />\n                <Icon onClick={onVideoClick} className={video ? \"icons-camera-unmute-s\" : \"icons-camera-mute-s\"} data={\"video\"} />\n              </span> : null}\n          </div>\n          : null\n      }\n      <div id={`${domId}`} className={`agora-rtc-video ${local ? 'rotateY180deg' : ''}`}></div>\n      {needResume ? <div className=\"clickable\" onClick={() => {\n        stream.resume().then(() => {\n          setResume(false);\n          console.log(\"clickable\");\n        }).catch(console.warn);\n      }}></div> : null}\n    </div>\n  )\n}\n\nexport default React.memo(VideoPlayer);","import React from 'react';\nimport { FormControl } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from './custom-button';\nimport FormSelect from './form-select';\nimport SpeakerVolume from './volume/speaker';\nimport useSettingControl from '../hooks/use-setting-control';\nimport {t} from '../i18n';\n\nimport { usePlatform } from '../containers/platform-container';\n\nconst useStyles = makeStyles ({\n  formControl: {\n    minWidth: '240px',\n    maxWidth: '240px',\n  }\n});\n\ninterface SettingProps {\n  className?: string\n  handleFinish: (evt: any) => void\n}\n\nexport default function (props: SettingProps) {\n  const classes = useStyles();\n\n  const {SettingBtn} = usePlatform();\n  const {\n    cameraList,\n    microphoneList,\n    speakerList,\n    camera,\n    microphone,\n    speaker,\n    setCamera,\n    setMicrophone,\n    setSpeaker,\n    // volume,\n    speakerVolume,\n    setSpeakerVolume,\n    save,\n    PreviewPlayer,\n    MicrophoneVolume\n  } = useSettingControl();\n\n  const changeCamera = (evt: any) => {\n    console.log('changeCamera ', evt.target.value);\n    setCamera(evt.target.value);\n  }\n\n  const changeMicrophone = (evt: any) => {\n    console.log('changeMicrophone ', evt.target.value);\n    setMicrophone(evt.target.value);\n  }\n\n  const changeSpeaker = (evt: any) => {\n    console.log('changeSpeaker ', evt.target.value);\n    setSpeaker(evt.target.value);\n  }\n\n  const changeSpeakerVolume = (volume: number) => {\n    console.log('changeSpeaker ', volume);\n    setSpeakerVolume(volume);\n  }\n\n  return (\n    <div className={props.className ? props.className : \"flex-container\"}>\n      <div className=\"custom-card\">\n        <div className=\"flex-item cover\">\n          <PreviewPlayer />\n        </div>\n        <div className=\"flex-item card\">\n          <div className=\"position-top card-menu\">\n            <div></div>\n            <div className=\"icon-container\">\n              <SettingBtn />\n            </div>\n          </div>\n          <div className=\"position-content flex-direction-column\">\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t(\"device.camera\")}\n                value={camera}\n                onChange={changeCamera}\n                items={cameraList}\n              />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t(\"device.microphone\")}\n                value={microphone}\n                onChange={changeMicrophone}\n                items={microphoneList}\n              />\n              <MicrophoneVolume />\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <FormSelect \n                Label={t(\"device.speaker\")}\n                value={speaker}\n                onChange={changeSpeaker}\n                items={speakerList}\n              />\n              <SpeakerVolume volume={speakerVolume} onChange={changeSpeakerVolume} />\n            </FormControl>\n            <Button name={t(\"device.finish\")} onClick={(evt: any) => {\n              save({\n                speakerVolume,\n                camera,\n                microphone,\n                speaker,\n              })\n              props.handleFinish(evt);\n            }}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import { usePlatform } from '../containers/platform-container';\nimport React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport VoiceVolume from '../components/volume/voice';\nimport {AgoraWebClient} from '../utils/agora-web-client';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport VideoPlayer from '../components/video-player';\nimport { useRoomState } from '../containers/root-container';\nimport { roomStore, MediaDeviceState } from '../stores/room';\n\nexport default function useSettingControl () {\n\n  const [devices, setDevices] = useState<any[]>([]);\n\n  const {platform} = usePlatform();\n\n  const cameraList = useMemo(() => {\n    return devices\n    .filter((it: Device) => \n      it.kind === 'videoinput');\n  }, [devices]);\n\n  const microphoneList = useMemo(() => {\n    return devices\n    .filter((it: Device) => \n      it.kind === 'audioinput');\n  }, [devices]);\n\n  const speakerList = useMemo(() => {\n    return devices\n    .filter((it: Device) => \n      it.kind === 'audiooutput');\n  }, [devices]);\n\n  const roomState = useRoomState();\n\n  const mediaDevice = useMemo(() => {\n    return roomState.mediaDevice;\n  }, [roomState.mediaDevice]);\n\n  const [camera, setCamera] = useState(mediaDevice.camera);\n  const [microphone, setMicrophone] = useState(mediaDevice.microphone);\n  const [speaker, setSpeaker] = useState(mediaDevice.speaker);\n  const [speakerVolume, setSpeakerVolume] = useState<number>(mediaDevice.speakerVolume);\n  const [volume, setVolume] = useState<number>(0);\n\n  let mounted = false;\n\n  useEffect(() => {\n    const rtcClient: AgoraWebClient | AgoraElectronClient = roomStore.rtcClient;\n    if (!platform || !rtcClient) return;\n\n    if (platform === 'web' && !mounted) {\n      const webClient = rtcClient as AgoraWebClient;\n      const onChange = async () => {\n        const devices: Device[] = await webClient.getDevices();\n        setDevices(devices.map((item: Device) => ({\n          value: item.deviceId,\n          text: item.label,\n          kind: item.kind\n        })));\n      }\n      window.addEventListener('devicechange', onChange);\n      onChange().then(() => {\n      }).catch(console.warn);\n      mounted = true;\n      return () => {\n        window.removeEventListener('devicechange', onChange);\n      }\n    }\n\n    if (platform === 'electron' && !mounted) {\n      const nativeClient = rtcClient as AgoraElectronClient;\n\n      const onChange = async () => {\n        let microphoneIds = await nativeClient.rtcEngine.getAudioRecordingDevices();\n        let speakerIds = await nativeClient.rtcEngine.getAudioPlaybackDevices();\n        let cameraIds = await nativeClient.rtcEngine.getVideoDevices();\n\n        const microphones = microphoneIds.map((it: any) => (\n          {\n            kind: 'audioinput',\n            text: it.devicename,\n            value: it.deviceid\n          }\n        ));\n        const speakers = speakerIds.map((it: any) => ({\n          kind: 'audiooutput',\n          text: it.devicename,\n          value: it.deviceid,\n        }));\n        const cameras = cameraIds.map((it: any) => ({\n          kind: 'videoinput',\n          text: it.devicename,\n          value: it.deviceid,\n        }));\n        setDevices([].concat(microphones).concat(speakers).concat(cameras));\n      }\n      onChange().then(() => console.log('electron devices changed'))\n        .catch(console.warn);\n\n      nativeClient.on('videodevicestatechanged', onChange);\n      nativeClient.on('audiodevicestatechanged', onChange);\n      mounted = true;\n      return () => {\n        nativeClient.off('videodevicestatechanged', onChange);\n        nativeClient.off('audiodevicestatechanged', onChange);\n      }\n    }\n  }, [platform]);\n\n  const cameraId: string = useMemo(() => {\n    return cameraList[camera] ? cameraList[camera].value : '';\n  }, [cameraList, camera]);\n\n  const microphoneId: string = useMemo(() => {\n    return microphoneList[microphone] ? microphoneList[microphone].value : '';\n  }, [microphoneList, microphone]);\n\n  const speakerId: string = useMemo(() => {\n    return speakerList[speaker] ? speakerList[speaker].value : '';\n  }, [speakerList, speaker]);\n\n  const [stream, setStream] = useState<any>(null);\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n  useEffect(() => {\n    if (lock.current || !speakerId || !cameraId || !microphoneId) return;\n    const rtcClient: AgoraWebClient | AgoraElectronClient = roomStore.rtcClient;\n    lock.current = true;\n    if (platform === 'web') {\n      const webClient = rtcClient as AgoraWebClient;\n      !ref.current &&\n      webClient.createPreviewStream({\n        cameraId,\n        microphoneId,\n        speakerId,\n      }).then((stream: any) => {\n        !ref.current && setStream(stream);\n      }).finally(() => {\n        lock.current = false;\n      })\n    }\n\n    if (platform === 'electron') {\n      const nativeClient = rtcClient as AgoraElectronClient;\n      const stream = nativeClient.createStream({\n        streamID: 0,\n        cameraId,\n        microphoneId,\n        speakerId,\n      })\n      setStream(stream);\n      lock.current = false;\n    }\n  }, [platform, speakerId, cameraId, microphoneId]);\n\n  const interval = useRef<any>(null);\n\n  useEffect(() => {\n    if (!stream || !stream.getAudioLevel) return;\n    interval.current = setInterval(() => {\n      !ref.current && setVolume(stream.getAudioLevel())\n    }, 300);\n    return () => {\n      interval.current && clearInterval(interval.current);\n      interval.current = null;\n    }\n  }, [stream]);\n\n  useEffect(() => {\n    if (!stream) return;\n    if (platform === 'electron') {\n      console.log(\"[electron-client] add volume event listener\");\n      const onVolumeChange = (speakers: any[], speakerNumber: number, totalVolume: number)=> {\n        setVolume(Number((totalVolume / 255).toFixed(3)))\n      }\n      const rtcClient: AgoraWebClient | AgoraElectronClient = roomStore.rtcClient;\n      const nativeClient = rtcClient as AgoraElectronClient;\n      nativeClient.rtcEngine.setClientRole(1);\n      const res = nativeClient.rtcEngine.enableAudioVolumeIndication(1000, 3, true);\n      console.log(\"enableAudioVolumeIndication(1000, 3, true), \", res)\n      nativeClient.rtcEngine.on('groupAudioVolumeIndication', onVolumeChange);\n      console.log('startplayback on result', nativeClient.rtcEngine.startAudioRecordingDeviceTest(300));\n      return () => {\n        nativeClient.rtcEngine.off(\"groupAudioVolumeIndication\", onVolumeChange);\n        console.log('startplayback off result', nativeClient.rtcEngine.stopAudioPlaybackDeviceTest());\n      }\n    }\n  }, [stream]);\n\n  const PreviewPlayer = useCallback(() => {\n    if (!stream) return null;\n    return (\n      <VideoPlayer\n        domId={\"local\"}\n        preview={true}\n        stream={stream}\n        streamID={0}\n        video={true}\n        audio={true}\n        local={true}\n      />\n    )\n\n  }, [stream]);\n\n  const MicrophoneVolume = useCallback(() => {\n    return (<VoiceVolume volume={volume}/>)\n  }, [volume]);\n\n  const handleSave = (args: {camera: number, microphone: number, speaker: number, speakerVolume: number}) => {\n    const { camera, microphone, speaker, speakerVolume } = args;\n    const cameraId = cameraList[camera] ? cameraList[camera].value : '';\n    const microphoneId = microphoneList[microphone] ? microphoneList[microphone].value : '';\n    const speakerId = speakerList[speaker] ? speakerList[speaker].value : '';\n    const mediaInfo: MediaDeviceState = {\n      cameraId,\n      microphoneId,\n      speakerId,\n      camera,\n      microphone,\n      speaker,\n      speakerVolume,\n    }\n    ref.current = true;\n    roomStore.updateDevice(mediaInfo);\n    if (stream && stream.close) {\n      stream.close();\n    }\n  }\n\n  return {\n    volume,\n    cameraList,\n    microphoneList,\n    speakerList,\n    camera,\n    microphone,\n    speaker,\n    setCamera,\n    setMicrophone,\n    setSpeaker,\n    speakerVolume,\n    setSpeakerVolume,\n    PreviewPlayer,\n    MicrophoneVolume,\n    save: handleSave,\n  }\n}\n","import React, { useEffect } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport SettingCard from '../components/setting-card';\nimport { isElectron } from '../utils/platform';\nimport { roomStore } from '../stores/room';\nimport {AgoraWebClient} from '../utils/agora-web-client';\nimport {platform} from '../utils/platform';\n\nfunction DeviceTest() {\n  const history = useHistory();\n\n  const handleClick = (evt: any) => {\n    history.push('/')\n  }\n\n  useEffect(() => {\n    if (platform === 'web') {\n      const webClient = roomStore.rtcClient as AgoraWebClient;\n      return () => {\n        if (webClient.tmpStream) {\n          webClient.tmpStream.isPlaying() && webClient.tmpStream.stop();\n          webClient.tmpStream.close();\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <div className={`flex-container ${isElectron ? 'draggable' : 'home-cover-web'}`}>\n      <SettingCard handleFinish={handleClick} />\n    </div>\n  )\n}\n\nexport default React.memo(DeviceTest);","export interface ChatMessage {\n  account: string\n  text: string\n  link?: string\n  ts: number\n  id: string\n}\nexport enum ClassState {\n  CLOSED = 0,\n  STARTED = 1\n}\n\nexport interface AgoraMediaStream {\n  streamID: number\n  local: boolean\n  account?: string\n  stream?: any\n  video?: boolean\n  audio?: boolean\n  playing?: boolean\n}\n\nexport class AgoraStream {\n  constructor(\n    public readonly stream: any = stream,\n    public readonly streamID: number = streamID,\n    public readonly local: boolean = local,\n  ) {\n  }\n}","import React, { useState, useEffect, useRef } from 'react';\nimport Icon from './icon';\nimport SettingCard from '../components/setting-card';\nimport './nav.scss';\nimport Button from './custom-button';\nimport * as moment from 'moment';\nimport { ClassState } from '../utils/types';\nimport { NetworkQualityEvaluation } from '../utils/helper';\nimport { usePlatform } from '../containers/platform-container';\nimport {AgoraWebClient} from '../utils/agora-web-client';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport { isElectron, platform } from '../utils/platform';\nimport { useRoomState } from '../containers/root-container';\nimport { roomStore } from '../stores/room';\nimport { globalStore } from '../stores/global';\nimport { t } from '../i18n';\nimport Log from '../utils/LogUploader';\nimport { Tooltip } from '@material-ui/core';\n\ninterface NavProps {\n  delay: string\n  network: string\n  cpu: string\n  role: number\n  roomName: string\n  time: number\n  showSetting: boolean\n  classState: boolean\n  onCardConfirm: (type: string) => void\n  handleClick: (type: string) => void\n}\n\nconst networkQualityIcon: {[key: string]: string} = {\n  'excellent': 'network-good',\n  'good': 'network-good',\n  'poor': 'network-normal',\n  'bad': 'network-normal',\n  'very bad': 'network-bad',\n  'down': 'network-bad',\n  'unknown': 'network-bad',\n}\n\nexport function Nav ({\n  delay,\n  network,\n  cpu,\n  role,\n  roomName,\n  time,\n  handleClick,\n  showSetting,\n  classState,\n  onCardConfirm,\n}: NavProps) {\n\n  const {NavBtn} = usePlatform();\n    \n  const handleFinish = (evt: any) => {\n    onCardConfirm('setting');\n  }\n\n  return (\n    <>\n    <div className={`nav-container ${isElectron ? 'draggable' : ''}`}>\n      <div className=\"class-title\">\n        <span className=\"room-name\">{roomName}</span>\n          {+role === 1 ? \n            <Button className={`nav-button ${classState ? \"stop\" : \"start\"}`} name={classState ? t('nav.class_end') : t('nav.class_start')} onClick={(evt: any) => {\n              handleClick(\"classState\")\n            }} /> : null}\n\n            {/* <Button className={`nav-button ${ \"stop\" }`} name={t('nav.class_end')} onClick={(evt: any) => {\n              handleClick(\"classState\")\n            }} /> */}\n        \n      </div>\n      <div className=\"network-state\">\n        {platform === 'web' ? <span className=\"net-field\">{t('nav.delay')}<span className=\"net-field-value\">{delay}</span></span> : null}\n        {/* <span className=\"net-field\">Packet Loss Rate: <span className=\"net-field-value\">{lossPacket}</span></span> */}\n        <span className=\"net-field net-field-container\">\n          {t('nav.network')}\n          <span className={`net-field-value ${networkQualityIcon[network]}`} style={{marginLeft: '.2rem'}}>\n          </span>\n        </span>\n        {platform === 'electron' ? <span className=\"net-field\">{t('nav.cpu')}<span className=\"net-field-value\">{cpu}</span></span> : null}\n      </div>\n      <div className=\"menu\">\n        <div className=\"timer\">\n          <Icon className=\"icon-time\" disable />\n          <span className=\"time\">{moment.utc(time).format('HH:mm:ss')}</span>\n        </div>\n        <span className=\"menu-split\" />\n        <div className={platform === 'web' ? \"btn-group\" : 'electron-btn-group' }>\n          {platform === 'web' ?\n            <>\n            <Tooltip title={t(\"icon.setting\")} placement=\"bottom\">\n              <span>\n                <Icon className=\"icon-setting\" onClick={(evt: any) => {\n                  handleClick(\"setting\");\n                }}/>\n              </span>\n            </Tooltip>\n\n            </> : null\n          }\n          <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n            <span>\n              <Icon className={globalStore.state.lock ? \"icon-loading\" : \"icon-upload\"} onClick={(evt: any) => {\n                handleClick('uploadLog')\n              }}></Icon>\n            </span>\n          </Tooltip>\n          <Tooltip title={t(\"icon.exit-room\")} placement=\"bottom\">\n            <span>\n              <Icon className=\"icon-exit\" onClick={(evt: any) => {\n                handleClick(\"exit\");\n              }} />\n            </span>\n          </Tooltip>\n        </div>\n        <NavBtn />\n      </div>\n    </div>\n    {showSetting ? \n      <SettingCard className=\"internal-card\"\n        handleFinish={handleFinish} /> : null\n    }\n    </>\n  )\n}\n\nexport default function NavContainer() {\n  const {\n    platform\n  } = usePlatform();\n\n  const ref = useRef<boolean>(false);\n\n  const [time, updateTime] = useState<number>(0);\n\n  const [timer, setTimer] = useState<any>(null);\n\n  const calcDuration = (time: number) => {\n    return setInterval(() => {\n      !ref.current && updateTime(+Date.now() - time);\n    }, 150, time)\n  }\n\n  const [card, setCard] = useState<boolean>(false);\n\n  const [rtt, updateRtt] = useState<number>(0);\n  const [quality, updateQuality] = useState<string>('unknown');\n  const [cpuUsage, updateCpuUsage] = useState<number>(0);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n      if (timer) {\n        clearInterval(timer);\n        setTimer(null);\n      }\n    }\n  }, []);\n\n  const roomState = useRoomState();\n\n  const me = roomState.me;\n\n  useEffect(() => {\n    const rtcClient = roomStore.rtcClient;\n    if (platform === 'web') {\n      const webClient = rtcClient as AgoraWebClient;\n      webClient.rtc.on('watch-rtt', (rtt: number) => {\n        !ref.current && updateRtt(rtt);\n      });\n      webClient.rtc.on('network-quality', (evt: any) => {\n        const quality = NetworkQualityEvaluation(evt);\n        !ref.current && updateQuality(quality);\n      })\n      return () => {\n        webClient.rtc.off('watch-rtt', () => {});\n        webClient.rtc.off('network-quality', () => {});\n      }\n    }\n    if (platform === 'electron') {\n      const nativeClient = rtcClient as AgoraElectronClient;\n      nativeClient.on('rtcStats', ({cpuTotalUsage}: any) => {\n        !ref.current && updateCpuUsage(cpuTotalUsage);\n      });\n      nativeClient.on('networkquality', (\n        uid: number,\n        txquality: number,\n        rxquality: number) => {\n        if (uid === 0) {\n          const quality = NetworkQualityEvaluation({\n            downlinkNetworkQuality: rxquality,\n            uplinkNetworkQuality: txquality,\n          });\n          !ref.current && updateQuality(quality);\n        }\n      })\n\n      return () => {\n        nativeClient.off('rtcStats', () => {});\n        nativeClient.off('networkquality', () => {});\n        nativeClient.off('audioquality', () => {});\n      }\n    }\n  }, []);\n\n  const courseState = roomState.course.courseState;\n  const course = roomState.course;\n\n  useEffect(() => {\n    if (courseState === ClassState.STARTED\n      && timer === null) {\n        const now: number = +Date.now();\n        setTimer(calcDuration(now));\n    }\n    if (timer && courseState === ClassState.CLOSED) {\n      clearInterval(timer);\n      setTimer(null);\n    }\n  }, [courseState]);\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n\n  const updateClassState = () => {\n    if (!lock.current) {\n      lock.current = true;\n      roomStore.updateCourse({\n        courseState: +!Boolean(roomStore.state.course.courseState)\n      }).then(() => {\n\n        // alert(roomStore.state.course.courseState);\n      }).catch(console.warn)\n      .finally(() => {\n        lock.current = false;\n      })\n    }\n    \n  };\n\n  const handleClick = (type: string) => {\n    if (type === 'setting') {\n      setCard(true);\n    } else if (type === 'exit') {\n      globalStore.showDialog({\n        type: 'exitRoom',\n        message: t('toast.quit_room'),\n      });\n    } else if (type === 'classState') {\n      updateClassState();\n    } else if (type === 'uploadLog') {\n      globalStore.lock()\n      Log.doUpload().then((resultCode: any) => {\n        globalStore.showDialog({\n          type: 'uploadLog',\n          message: t('toast.show_log_id', {reason: `${resultCode}`})\n        });\n      }).finally(() => {\n        globalStore.unlock()\n      })\n    }\n  }\n\n  const handleCardConfirm = (type: string) => {\n    switch (type) {\n      case 'setting':\n        setCard(false);\n        return;\n      case 'exitRoom':\n        globalStore.removeDialog();\n        return;\n    }\n  }\n\n  return (\n    <Nav \n      role={me.role}\n      roomName={course.roomName}\n      classState={Boolean(course.courseState)}\n      delay={`${rtt}ms`}\n      time={time}\n      network={`${quality}`}\n      cpu={`${cpuUsage}%`}\n      showSetting={card}\n      onCardConfirm={handleCardConfirm}\n      handleClick={handleClick}\n    />\n  )\n}","import React, {useMemo} from 'react';\nimport Button from '../custom-button';\nimport {Dialog, DialogContent, DialogContentText} from '@material-ui/core';\n\nimport './dialog.scss';\nimport { useGlobalState } from '@/containers/root-container';\nimport { roomStore } from '@/stores/room';\nimport { globalStore } from '@/stores/global';\nimport { useHistory } from 'react-router-dom';\n// import { RoomMessage } from '@/utils/agora-rtm-client';\nimport { t } from '@/i18n';\nimport { isElectron } from '@/utils/platform';\nimport { eduApi } from '@/services/edu-api';\n\ninterface RoomProps {\n  onConfirm: (type: string) => void\n  onClose: (type: string) => void\n  desc: string\n  type: string\n}\n\nfunction RoomDialog(\n{\n  onConfirm,\n  onClose,\n  desc,\n  type\n}: RoomProps) {\n\n  const handleClose = () => {\n    onClose(type)\n  };\n\n  const handleConfirm = () => {\n    onConfirm(type)\n  }\n\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        open={true}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent\n          className=\"modal-container\"\n        >\n          <DialogContentText className=\"dialog-title\">\n            {desc}\n          </DialogContentText>\n          <div className=\"button-group\">\n            <Button name={t(\"toast.confirm\")} className=\"confirm\" onClick={handleConfirm} color=\"primary\" />\n            <Button name={t(\"toast.cancel\")} className=\"cancel\" onClick={handleClose} color=\"primary\" />\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst DialogContainer = () => {\n\n  const history = useHistory();\n  const {dialog} = useGlobalState();\n\n  const visible = useMemo(() => {\n    if (!dialog.type) return false;\n    return true;\n  }, [dialog]);\n\n  const onClose = (type: string) => {\n    if (type === 'exitRoom') {\n      globalStore.removeDialog();\n    }\n    else if (type === 'apply') {\n      eduApi\n      .teacherRejectApply(\n        roomStore.state.course.roomId,\n        roomStore.state.applyUser.userId,\n      )\n      .then(() => {\n        globalStore.showToast({\n          type: 'peer_hands_up', \n          message: t('toast.reject_co_video')\n        });\n        globalStore.removeNotice();\n        globalStore.removeDialog();\n      })\n      .catch((err: any) => {\n        console.warn(err)\n      })\n    } else if (type === 'uploadLog') {\n      globalStore.removeDialog()\n    }\n  }\n\n  const onConfirm = (type: string) => {\n    if (type === 'exitRoom') {\n      globalStore.showLoading()\n      roomStore.exitRoom().finally(() => {\n        globalStore.removeDialog();\n        globalStore.stopLoading()\n        if (isElectron) {\n          history.push('/')\n        } else {\n          history.goBack()\n        }\n      })\n    }\n    else if (type === 'apply') {\n      // p2p message accept coVideo\n      // 老师同意学生连麦申请\n      eduApi.teacherAcceptApply(roomStore.state.course.roomId, roomStore.state.applyUser.userId)\n        .then(() => {\n          globalStore.showToast({\n            type: 'peer_hands_up', \n            message: t('toast.accept_co_video')\n          });\n          globalStore.removeNotice();\n          globalStore.removeDialog();\n        })\n        .catch((err: any) => {\n          console.warn(err)\n        })\n    }\n    else if (type === 'uploadLog') {\n      globalStore.removeDialog()\n    }\n\n    return;\n  }\n\n  return (\n    visible ? \n      <RoomDialog \n        type={dialog.type}\n        desc={dialog.message}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      /> : \n      null\n  )\n}\n\n\nexport default React.memo(DialogContainer);","import React from 'react';\nimport './native-shared-window.scss';\nimport Button from './custom-button';\nimport { usePlatform } from '../containers/platform-container';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport { AgoraStream } from '../utils/types';\nimport { globalStore } from '../stores/global';\nimport { roomStore } from '../stores/room';\nimport { useGlobalState } from '../containers/root-container';\nimport { eduApi } from '../services/edu-api';\nimport { t } from '../i18n';\n\nexport const WindowItem: React.FC<any> = ({\n  ownerName,\n  name,\n  className,\n  windowId,\n  image,\n}) => {\n\n  return (\n    <div className={className ? className : ''} >\n      <div className=\"screen-image\">\n        <div className=\"content\" style={{ backgroundImage: `url(data:image/png;base64,${image})` }}>\n        </div>\n      </div>\n      <div className=\"screen-meta\">{name}</div>\n    </div>\n  )\n}\n\nexport interface WindowListProps {\n  title: string\n  items: any[]\n  windowId: number\n  selectWindow: (windowId: any) => void\n  confirm: (evt: any) => void\n  cancel: (evt: any) => void\n}\n\nexport const WindowList: React.FC<WindowListProps> = ({\n  title,\n  items,\n  windowId,\n  selectWindow,\n  confirm,\n  cancel\n}) => {\n  return (\n    <div className=\"window-picker-mask\">\n      <div className=\"window-picker\">\n        <div className=\"header\">\n          <div className=\"title\">{title}</div>\n          <div className=\"cancelBtn\" onClick={cancel}></div>\n        </div>\n        <div className='screen-container'>\n          {\n            items.map((it: any, key: number) =>\n              <div className=\"screen-item\" \n                key={key}\n                onClick={() => {\n                  selectWindow(it.windowId);\n                }}\n                onDoubleClick={confirm}\n                >\n                <WindowItem\n                  ownerName={it.ownerName}\n                  name={it.name}\n                  className={`window-item ${it.windowId === windowId ? 'active' : ''}`}\n                  windowId={it.windowId}\n                  image={it.image}\n                />\n              </div>\n            )\n          }\n        </div>\n        <div className='footer'>\n          <Button className={'share-confirm-btn'} name={\"start\"}\n            onClick={confirm} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default function NativeSharedWindowContainer() {\n\n  const {\n    platform\n  } = usePlatform();\n\n  const globalState = useGlobalState();\n  const nativeWindowInfo = globalState.nativeWindowInfo;\n  const [windowId, setWindowId] = React.useState<any>('');\n\n  return (\n    nativeWindowInfo.visible ? \n    <WindowList\n      windowId={windowId}\n      title={'Please select and click window for share'}\n      items={nativeWindowInfo.items}\n      cancel={() => {\n        globalStore.setNativeWindowInfo({visible: false, items: []});\n      }}\n      selectWindow={(windowId: any) => {\n        setWindowId(windowId)\n      }}\n      confirm={async (evt: any) => {\n        if (!windowId) {\n          console.warn(\"windowId is empty\");\n          return;\n        }\n        try {\n          if (platform === 'electron') {\n            globalStore.showLoading();\n            const rtcClient = roomStore.rtcClient;\n            const nativeClient = rtcClient as AgoraElectronClient;\n            // screen share token\n            let {screenToken} = await eduApi.refreshToken();\n            let electronStream = await nativeClient.startScreenShare(\n              windowId,\n              +roomStore.state.course.screenId,\n              roomStore.state.course.rid,\n              screenToken,\n              roomStore.state.appID,\n            );\n            roomStore.addLocalSharedStream(new AgoraStream(electronStream, electronStream.uid, true));\n          }\n        } catch(err) {\n          const rtcClient = roomStore.rtcClient;\n          const nativeClient = rtcClient as AgoraElectronClient;\n          nativeClient.releaseScreenShare()\n          globalStore.showToast({\n            type: 'nativeScreenShare',\n            message: t(\"electron.start_screen_share_failed\")\n          })\n          console.warn(JSON.stringify(err))\n          throw err;\n        } finally {\n          globalStore.stopLoading();\n          globalStore.setNativeWindowInfo({visible: false, items: []});\n        }\n      }}\n    />\n    : null\n  )\n}","import React, { useEffect, useMemo, useRef } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Nav from '@/components/nav';\nimport RoomDialog from '@/components/dialog';\nimport { AgoraStream } from '@/utils/types';\nimport './room.scss';\nimport NativeSharedWindow from '@/components/native-shared-window';\nimport { roomStore } from '@/stores/room';\nimport { useRoomState } from '@/containers/root-container';\nimport { globalStore } from '@/stores/global';\nimport { platform } from '@/utils/platform';\nimport { AgoraWebClient } from '@/utils/agora-web-client';\nimport { AgoraStreamSpec } from '@/utils/agora-rtc-client';\nimport { AgoraElectronClient, StreamType } from '@/utils/agora-electron-client';\nimport { t } from '@/i18n';\nimport { eduApi } from '@/services/edu-api';\nimport { genUUID } from '@/utils/api';\n// import { useInterval } from 'react-use';\n\nexport const roomTypes = [\n  {value: 0, path: 'one-to-one'},\n  {value: 1, path: 'small-class'},\n  {value: 2, path: 'big-class'},\n];\n\n// const delay = 5000\n\nexport function RoomPage({ children }: any) {\n\n  const history = useHistory();\n\n  const lock = useRef<boolean>(false);\n\n  // useInterval(() => {\n  //   roomStore.fetchRoomState()\n  // }, delay)\n\n  useEffect(() => {\n    const me = roomStore.state.me;\n    const course = roomStore.state.course;\n\n    if (!me.account || !course.roomName) {\n      history.push('/');\n    }\n\n    lock.current = true;\n    if (roomStore.state.rtm.joined) return;\n    globalStore.showLoading();\n    roomStore.fetchCurrentRoom().then(() => {\n    }).catch((err: any) => {\n      if (err.reason) {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.rtm_login_failed_reason', {reason: err.reason}),\n        })\n      } else {\n        globalStore.showToast({\n          type: 'rtmClient',\n          message: t('toast.rtm_login_failed'),\n        })\n      }\n      console.warn(err)\n    }).finally(() => {\n      globalStore.stopLoading()\n    })\n  }, []);\n\n  const roomType = roomTypes[roomStore.state.course.roomType];\n\n  const location = useLocation();\n\n  const roomState = useRoomState();\n  const me = roomStore.state.me;\n  // const course = roomStore.state.course;\n  const classroom = Boolean(location.pathname.match(/classroom/));\n  // const isBigClass = Boolean(location.pathname.match(/big-class/));\n  const isSmallClass = Boolean(location.pathname.match(/small-class/));\n  \n  useEffect(() => {\n    return () => {\n      globalStore.removeUploadNotice();\n      roomStore.exitAll()\n      .then(() => {\n      })\n      .catch(console.warn)\n      .finally(() => {\n      });\n    }\n  }, [location]);\n\n  const rtc = useRef<boolean>(false);\n  \n  const canPublish = useMemo(() => {\n    return me.coVideo;\n  }, [me.coVideo]);\n\n  useEffect(() => {\n    return () => {\n      rtc.current = true\n    }\n  },[]);\n\n  const publishLock = useRef<boolean>(false);\n\n  const {rtcJoined, uid, role, mediaDevice} = useMemo(() => {\n    return {\n      rtcJoined: roomState.rtc.joined,\n      uid: roomState.me.uid,\n      role: roomState.me.role,\n      mediaDevice: roomState.mediaDevice,\n    }\n  }, [roomState]);\n\n  useEffect(() => {\n    if (!location.pathname.match(/big-class/) || me.role === 1) return\n    // if (course.linkId) return;\n    const rtcClient = roomStore.rtcClient;\n    if (platform === 'web') {\n      const webClient = rtcClient as AgoraWebClient;\n      if (!webClient.published) return;\n      Promise.all([\n        webClient\n        .unpublishLocalStream()\n      ])\n        .then(() => {\n          console.log(\"[agora-web] unpublish local stream\");\n        }).catch(console.warn)\n    }\n\n    if (platform === 'electron') {\n      const nativeClient = rtcClient as AgoraElectronClient;\n      if (!nativeClient.published) return;\n      nativeClient.unpublish();\n    }\n\n  }, [me.role, location.pathname, canPublish]);\n\n  useEffect(() => {\n    if (!rtcJoined || rtc.current) return;\n\n    if (platform === 'web') {\n      const webClient = roomStore.rtcClient as AgoraWebClient;\n      const uid = +roomStore.state.me.uid as number;\n      const streamSpec: AgoraStreamSpec = {\n        streamID: uid,\n        video: true,\n        audio: true,\n        mirror: false,\n        screen: false,\n        microphoneId: mediaDevice.microphoneId,\n        cameraId: mediaDevice.cameraId,\n        audioOutput: {\n          volume: mediaDevice.speakerVolume,\n          deviceId: mediaDevice.speakerId\n        }\n      }\n      console.log(\"canPb>>> \", canPublish, roomStore.state.me.uid);\n      if (canPublish && !publishLock.current) {\n        publishLock.current = true;\n        Promise.all([\n          webClient\n          .publishLocalStream(streamSpec)\n        ])\n        .then((res: any[]) => {\n          console.log(\"[agora-web] any: \", res[0], res[1]);\n          console.log(\"[agora-web] publish local stream\");\n        }).catch(console.warn)\n        .finally(() => {\n          publishLock.current = false;\n        })\n      }\n    }\n\n    if (platform === 'electron' && rtcJoined) {\n      const nativeClient = roomStore.rtcClient as AgoraElectronClient;\n      if (canPublish && !publishLock.current) {\n        publishLock.current = true;\n        console.log(\"board updateLocal\")\n        nativeClient.publish();\n        publishLock.current = false;\n      }\n    }\n  }, [\n    rtcJoined,\n    uid,\n    role,\n    mediaDevice,\n    canPublish,\n  ]);\n\n  useEffect(() => {\n    if (!roomState.me.uid || !roomState.course.rid ||!roomState.appID) return;\n    if (classroom) {\n      if (platform === 'web') {\n        const webClient = roomStore.rtcClient as AgoraWebClient;\n        if (webClient.joined || rtc.current) {\n          return;\n        }\n        console.log(\"[agora-rtc] add event listener\");\n        webClient.rtc.on('onTokenPrivilegeWillExpire', (evt: any) => {\n          // you need obtain the `newToken` token from server side \n          eduApi.refreshToken().then((res: any) => {\n            const newToken = res.rtcToken\n            webClient.rtc.renewToken(newToken);\n            console.log('[agora-web] onTokenPrivilegeWillExpire', evt);\n          })\n        });\n        webClient.rtc.on('onTokenPrivilegeDidExpire', (evt: any) => {\n          // you need obtain the `newToken` token from server side \n          eduApi.refreshToken().then((res: any) => {\n            const newToken = res.rtcToken\n            webClient.rtc.renewToken(newToken);\n            console.log('[agora-web] onTokenPrivilegeDidExpire', evt);\n          })\n        });\n        webClient.rtc.on('error', (evt: any) => {\n          console.log('[agora-web] error evt', evt);\n        });\n        webClient.rtc.on('stream-published', ({ stream }: any) => {\n          const _stream = new AgoraStream(stream, stream.getId(), true);\n          roomStore.addLocalStream(_stream);\n          roomStore.addRTCUser(stream.getId())\n        });\n        webClient.rtc.on('stream-subscribed', ({ stream }: any) => {\n          const streamID = stream.getId();\n          // when streamID is not share_id use switch high or low stream in dual stream mode\n          if (location.pathname.match(/small-class/)) {\n            if (roomStore.state.course.teacherId\n              && roomStore.state.course.teacherId === `${streamID}`) {\n              webClient.setRemoteVideoStreamType(stream, 0);\n              console.log(\"[agora-web] dual stream set high for teacher\");\n            }\n            else {\n              webClient.setRemoteVideoStreamType(stream, 1);\n              console.log(\"[agora-web] dual stream set low for student\");\n            }\n          }\n          const _stream = new AgoraStream(stream, stream.getId(), false);\n          console.log(\"[agora-web] subscribe remote stream, id: \", stream.getId());\n          roomStore.addRemoteStream(_stream);\n        });\n        webClient.rtc.on('stream-added', ({ stream }: any) => {\n          console.log(\"[agora-web] added remote stream, id: \", stream.getId());\n          webClient.subscribe(stream);\n        });\n        webClient.rtc.on('stream-removed', ({ stream }: any) => {\n          console.log(\"[agora-web] removed remote stream, id: \", stream.getId());\n          // const id = stream.getId();\n          roomStore.removeRemoteStream(stream.getId());\n        });\n        webClient.rtc.on('peer-online', ({uid}: any) => {\n          console.log(\"[agora-web] peer-online, id: \", uid);\n          roomStore.addRTCUser(uid);\n        });\n        webClient.rtc.on('peer-leave', ({ uid }: any) => {\n          console.log(\"[agora-web] peer-leave, id: \", uid);\n          roomStore.removePeerUser(uid);\n          roomStore.removeRemoteStream(uid);\n\n          if (roomStore.state.me.role === 1 && roomStore.state.course.roomType === 2) {\n            if (roomStore.state.applyUser.account) {\n              globalStore.showToast({\n                type: 'rtmClient',\n                message: t('toast.student_peer_leave', {reason: roomStore.state.applyUser.account}),\n              })\n            }\n          }\n        });\n        webClient.rtc.on(\"stream-fallback\", ({ uid, attr }: any) => {\n          const msg = attr === 0 ? 'resume to a&v mode' : 'fallback to audio mode';\n          console.info(`[agora-web] stream: ${uid} fallback: ${msg}`);\n        })\n        rtc.current = true;\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        webClient\n          .joinChannel({\n            uid: +roomState.me.uid, \n            channel: roomState.course.rid,\n            token: roomState.me.rtcToken,\n            dual: isSmallClass,\n            appId: roomState.appID,\n          }).then(() => {\n            \n          }).catch(console.warn).finally(() => {\n            rtc.current = false;\n          });\n        return () => {\n          const events = [\n            'onTokenPrivilegeWillExpire',\n            'onTokenPrivilegeDidExpire',\n            'error',\n            'stream-published',\n            'stream-subscribed',\n            'stream-added',\n            'stream-removed',\n            'peer-online',\n            'peer-leave',\n            'stream-fallback'\n          ]\n          for (let eventName of events) {\n            webClient.rtc.off(eventName, () => {});\n          }\n          console.log(\"[agora-web] remove event listener\");\n          !rtc.current && webClient.exit().then(() => {\n            console.log(\"[agora-web] do remove event listener\");\n          }).catch(console.warn)\n            .finally(() => {\n              rtc.current = true;\n              roomStore.removeLocalStream();\n            });\n        }\n      }\n\n      if (platform === 'electron') {\n        const rtcClient = roomStore.rtcClient;\n        const nativeClient = rtcClient as AgoraElectronClient;\n        if (nativeClient.joined) {\n          console.log(\"[agora-electron] electron joined \", nativeClient.joined);\n          return;\n        }\n        nativeClient.on('executefailed', (...args: any[]) => {\n          console.warn(\"[agora-electron] executefailed\", ...args);\n        });\n        nativeClient.on('error', (evt: any) => {\n          console.warn('[agora-electron] error evt', evt);\n        });\n        // when trigger `joinedchannel` it means publish rtc stream success\n        nativeClient.on('joinedchannel', (evt: any) => {\n          console.log(\"[agora-electron stream-published\")\n          const stream = evt.stream;\n          const _stream = new AgoraStream(stream, stream.uid, true);\n          roomStore.addLocalStream(_stream);\n        });\n        // when trigger `userjoined` it means peer user & peer stream is online\n        nativeClient.on('userjoined', (evt: any) => {\n          const stream = evt.stream;\n          const _stream = new AgoraStream(stream, stream.uid, false);\n          if (location.pathname.match(/small-class/) && +stream.uid !== +roomStore.state.course.screenId) {\n            if (roomStore.state.course.teacherId\n              && roomStore.state.course.teacherId === `${stream.uid}`) {\n              const res = nativeClient.rtcEngine.setRemoteVideoStreamType(stream, 0);\n              console.log(\"[agora-electron] dual stream set high for teacher, \", res);\n            }\n            else {\n              const res = nativeClient.rtcEngine.setRemoteVideoStreamType(stream, 1);\n              console.log(\"[agora-electron] dual stream set low for student, \", res);\n            }\n          }\n          if (_stream && _stream.stream && +roomStore.state.course.screenId === +stream.uid) {\n            if (+roomStore.state.course.screenId === +roomStore.state.me.screenId) {\n              _stream.stream.type = StreamType.localVideoSource\n            } else {\n              _stream.stream.type = StreamType.remoteVideoSource\n            }\n          }\n          roomStore.addRTCUser(stream.uid);\n          roomStore.addRemoteStream(_stream);\n        });\n        // when trigger `removestream` it means peer user & peer stream is offline\n        nativeClient.on('removestream', ({ uid }: any) => {\n          roomStore.removePeerUser(uid);\n          roomStore.removeRemoteStream(uid);\n        });\n        // WARN: IF YOU ENABLED APP CERTIFICATE, PLEASE SIGN YOUR TOKEN IN YOUR SERVER SIDE AND OBTAIN IT FROM YOUR OWN TRUSTED SERVER API\n        nativeClient.joinChannel({\n          uid: +roomState.me.uid, \n          channel: roomState.course.rid,\n          token: roomState.me.rtcToken,\n          dual: isSmallClass\n        });\n        roomStore.setRTCJoined(true);\n        return () => {\n          const events = [\n            'executefailed',\n            'error',\n            'joinedchannel',\n            'userjoined',\n            'removestream',\n          ]\n          for (let eventName of events) {\n            nativeClient.off(eventName, () => {})\n          }\n          !rtc.current && nativeClient.exit();\n          !rtc.current && roomStore.setRTCJoined(false);\n          !rtc.current && roomStore.removeLocalStream();\n        }\n      }\n    }\n  }, [JSON.stringify([roomState.me.uid, roomState.course.rid, roomState.appID])]);\n\n  return (\n    <div className={`classroom ${roomType.path}`}>\n      <NativeSharedWindow />\n      <Nav />\n      {children}\n      <RoomDialog />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useGlobalState } from '../containers/root-container';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    margin: theme.spacing(2),\n    color: '#44A2FC'\n  },\n  container: {\n    position: 'absolute',\n    top: '0px',\n    left: '0px',\n    height: '100%',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: '#ffffff',\n    opacity: 0.8,\n    zIndex: 99999\n  }\n}));\n\nexport const Loading: React.FC<{}> = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <CircularProgress className={classes.progress} />\n    </div>\n  );\n}\n\nexport default function LoadContainer () {\n\n  const state = useGlobalState();\n\n  const loading = state.loading;\n\n  return (\n    loading ? <Loading /> : null\n  )\n}","import React, { useEffect, useRef, useState } from 'react';\nimport './toast.scss';\nimport {useGlobalState} from '../containers/root-container';\nimport { isEmpty } from 'lodash';\n\nexport interface SnackbarMessage {\n  message: string;\n  key: number;\n}\n\ninterface SnackbarsProps {\n  duration?: number\n}\n\nexport default function ConsecutiveSnackbars({\n  duration = 2500\n}: SnackbarsProps) {\n\n  const globalState = useGlobalState();\n\n  const queueRef = React.useRef<SnackbarMessage[]>([]);\n  const [messages, setMessages] = useState<SnackbarMessage[]>([]);\n  const timerRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (messages.length > 0 && timerRef.current === null) {\n      timerRef.current = setTimeout(() => {\n        queueRef.current.shift()\n        setMessages([...queueRef.current]);\n        timerRef.current = null;\n      }, duration);\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (queueRef.current && globalState.toast.message) {\n      queueRef.current.push({\n        message: globalState.toast.message,\n        key: +Date.now()\n      })\n      setMessages([...queueRef.current]);\n    }\n  }, [globalState.toast]);\n\n  return (\n    <div className=\"notice-message-container\">\n      {messages.map((message: any, idx: number) => \n        <div key={`${idx}${message.key}`} className={\"custom-toast\"}>\n          <div className=\"toast-container\">\n            <span className=\"text\">{message.message}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React from 'react';\nimport './progress.scss';\nimport { CircularProgress } from '@material-ui/core';\n\ntype ProgressProps = {\n  title: string\n}\n\nexport const Progress: React.FC<ProgressProps> = ({\n  title,\n}) => {\n  return (\n    <div className=\"progress-cover\">\n      <div className=\"progress\">\n        <div className=\"content\">\n          <CircularProgress className=\"circular\"/>\n          <span className=\"title\">{title}...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default React.memo(Progress);","import React from 'react';\nimport { Subject } from 'rxjs';\nimport { Player, PlayerPhase } from 'white-web-sdk';\nimport { useParams, useLocation, Redirect } from 'react-router';\nimport moment from 'moment';\nimport { Progress } from '@/components/progress/progress';\nimport { globalStore } from '@/stores/global';\nimport { WhiteboardAPI, RTMRestful } from '@/utils/api';\nimport { whiteboard } from '@/stores/whiteboard';\nimport { RtmPlayerState } from '@/components/whiteboard/agora/rtm-player';\nimport { eduApi } from '@/services/edu-api';\n\ninterface IObserver<T> {\n  subscribe: (setState: (state: T) => void) => void\n  unsubscribe: () => void\n  defaultState: T\n}\n\nexport function useObserver<T>(store: IObserver<T>) {\n  const [state, setState] = React.useState<T>(store.defaultState);\n  React.useEffect(() => {\n    store.subscribe((state: any) => {\n      setState(state);\n    });\n    return () => {\n      store.unsubscribe();\n    }\n  }, []);\n\n  return state;\n}\n\n\nexport interface IPlayerState {\n  beginTimestamp: number\n  duration: number\n  roomToken: string\n  mediaURL: string\n  isPlaying: boolean\n  progress: number\n\n  currentTime: number\n  phase: string\n  boardPlayPhase: PlayerPhase\n  isFirstScreenReady: boolean\n  isPlayerSeeking: boolean\n  isChatOpen: boolean\n  isVisible: boolean\n  replayFail: boolean\n  courseRecordData: {\n    startTime: number\n    endTime: number\n    url: string\n    boardId: string\n    status: number\n    statusText: string\n  }\n  player: any\n  timelineScheduler: any\n  videoPlayer: any\n}\n\nexport const defaultState: IPlayerState = {\n  beginTimestamp: 0,\n  duration: 0,\n  roomToken: '',\n  mediaURL: '',\n  isPlaying: false,\n  progress: 0,\n\n  currentTime: 0,\n  phase: 'waiting',\n  boardPlayPhase: PlayerPhase.Pause,\n  isFirstScreenReady: false,\n  isPlayerSeeking: false,\n  isChatOpen: false,\n  isVisible: false,\n  replayFail: false,\n\n  courseRecordData: {\n    startTime: -1,\n    endTime: -1,\n    url: '',\n    boardId: '',\n    status: 0,\n    statusText: '',\n  },\n  player: null,\n  videoPlayer: null,\n  timelineScheduler: null\n}\n\nclass ReplayStore {\n  public subject: Subject<IPlayerState> | null;\n  public state: IPlayerState | null;\n  public defaultState: IPlayerState = defaultState\n\n  constructor() {\n    this.subject = null;\n    this.state = null;\n  }\n\n  initialize() {\n    this.subject = new Subject<IPlayerState>();\n    this.state = defaultState;\n    this.subject.next(this.state);\n  }\n\n  subscribe(setState: any) {\n    this.initialize();\n    this.subject && this.subject.subscribe(setState);\n  }\n\n  unsubscribe() {\n    this.subject && this.subject.unsubscribe();\n    this.state = null;\n    this.subject = null;\n  }\n\n  commit(state: IPlayerState) {\n    this.subject && this.subject.next(state);\n  }\n\n  setPlayer(player: Player) {\n    if (!this.state) return;\n    this.state = {\n      ...this.state,\n      player\n    }\n    this.commit(this.state);\n  }\n\n  setCurrentTime(scheduleTime: number) {\n    if (!this.state) return;\n    this.state = {\n      ...this.state,\n      currentTime: scheduleTime\n    }\n    this.commit(this.state);\n  }\n\n  async getCourseRecordBy(recordId: string, roomId: string, userToken: string) {\n    if (!this.state) return;\n    if (this.state.courseRecordData.status === 2 && this.state.courseRecordData.url) return;\n    const {boardId, startTime, endTime, url, status, statusText} = await eduApi.getCourseRecordBy(recordId as string, roomId as string, userToken)\n    this.state = {\n      ...this.state,\n      courseRecordData: {\n        startTime,\n        endTime,\n        url,\n        boardId,\n        status,\n        statusText\n      }\n    }\n    this.commit(this.state)\n  }\n\n  updatePlayerStatus(isPlaying: boolean) {\n    if (!this.state) return;\n\n    this.state = {\n      ...this.state,\n      isPlaying,\n    }\n    if (!this.state.isPlaying && this.state.player) {\n      this.state.player.seekToScheduleTime(0);\n    }\n    this.commit(this.state);\n  }\n\n  updateProgress(progress: number) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      progress\n    }\n    this.commit(this.state);\n  }\n\n  setReplayFail(val: boolean) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      replayFail: val\n    }\n    this.commit(this.state);\n  }\n\n  updateWhiteboardPhase(boardPlayPhase: PlayerPhase) {\n    if (!this.state) return\n    let isPlaying = this.state.isPlaying;\n\n    if (boardPlayPhase === PlayerPhase.Playing) {\n      isPlaying = true;\n    }\n\n    if (boardPlayPhase === PlayerPhase.Ended || boardPlayPhase === PlayerPhase.Pause) {\n      isPlaying = false;\n    }\n\n    this.state = {\n      ...this.state,\n      boardPlayPhase,\n      isPlaying,\n    }\n    \n    this.commit(this.state);\n  }\n\n  // updatePhase(phase: PlayerPhase) {\n  //   if (!this.state) return\n  //   let isPlaying = this.state.isPlaying;\n\n  //   if (phase === PlayerPhase.Playing) {\n  //     isPlaying = true;\n  //   }\n\n  //   if (phase === PlayerPhase.Ended || phase === PlayerPhase.Pause) {\n  //     isPlaying = false;\n  //   }\n\n  //   this.state = {\n  //     ...this.state,\n  //     phase,\n  //     isPlaying,\n  //   }\n    \n  //   this.commit(this.state);\n  // }\n\n  updatePlayState(phase: any) {\n    if (!this.state) return\n\n    this.state = {\n      ...this.state,\n      phase,\n    }\n    \n    this.commit(this.state);\n  }\n\n  loadFirstFrame() {\n    console.log(\"invoke loadFirstFrame\")\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      isFirstScreenReady: true,\n    }\n    if (this.state.player) {\n      this.state.player.seekToScheduleTime(0)\n    }\n    console.log(\"invoke loadFirstFrame success\", this.state.isFirstScreenReady)\n    this.commit(this.state);\n  }\n\n  addWhiteboardPlayer(player: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      player: player\n    }\n    this.commit(this.state)\n  }\n\n  addVideoPlayer(player: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      videoPlayer: player\n    }\n    this.commit(this.state)\n  }\n\n  addTimeline(scheduler: any) {\n    if (!this.state) return\n    this.state = {\n      ...this.state,\n      timelineScheduler: scheduler\n    }\n    this.commit(this.state)\n  }\n\n  async joinRoom(roomId: string) {\n    const res = await eduApi.getWhiteboardBy(roomId);\n    return {\n      roomToken: res.boardToken,\n      uuid: res.boardId,\n    }\n  }\n}\n\nexport const replayStore = new ReplayStore();","import {useEffect, useState, useRef, useCallback, Fragment, useMemo} from 'react';\nimport {useAsync} from 'react-use';\nimport { RTMRestful, AgoraChannelMessage } from '@/utils/api/rtm-restful';\nimport moment from 'moment';\nimport React from 'react';\nimport { Message } from '@/components/chat/message';\n\nexport interface RtmReplayResult {\n  loading: boolean\n  list?: RtmReplayList \n}\n\nexport type RtmReplayList = AgoraChannelMessage[] | undefined;\n\nexport enum RtmPlayerState {\n  pending = 'pending',\n  loading = 'loading',\n  load = 'load',\n};\n\nexport type RtmReplayProps = {\n  channelName: string,\n  startTime: number,\n  endTime: number,\n  currentSeekTime: number,\n  senderId?: string,\n  onPhaseChanged?: (e: RtmPlayerState) => void,\n};\n\nconst RtmPlayer = ({currentSeekTime, senderId, ...props}: RtmReplayProps) => {\n\n  const ref = useRef<any>(null);\n\n  const [state, setState] = useState<RtmPlayerState>(RtmPlayerState.pending);\n\n  useEffect(() => {\n    props.onPhaseChanged && props.onPhaseChanged(state);\n  }, [state]);\n\n  const {value, loading} = useAsync<AgoraChannelMessage[] | undefined>(async (): Promise<AgoraChannelMessage[] | undefined> => {\n    if (!props.channelName || !props.startTime || !props.endTime) {\n      throw new Error(`startTime & endTime & channelName shouldn't be empty`);\n    }\n\n    if (props.startTime > props.endTime) {\n      throw new Error(`startTime > endTime, please check your startTime and endTime`);\n    }\n\n    const rtmRecord = new RTMRestful(process.env.REACT_APP_AGORA_CUSTOMER_ID as string, process.env.REACT_APP_AGORA_CUSTOMER_CERTIFICATE as string);\n    const params = {\n      channelName: props.channelName,\n      startTime: moment(+props.startTime).utc().format('YYYY-MM-DDTHH:mm:ss'),\n      endTime: moment(+props.endTime).utc().format('YYYY-MM-DDTHH:mm:ss'),\n    }\n    return await rtmRecord.getAllChannelMessages(params)\n  }, [JSON.stringify(props)]);\n\n  useEffect(() => {\n    if (!loading) {\n      setState(RtmPlayerState.load);\n    }\n  }, [loading]);\n\n  const serializeMessage = (item: any) => {\n    const {account, content, link} = JSON.parse(item.payload);\n    return {\n      account,\n      content,\n      link,\n      ms: item.ms,\n      uid: item.src\n    }\n  }\n\n  const rtmMessages = useMemo(() => {\n    if (!value) return [];\n    return value\n    .filter((it: any) => it.payload)\n    .map(serializeMessage);\n  }, [value]);\n\n  const replayMessages = useMemo(() => {\n    if (props.startTime && state === RtmPlayerState.load && rtmMessages && rtmMessages.length) {\n      const time = +props.startTime + currentSeekTime;\n      return rtmMessages.filter((it: any) => (time >= it.ms));\n    }\n    return [];\n  }, [JSON.stringify([rtmMessages.length, currentSeekTime, state, props.startTime])]);\n\n  const scrollDown = (current: any) => {\n    current.scrollTop = current.scrollHeight;\n  }\n\n  useEffect(() => {\n    scrollDown(ref.current);\n  }, [replayMessages.length]);\n\n  const MessageList = useCallback(() => {\n    if (replayMessages) {\n      return (\n        <Fragment>\n          {\n          replayMessages\n          .map((item: any, key: number) => \n          (<Message\n              key={key}\n              nickname={item.account}\n              content={item.content}\n              link={item.link}\n              sender={item.uid === senderId}\n            >\n          </Message>)\n          )}\n        </Fragment>\n      )\n    }\n    return null;\n  }, [replayMessages.length, senderId]);\n\n  return (\n    <div className=\"chat-messages\" ref={ref}>\n      {state !== RtmPlayerState.load ? null : \n        <MessageList></MessageList>\n      }\n    </div>\n  )\n}\n\n// Feat: RTM replay \n// 功能: RTM 回放web集成\nexport const RTMReplayer = React.memo(RtmPlayer);","import React from 'react';\nimport './index.scss';\nimport { Link } from 'react-router-dom';\nimport { useRoomState } from '@/containers/root-container';\nimport { t } from '@/i18n';\nimport { eduApi } from '@/services/edu-api';\nimport { roomStore } from '@/stores/room';\ninterface MessageProps {\n  nickname: string\n  content: string\n  link?: string\n  sender?: boolean\n  children?: any\n  ref?: any\n  className?: string\n}\n\nexport const Message: React.FC<MessageProps> = ({\n  nickname,\n  content,\n  link,\n  sender,\n  children,\n  ref,\n  className\n}) => {\n\n  const roomState = useRoomState();\n\n  const text = React.useMemo(() => {\n    if (link && roomState.course.rid) {\n      return (\n        <Link to={`/replay/record/${link}?roomId=${roomState.course.roomId}&token=${eduApi.userToken}&senderId=${roomStore.state.me.uid}&channelName=${roomStore.state.course.rid}`} target=\"_blank\">{t('course_recording')}</Link>\n      )\n    }\n    return link ? link : content;\n  }, [content, link, roomState.course.roomId])\n\n  return (\n  <div ref={ref} className={`message ${sender ? 'sent': 'receive'} ${className ? className : ''}`}>\n    <div className=\"nickname\">\n      {nickname}\n    </div>\n    <div className=\"content\">\n      {text}\n    </div>\n    {children ? children : null}\n  </div>\n  )\n}","export enum LogLevel {\n  DEBUG = 'debug',\n  NONE = 'none'\n}\n\nconst rawLog = console\n\nexport class PlayerLogger {\n  constructor (public readonly level: LogLevel = LogLevel.DEBUG) {\n  }\n\n  prefix(text: string) {\n    return `[${this.level}] ${text}`\n  }\n\n  info (text: string, ...args: any[]) {\n    rawLog.info(this.prefix(text), ...args)\n  }\n\n  warn (text: string, ...args: any[]) {\n    rawLog.info(this.prefix(text), ...args)\n  }\n\n  error (text: string, ...args: any[]) {\n    rawLog.error(this.prefix(text), ...args)\n  }\n}","import React, { useEffect, useMemo, useRef, useCallback, useState } from 'react';\nimport '../replay.scss';\nimport Slider from '@material-ui/core/Slider';\nimport { Player, PlayerPhase } from 'white-web-sdk';\nimport { useParams, useLocation } from 'react-router';\nimport moment from 'moment';\nimport { Progress } from '@/components/progress/progress';\nimport { globalStore } from '@/stores/global';\nimport { replayStore, useObserver, IPlayerState } from './model';\nimport { WhiteboardAPI } from '@/utils/api';\nimport { whiteboard } from '@/stores/whiteboard';\nimport \"video.js/dist/video-js.css\";\nimport { RTMReplayer, RtmPlayerState } from '@/components/whiteboard/agora/rtm-player';\nimport { useInterval } from 'react-use';\nimport { isElectron } from '@/utils/platform';\nimport { t } from '@/i18n';\n\nconst delay = 5000\n\n\nconst ReplayContext = React.createContext({} as IPlayerState);\n\nconst useReplayContext = () => React.useContext(ReplayContext);\n\nconst ReplayContainer: React.FC<{}> = () => {\n  const replayState = useObserver<IPlayerState>(replayStore)\n\n  const {recordId} = useParams();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const roomId: string = searchParams.get('roomId') as string;\n  const userToken: string = searchParams.get('token') as string;\n  const senderId: string = searchParams.get('senderId') as string;\n  const channelName: string = searchParams.get('channelName') as string;\n\n  useInterval(() => {\n    replayStore.getCourseRecordBy(recordId as string, roomId as string, userToken)\n  }, delay)\n\n  const value = replayState;\n\n  const result = value.courseRecordData;\n\n  return (\n    <ReplayContext.Provider value={value}>\n      {result?.status !== 2 ?\n        <Progress title={t(`replay.${result?.statusText ? result?.statusText : 'loading'}`)} /> : \n        <NetlessAgoraReplay\n          roomId={roomId}\n          senderId={senderId}\n          channelName={channelName}\n          whiteboardUUID={result?.boardId as string}\n          startTime={result?.startTime as number}\n          endTime={result?.endTime as number}\n          mediaUrl={result?.url as string} />\n      }\n    </ReplayContext.Provider>\n  )\n}\n\nexport default ReplayContainer;\n\nexport type NetlessAgoraReplayProps = {\n  whiteboardUUID: string\n  startTime: number\n  endTime: number\n  mediaUrl: string\n  senderId: string\n  channelName: string\n  roomId: string\n}\n\nexport const NetlessAgoraReplay: React.FC<NetlessAgoraReplayProps> = ({\n  whiteboardUUID: uuid,\n  startTime,\n  endTime,\n  mediaUrl,\n  senderId,\n  channelName,\n  roomId\n}) => {\n  const state = useReplayContext();\n\n  const player = useMemo(() => {\n    if (!replayStore.state || !replayStore.state.player) return null;\n    return replayStore.state.player as Player;\n  }, [replayStore.state]);\n\n  const handlePlayerClick = () => {\n    if (!replayStore.state || !player) return;\n\n    if (player.phase === PlayerPhase.Playing) {\n      player.pause();\n      return;\n    }\n    if (player.phase === PlayerPhase.WaitingFirstFrame || player.phase === PlayerPhase.Pause) {\n      player.play();\n      return;\n    }\n\n    if (player.phase === PlayerPhase.Ended) {\n      player.seekToScheduleTime(0);\n      player.play();\n      return;\n    }\n  }\n\n  const handleChange = (event: any, newValue: any) => {\n    replayStore.setCurrentTime(newValue);\n    replayStore.updateProgress(newValue);\n  }\n\n  const onWindowResize = () => {\n    if (state.player) {\n      state.player.refreshViewSize();\n    }\n  }\n\n  const handleSpaceKey = (evt: any) => {\n    if (evt.code === 'Space') {\n      if (state.player) {\n        handleOperationClick(state.player);\n      }\n    }\n  }\n\n  const handleOperationClick = (player: Player) => {\n    switch (player.phase) {\n      case PlayerPhase.WaitingFirstFrame:\n      case PlayerPhase.Pause: {\n        player.play();\n        break;\n      }\n      case PlayerPhase.Playing: {\n        player.pause();\n        break;\n      }\n      case PlayerPhase.Ended: {\n        player.seekToScheduleTime(0);\n        break;\n      }\n    }\n  }\n\n  const duration = useMemo(() => {\n    if (!startTime || !endTime) return 0;\n    const _duration = Math.abs(+startTime - +endTime);\n    return _duration;\n  }, [startTime, endTime]);\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', onWindowResize);\n    window.addEventListener('keydown', handleSpaceKey);\n    if (roomId && startTime && endTime) {\n        replayStore.joinRoom(roomId).then(({roomToken, uuid}) => {\n          WhiteboardAPI.replayRoom(whiteboard.client,\n          {\n            beginTimestamp: +startTime,\n            duration: duration,\n            room: uuid,\n            mediaURL: mediaUrl,\n            roomToken: roomToken,\n          }, {\n            onCatchErrorWhenRender: error => {\n              error && console.warn(error);\n              globalStore.showToast({\n                message: t('toast.replay_failed'),\n                type: 'notice'\n              });\n            },\n            onCatchErrorWhenAppendFrame: error => {\n              error && console.warn(error);\n              globalStore.showToast({\n                message: t('toast.replay_failed'),\n                type: 'notice'\n              });\n            },\n            onPhaseChanged: phase => {\n              replayStore.updateWhiteboardPhase(phase);\n            },\n            onLoadFirstFrame: () => {\n              replayStore.loadFirstFrame();\n            },\n            onSliceChanged: () => {\n            },\n            onPlayerStateChanged: (error) => {\n            },\n            onStoppedWithError: (error) => {\n              error && console.warn(error);\n              globalStore.showToast({\n                message: t('toast.replay_failed'),\n                type: 'notice'\n              });\n              replayStore.setReplayFail(true);\n            },\n            onScheduleTimeChanged: (scheduleTime) => {\n              if (lock.current) return;\n              replayStore.setCurrentTime(scheduleTime);\n            }\n          }).then((player: Player | undefined) => {\n            if (player) {\n              replayStore.setPlayer(player);\n              player.seekToScheduleTime(0);\n              player.bindHtmlElement(document.getElementById(\"whiteboard\") as HTMLDivElement);\n            }\n          })\n        });\n    }\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      window.removeEventListener('keydown', onWindowResize);\n    }\n  }, []);\n\n  const totalTime = useMemo(() => {\n    return moment(duration).format(\"mm:ss\");\n  }, [duration]);\n\n  const time = useMemo(() => {\n    return moment(state.currentTime).format(\"mm:ss\");\n  }, [state.currentTime]);\n\n  const PlayerCover = useCallback(() => {\n    if (!player) {\n      return (<Progress title={t(\"replay.loading\")} />)\n    }\n\n    if (!state.isFirstScreenReady) return null\n\n    if (player.phase === PlayerPhase.Playing) return null;\n\n    return (\n      <div className=\"player-cover\">\n        {player.phase === PlayerPhase.Buffering ? <Progress title={t(\"replay.loading\")} />: null}\n        {player.phase === PlayerPhase.Pause || player.phase === PlayerPhase.Ended || player.phase === PlayerPhase.WaitingFirstFrame ? \n          <div className=\"play-btn\" onClick={handlePlayerClick}></div> : null}\n      </div>\n    )\n  }, [player, state]);\n\n  return (\n    <div className={`replay`}>\n      <div className={`player-container`} >\n        <PlayerCover />\n        <div className=\"player\">\n          <div className=\"agora-logo\"></div>\n          <div id=\"whiteboard\" className=\"whiteboard\"></div>\n          <div className=\"video-menu\">\n            <div className=\"control-btn\">\n              <div className={`btn ${player && player.phase === PlayerPhase.Playing ? 'paused' : 'play'}`} onClick={handlePlayerClick}></div>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                className='custom-video-progress'\n                value={state.currentTime}\n                onMouseDown={() => {\n                  if (replayStore.state && replayStore.state.player) {\n                    const player = replayStore.state.player as Player;\n                    player.pause();\n                    lock.current = true;\n                  }\n                }}\n                onMouseUp={() => {\n                  if (replayStore.state && replayStore.state.player) {\n                    const player = replayStore.state.player as Player;\n                    player.seekToScheduleTime(state.currentTime);\n                    player.play();\n                    lock.current = false;\n                  }\n                }}\n                onTouchStart={() => {\n                  console.log('onTouchEnd')\n                  if (replayStore.state && replayStore.state.player) {\n                    const player = replayStore.state.player as Player;\n                    player.pause();\n                    lock.current = true;\n                  }\n                }}\n                onTouchEnd={() => {\n                  console.log('onTouchStart')\n                  if (replayStore.state && replayStore.state.player) {\n                    const player = replayStore.state.player as Player;\n                    player.seekToScheduleTime(state.currentTime);\n                    player.play();\n                    lock.current = false;\n                  }\n                }}\n                onChange={handleChange}\n                min={0}\n                max={duration}\n                aria-labelledby=\"continuous-slider\"\n              />\n              <div className=\"time\">\n                <div className=\"current_duration\">{time}</div>\n                  /\n                <div className=\"video_duration\">{totalTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"video-container\">\n        <div className=\"video-player\">\n          <video playsInline={true} id=\"white-sdk-video-js\" className=\"video-js video-layout\" style={{width: \"100%\", height: \"100%\", objectFit: \"cover\"}}></video>\n        </div>\n        <div className=\"chat-holder chat-board chat-messages-container\">\n          <RTMReplayer\n            senderId={senderId}\n            channelName={channelName}\n            startTime={startTime}\n            endTime={endTime}\n            currentSeekTime={state.currentTime}\n            onPhaseChanged={(e: RtmPlayerState) => {\n              if (e !== RtmPlayerState.load) {\n                player?.stop();\n              }\n            }}\n          ></RTMReplayer>\n        </div>\n      </div>\n    </div>\n  )\n}","import { PlayerLogger } from './logger';\n\nimport { EventEmitter } from 'events'\nimport Videojs, {VideoJsPlayer} from 'video.js'\nimport './index.css';\n\nimport '@videojs/http-streaming'\n\nexport { TimelineScheduler } from './timeline-scheduler';\n\nexport interface AgoraPlayerCallback {\n  onPhaseChanged: (evt: any) => void\n}\n\ntype Player = VideoJsPlayer\n\nexport enum PhaseState {\n  init = 'init',\n  buffering = 'buffering',\n  waiting = 'waiting',\n  playing = 'playing',\n  paused = 'paused',\n  ended = 'ended',\n  loading = 'loading'\n}\n\nexport type PhaseStateType = \n  'init' |\n  'buffering' |\n  'playing' | \n  'paused' | \n  'ended' | \n  'waiting' |\n  'ready' |\n  'loading'\n\nexport class AgoraPlayer extends EventEmitter {\n\n  public player: Player\n\n  type: string\n\n  public cover: string = ''\n\n  private log: PlayerLogger\n\n  public phaseState: PhaseStateType\n\n  private $el: HTMLElement\n  mediaType: string\n\n  constructor(\n    public readonly url: string,\n    public readonly callback: AgoraPlayerCallback,\n  ) {\n    super()\n    this.log = new PlayerLogger()\n\n    this.$el = document.createElement('video')\n    this.$el.id = 'video-player'\n    this.$el.className = \"video-js video-layout\"\n    this.player = Videojs(this.$el, {\n      preload: 'auto',\n      controls: false,\n      autoplay: false,\n      loop: false,\n      html5: {\n        hls: {\n          overrideNative: true\n        }\n      }\n    })\n\n    this.type = this.url.split('.').pop() || 'mp4'\n\n    const mediaTypes: any = {\n      'm3u8': 'application/x-mpegURL',\n      'mp4': 'video/mp4',\n    }\n\n    this.mediaType = mediaTypes[this.type] || 'video/mp4'\n    if (!this.url) {\n      console.error(`URL: invalid ${this.url}`)\n    }\n    this.phaseState = 'init'\n    this.on('phaseChanged', (phaseState: any) => {\n      callback.onPhaseChanged(phaseState)\n      // this.log.info('phaseChanged', phaseState)\n    })\n  }\n\n  initVideo (domId: string) {\n    if (!domId) {\n      throw `DOMException: domId shouldn't empty`\n    }\n\n    const $dom = document.getElementById(domId)\n    if (!$dom) {\n      throw `DOMException: couldn't find ${domId} element`\n    }\n\n    $dom.appendChild(this.$el)\n\n    this.player.src({\n      src: this.url,\n      type: this.mediaType\n    })\n\n    this.player.on('loadeddata', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'ready')\n    })\n\n    this.player.on('loadstart', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'loading')\n    })\n\n    this.player.on('waiting', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'waiting')\n    })\n\n    this.player.on('ended', (evt: any) => {\n      this.emit('phaseChanged', this.phaseState = 'ended')\n    })\n\n    this.player.on('error', (evt: any) => {\n      console.error('error', this.phaseState)\n    })\n\n    this.player.load();\n  }\n\n  get isPlaying () {\n    return this.player.duration() > 0 \n      && !this.player.paused() \n      && !this.player.ended()\n      && this.player.readyState() > 2\n  }\n\n  play () {\n    if (!this.isPlaying && this.player.paused()) {\n      this.player.play()\n    }\n  }\n\n  pause () {\n    if (this.isPlaying && !this.player.paused()) {\n      this.player.pause()\n    }\n  }\n\n  seekTo(seconds: number) {\n    const duration = this.player.duration()\n    if (this.player.ended() && seconds !== 0) return\n    this.player.currentTime(Math.min(seconds, duration))\n  }\n\n  destroy () {\n    this.player.dispose()\n  }\n}\n","import { PlayerLogger } from './logger';\nimport { EventEmitter } from 'events';\nimport raf from 'raf'\n\nconst customClearTimeout = (id: any) => {\n  clearInterval(id)\n}\n\nexport class TimelineScheduler extends EventEmitter {\n\n  _state: string = 'paused'\n  delay: number\n  duration: number\n\n  public rafId: number\n  log: PlayerLogger\n\n  _lastTimeoutId: any\n  _stopTimer: boolean\n  _visibilityHandler: (evt?: any) => void | any\n\n  public currentTime: number\n  public currentDuration: number\n\n  constructor (\n    public readonly fps: number = 15,\n    public readonly callback: (args?: any) => void,\n    public readonly startTime: number,\n    public readonly endTime: number\n  ) {\n    super()\n    this.log = new PlayerLogger()\n    if (this.endTime <= this.startTime) throw `endTime must greater than startTime`\n    this.delay = 1000 / this.fps\n    this.rafId = -1\n    this.duration = this.endTime - this.startTime\n    this.currentTime = this.startTime\n    this.currentDuration = 0\n    this._visibilityHandler = () => {}\n\n    this._lastTimeoutId = -1\n    this._stopTimer = true\n  }\n\n  public start () {\n    this._visibilityHandler = (evt: any) => {\n      if(document.hidden) {\n        this.log.warn('passive paused by browser', Date.now())\n        this.stop();\n      } else {\n        this.log.warn('switch setTimeout back to raf', Date.now())\n      }\n    }\n\n    document.addEventListener('visibilitychange', this._visibilityHandler, false);\n    this.state = 'started'\n    let _time = -1\n    let frame = -1\n    const durationBase = this.currentDuration\n    const nextTick = (timestamp: number, v?: boolean): void => {\n      if (this.state === 'ended' || this.currentTime >= this.endTime) {\n        this.stop()\n        return\n      }\n      if (_time === -1) {\n        _time = timestamp\n      }\n\n      const elapsedTime = Math.ceil(timestamp - _time)\n      const currentDuration = durationBase + elapsedTime\n\n      const progress: number = Math.min(Math.ceil((currentDuration / this.duration) * 100) / 100, 1)\n      const duration = Math.min(currentDuration, this.duration)\n      const time = Math.min(this.startTime + duration, this.endTime)\n      this.currentDuration = duration\n      let currentFrame = Math.floor(elapsedTime / this.delay)\n      if (currentFrame > frame) {\n        const params = {\n          progress,\n          duration,\n          time,\n          startTime: this.startTime,\n          endTime: this.endTime,\n          isTimer: v === true\n        }\n        this.callback(params)\n        this.currentTime = time\n        frame = currentFrame\n      }\n      if (this.state === 'started') {\n        this.rafId = raf(nextTick)\n      }\n    }\n    this.rafId = raf(nextTick)\n  }\n\n  public stop () {\n    this.state = 'paused'\n\n    raf.cancel(this.rafId)\n    customClearTimeout(this._lastTimeoutId)\n    this._stopTimer = true\n    document.removeEventListener('visibilitychange', () => {}, false);\n    this.log.info('this.rafId canceled', this.rafId)\n\n    if (this.currentTime === this.endTime) {\n      this.state = 'ended'\n    }\n  }\n\n  public seekTo (time: number) {\n    if (typeof time !== 'number') {\n      return this.log.warn('time should pass number')\n    }\n\n    this.currentDuration = time\n\n    if (this.state === 'ended') {\n      this.currentTime = this.startTime\n    }\n\n    this.emit('seek-changed', this.currentDuration)\n  }\n\n  public set state (newState: any) {\n    this._state = newState\n    this.emit(\"state-changed\", this._state)\n  }\n\n  public get state () {\n    return this._state\n  }\n\n}","import React, {useEffect, useMemo, useCallback, useRef} from 'react';\nimport {replayStore, useObserver, IPlayerState} from './model';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useInterval } from 'react-use';\nimport { Progress } from '@/components/progress/progress';\nimport Slider from '@material-ui/core/Slider';\nimport { WhiteboardAPI } from '@/utils/api';\nimport { whiteboard } from '@/stores/whiteboard';\nimport { RTMReplayer, RtmPlayerState } from '@/components/whiteboard/agora/rtm-player';\nimport moment from 'moment';\nimport {AgoraPlayer, TimelineScheduler} from '@/utils/agora-web-player/agora-player';\nimport { t } from '@/i18n';\nimport { globalStore } from '@/stores/global';\nimport { PlayerPhase } from 'white-web-sdk';\n// import {isElectron} from '@/utils/platform';\n\nconst ReplayContext = React.createContext({} as IPlayerState);\n\n//@ts-ignore\nwindow.replayStore = replayStore\n\nconst delay = 5000\n\nconst useReplayContext = () => React.useContext(ReplayContext);\n\nconst ReplayContainer: React.FC<{}> = () => {\n  const replayState = useObserver<IPlayerState>(replayStore);\n\n  const location = useLocation()\n  const {recordId} = useParams()\n  const searchParams = new URLSearchParams(location.search);\n  const roomId: string = searchParams.get('roomId') as string;\n  const userToken: string = searchParams.get('token') as string;\n\n  const value = replayState;\n\n  const result = value.courseRecordData;\n\n  useInterval(() => {\n    replayStore.getCourseRecordBy(recordId as string, roomId as string, userToken)\n  }, delay)\n\n  return (\n    <ReplayContext.Provider value={value}>\n      {result?.status !== 2 ?\n        <Progress title={t(`replay.${result?.statusText ? result?.statusText : 'loading'}`)} /> : \n      <TimelineReplay\n        whiteboardUUID={result?.boardId as string}\n        startTime={result?.startTime as number}\n        endTime={result?.endTime as number}\n        mediaUrl={result?.url as string}\n      />}\n    </ReplayContext.Provider>\n  )\n}\n\nexport default ReplayContainer;\n\nexport const TimelineReplay: React.FC<any> = ({\n  startTime,\n  endTime,\n  mediaUrl,\n  channelName,\n  senderId,\n  whiteboardUUID\n}) => {\n  const state = useReplayContext()\n\n  useEffect(() => {\n    const startTimestamp: number = +(startTime as string)\n    const endTimestamp: number = +(endTime as string)\n    const duration = Math.abs(endTimestamp - startTimestamp)\n\n    const initPlayer = async () => {\n      const videoPlayer = new AgoraPlayer(mediaUrl, {\n        onPhaseChanged: state => {\n          console.log(\"[agore-replay phase] video phase \", state)\n          if (state === 'ready') {\n            replayStore.updatePlayState('ready')\n          }\n\n          if (state !== 'playing') {\n            // replayStore.state?.timelineScheduler.stop();\n            console.log(\"[agore-replay phase] timeline stop in video phase \")\n          }\n        }\n      })\n  \n      //@ts-ignore\n      window.videoPlayer = videoPlayer\n      replayStore.addVideoPlayer(videoPlayer)\n  \n      const timeline = new TimelineScheduler(30, (args: any) => {\n        if (replayStore.state && replayStore.state.phase && replayStore.state.phase === 'playing') {\n          replayStore.setCurrentTime(args.duration)\n          replayStore.updateProgress(args.progress)\n        }\n      }, startTimestamp, endTimestamp)\n  \n      timeline.on('seek-changed', (duration: number) => {\n        if (replayStore.state && replayStore.state.videoPlayer && replayStore.state.player) {\n          if (duration / 1000 < replayStore.state.videoPlayer.player.duration()) {\n            replayStore.state.videoPlayer.seekTo(duration / 1000)\n            replayStore.state.player.seekToScheduleTime(duration)\n          }\n        }\n      })\n  \n      timeline.on(\"state-changed\", async (state: any) => {\n        console.log(\"state-changed\", \"state\", state, replayStore.state)\n        if (replayStore.state && replayStore.state.videoPlayer && replayStore.state.player) {\n          if (state === 'started') {\n            replayStore.state.videoPlayer.play()\n            replayStore.state.player.play()\n            replayStore.updatePlayState('playing')\n          } else if (state === 'ended') {\n            replayStore.state.videoPlayer.pause()\n            replayStore.state.player.pause()\n            replayStore.updatePlayState('ended')\n          } else {\n            replayStore.state.videoPlayer.pause()\n            replayStore.state.player.pause()\n            console.log(\"[agore-replay phase] timeline \" ,state, 'replayStore.is not empty?: ', replayStore.state !== null)\n            replayStore.updatePlayState('paused')\n          }\n        }\n      })\n      replayStore.addTimeline(timeline)\n\n\n      if (whiteboardUUID) {\n        let {roomToken} = await replayStore.joinRoom(whiteboardUUID)\n        let player = await WhiteboardAPI.replayRoom(whiteboard.client, {\n          beginTimestamp: startTimestamp,\n          duration: duration,\n          room: whiteboardUUID,\n          roomToken,\n        },  {\n          onCatchErrorWhenRender: error => {\n            error && console.warn(error);\n            globalStore.showToast({\n              message: t('toast.replay_failed'),\n              type: 'notice'\n            });\n          },\n          onCatchErrorWhenAppendFrame: error => {\n            error && console.warn(error);\n            globalStore.showToast({\n              message: t('toast.replay_failed'),\n              type: 'notice'\n            });\n          },\n          onPhaseChanged: phase => {\n            console.log(\"[agore-replay phase] whiteboard \", phase)\n\n            let whiteboardPlayStatus = 'ready';\n\n            if (phase === PlayerPhase.Playing) {\n              whiteboardPlayStatus = 'playing'\n            } else if (phase === PlayerPhase.Pause ||\n              phase === PlayerPhase.Ended ||\n              phase === PlayerPhase.WaitingFirstFrame) {\n              whiteboardPlayStatus = 'paused'\n              replayStore.state?.timelineScheduler.stop()\n            } else {\n              whiteboardPlayStatus = 'waiting'\n              console.log(\"[agore-replay phase] whiteboard phase transmit\", phase, whiteboardPlayStatus)\n            }\n            console.log(\"[agore-replay phase] whiteboard phase transmit 2\", phase, whiteboardPlayStatus)\n            replayStore.updatePlayState(whiteboardPlayStatus)\n          },\n          onStoppedWithError: (error) => {\n            error && console.warn(error);\n            globalStore.showToast({\n              message: t('toast.replay_failed'),\n              type: 'notice'\n            });\n          }\n        })\n        replayStore.addWhiteboardPlayer(player)\n        console.log(\"[agore-replay phase] join whiteboard\")\n      }\n    }\n\n    initPlayer()\n  }, [])\n\n  const playerElementRef = useRef<any>(null)\n  const whiteboardElementRef = useRef<any>(null)\n\n\n  const onWindowResize = () => {\n    if (state.player) {\n      state.player.refreshViewSize()\n    }\n  }\n\n  useEffect(() => {\n    if (playerElementRef.current) {\n      if (state.videoPlayer) {\n        state.videoPlayer.initVideo(playerElementRef.current.id)\n        return () => {\n          state.videoPlayer.destroy()\n        }\n      }\n    }\n  }, [state.videoPlayer, playerElementRef])\n\n  useEffect(() => {\n    if (whiteboardElementRef.current) {\n      if (state.player) {\n        console.log(\"bind\", state.player)\n        state.player.bindHtmlElement(whiteboardElementRef.current as HTMLDivElement);\n        window.addEventListener('resize', onWindowResize);\n        return () => {\n          window.removeEventListener('resize', onWindowResize);\n        }\n      }\n    }\n  }, [state.player, whiteboardElementRef])\n\n  const handlePlayerClick = () => {\n    if (!replayStore.state || !state.videoPlayer || !state.timelineScheduler) return;\n\n    if (replayStore.state.phase === 'paused' || replayStore.state.phase === 'ready') {\n      state.timelineScheduler.start()\n      return\n    }\n\n    if (replayStore.state.phase === 'started' || replayStore.state.phase === 'playing') {\n      state.timelineScheduler.stop()\n      return\n    }\n\n    if (replayStore.state.phase === 'ended') {\n      state.timelineScheduler.seekTo(0)\n      state.timelineScheduler.start()\n      return\n    }\n  }\n\n  const handleChange = (event: any, newValue: any) => {\n    replayStore.setCurrentTime(newValue);\n    replayStore.updateProgress(newValue);\n  }\n\n  const duration = useMemo(() => {\n    if (!startTime || !endTime) return 0;\n    const _duration = Math.abs(+startTime - +endTime);\n    return _duration;\n  }, [startTime, endTime]);\n\n  const totalTime = useMemo(() => {\n    return moment(duration).format(\"mm:ss\")\n  }, [duration]);\n\n  const time = useMemo(() => {\n    return moment(state.currentTime).format(\"mm:ss\");\n  }, [state.currentTime]);\n\n  const playState = state.phase;\n\n  const PlayerCover = useCallback(() => {\n\n    document.title = playState\n\n    if (!state.videoPlayer || !state.player || playState === 'waiting' || playState === 'loading') {\n      return (<Progress title={t(\"replay.loading\")} />)\n    }\n\n    if (playState === 'playing') return null;\n\n    return (\n      <div className=\"player-cover\">\n        {playState !== 'playing' ? \n          <div className=\"play-btn\" onClick={handlePlayerClick}></div> : null}\n      </div>\n    )\n  }, [state.videoPlayer, state.player, state.phase]);\n\n  const onMouseDown = () => {\n    if (state.timelineScheduler) {\n      console.log(\"seek to replay. down\")\n      state.timelineScheduler.stop()\n      replayStore.updatePlayState('paused')\n    }\n  }\n\n  const onMouseUp = () => {\n    if (state.timelineScheduler) {\n      console.log(\"seek to replay. up\")\n      state.timelineScheduler.seekTo(state.currentTime)\n      state.timelineScheduler.start()\n    }\n  }\n\n  return (\n    <div className={`replay`}>\n      <div className={`player-container`} >\n        <PlayerCover />\n        <div className=\"player\">\n          <div className=\"agora-logo\"></div>\n          <div ref={whiteboardElementRef} id=\"whiteboard\" className=\"whiteboard\"></div>\n          <div className=\"video-menu\">\n            <div className=\"control-btn\">\n              <div className={`btn ${playState === 'playing' ? 'paused' : 'play'}`} onClick={handlePlayerClick}></div>\n            </div>\n            <div className=\"progress\">\n              <Slider\n                className='custom-video-progress'\n                value={state.currentTime}\n                onMouseDown={onMouseDown}\n                onMouseUp={onMouseUp}\n                onTouchStart={onMouseDown}\n                onTouchEnd={onMouseUp}\n                onChange={handleChange}\n                min={0}\n                max={duration}\n                aria-labelledby=\"continuous-slider\"\n              />\n              <div className=\"time\">\n                <div className=\"current_duration\">{time}</div>\n                  /\n                <div className=\"video_duration\">{totalTime}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"video-container\">\n        <div className=\"video-player\">\n          <div ref={playerElementRef} id=\"player\" style={{width: \"100%\", height: \"100%\", objectFit: \"cover\"}}></div>\n        </div>\n        <div className=\"chat-holder chat-board chat-messages-container\">\n          <RTMReplayer\n            senderId={senderId}\n            channelName={channelName}\n            startTime={startTime}\n            endTime={endTime}\n            currentSeekTime={state.currentTime}\n            onPhaseChanged={(e: RtmPlayerState) => {\n              if (e !== RtmPlayerState.load) {\n                state.timelineScheduler?.stop();\n              }\n            }}\n          ></RTMReplayer>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useMemo } from 'react';\nimport { isEmpty } from 'lodash';\nimport { roomStore } from '../stores/room';\nimport { useRoomState } from '../containers/root-container';\n\ntype StreamValue = {\n  teacher: any\n  students: any[]\n  sharedStream: any\n  currentHost: any\n  onPlayerClick: (type: string, streamID: number, uid: string) => Promise<any>\n}\n\n\nexport default function useStream () {\n  const roomState = useRoomState();\n  const me = roomState.me;\n  const course = roomState.course;\n\n  const teacher = useMemo(() => {\n    if (!course.teacherId || !me.uid) return;\n    const teacherInfo = roomStore.state.users.get(`${course.teacherId}`);\n    if (!teacherInfo) return;\n\n    // 当本地流为老师时\n    if (+me.uid === +course.teacherId) {\n      return {\n        ...roomState.rtc.localStream,\n        account: teacherInfo.account,\n        video: teacherInfo.video,\n        audio: teacherInfo.audio,\n        local: true,\n      }\n    } else {\n      // when peer teacher is online\n      // 当远端流为老师时\n      const teacherUid = roomState.rtc.users.get(+course.teacherId);\n      if(!teacherUid) return null;\n      // when peer teacher stream is found\n      // 当找到老师的音视频流时\n      const remoteTeacherStream = roomState.rtc.remoteStreams.get(`${teacherUid}`);\n      if (remoteTeacherStream) {\n        return {\n          ...remoteTeacherStream,\n          account: teacherInfo.account,\n          video: teacherInfo.video,\n          audio: teacherInfo.audio,\n        }\n      }\n      return {\n        streamID: teacherUid,\n        account: teacherInfo.account,\n        video: teacherInfo.video,\n        audio: teacherInfo.audio,\n      }\n    }\n  }, [\n    JSON.stringify(\n      [\n        course.teacherId,\n        me.uid\n      ]\n    ),\n    roomState.users,\n    roomState.rtc.users,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localStream\n  ]);\n\n  const screenId = useMemo(() => {\n    const teacher = roomState.users.get(`${course.teacherId}`)\n    let id = ''\n    if (teacher) {\n      id = teacher.screenId\n    }\n    return id\n  }, [course.teacherId, roomState.users])\n\n  const students = useMemo(() => {\n    const userAttrs = roomStore.state.users;\n    if (!me.uid || userAttrs.count() === 0) return [];\n    const teacherUid = course.teacherId;\n    const peerUsers = roomState.rtc.users;\n    // exclude teacher and me and screenId\n    // 排除老师，屏幕共享，和自己的uid\n    let studentIds = peerUsers.filter((it: number) => it !== +teacherUid && it !== +me.uid && it !== +screenId);\n\n    const studentStreams: any[] = [];\n    const myAttr = userAttrs.get(`${me.uid}`);\n\n    // when i m student\n    // 当自己是学生流时\n    if (+me.role === 2) {\n      if (myAttr && roomState.rtc.localStream) {\n        const _tmpStream = {\n          ...roomState.rtc.localStream,\n          account: myAttr.account,\n          video: myAttr.video,\n          audio: myAttr.audio,\n          local: true,\n        }\n        studentStreams.push(_tmpStream);\n      }\n    }\n\n    // capture all remote streams\n    // 所有远端的学生流\n    for (let studentId of studentIds) {\n      const studentAttr = userAttrs.get(`${studentId}`);\n      const stream = roomState.rtc.remoteStreams.get(`${studentId}`);\n      if (studentAttr) {\n        let _tmpStream = {\n          streamID: studentId,\n          account: studentAttr.account,\n          video: studentAttr.video,\n          audio: studentAttr.audio,\n        }\n        if (stream) {\n          _tmpStream = {\n            ...stream,\n            streamID: studentId,\n            account: studentAttr.account,\n            video: studentAttr.video,\n            audio: studentAttr.audio,\n          }\n        }\n        studentStreams.push(_tmpStream);\n      }\n    }\n    return studentStreams;\n  }, [\n    JSON.stringify(\n      [\n        course.teacherId,\n        screenId,\n        me.uid\n      ]\n    ),\n    roomState.users,\n    roomState.rtc.users,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localStream\n  ]);\n\n  const sharedStream = useMemo(() => {\n    if (roomState.rtc.localSharedStream) {\n      const _tmpStream = {\n        ...roomState.rtc.localSharedStream,\n        video: 1,\n        audio: 1,\n        local: true,\n      }\n      return _tmpStream;\n    }\n\n    const remoteStream = roomState.rtc.remoteStreams.get(`${screenId}`);\n\n    if (remoteStream) {\n      const _tmpStream = {\n        ...remoteStream,\n        video: 1,\n        audio: 1,\n      }\n      return _tmpStream;\n    }\n\n    return null;\n  }, [\n    screenId,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localSharedStream\n  ]);\n\n  const currentHost = useMemo(() => {\n    if (!course.coVideoUids || isEmpty(course.coVideoUids)) return null;\n    const coVideoUid = ''+course.coVideoUids[0];\n    const userAttr = roomState.users.get(`${coVideoUid}`);\n    if (!userAttr) return null;\n    // when i am current broadcaster\n    if (`${me.uid}` === coVideoUid) {\n      if (roomState.rtc.localStream) {\n        let _tmpStream = {\n          ...roomState.rtc.localStream,\n          account: userAttr.account,\n          video: userAttr.video,\n          audio: userAttr.audio,\n          local: true,\n          streamID: +me.uid,\n        }\n        return _tmpStream;\n      }\n    } else {\n      // when remote user is broadcaster\n      const peerUid = coVideoUid;\n      const peerUserAttr = roomState.users.get(`${peerUid}`);\n      if (peerUid && peerUserAttr) {\n        let tmpStream = {\n          account: peerUserAttr.account,\n          video: peerUserAttr.video,\n          audio: peerUserAttr.audio,\n          streamID: +peerUid,\n        }\n        const remoteStream = roomState.rtc.remoteStreams.get(`${peerUid}`);\n        if (remoteStream) {\n          tmpStream = {\n            ...tmpStream,\n            ...remoteStream\n          }\n        }\n        return tmpStream\n      }\n    }\n    return null;\n  }, [\n    course.coVideoUids,\n    me.uid,\n    me.role,\n    roomState.users,\n    roomState.rtc.remoteStreams,\n    roomState.rtc.localStream,\n  ]);\n\n  const value: StreamValue = {\n    teacher: teacher,\n    students: students,\n    sharedStream: sharedStream,\n    currentHost: currentHost,\n    onPlayerClick: async (type: string, streamID: number, uid: string) => {\n      console.log(\"streamID \", streamID, uid);\n      const me = roomStore.state.me;\n      if (!roomStore.state.rtm.joined || !me.uid) return console.warn(\"please confirm joined rtm\");\n      const targetUser = roomStore.state.users.get(`${uid}`);\n      if (!targetUser) return;\n\n      const targetUid = targetUser.uid;\n\n      const video = Boolean(targetUser.video);\n      const audio = Boolean(targetUser.audio);\n      const chat = Boolean(targetUser.chat);\n\n      if (type === 'video') {\n        if (video) {\n          await roomStore.mute(targetUid, 'video');\n        } else {\n          await roomStore.unmute(targetUid, 'video');\n        }\n        return;\n      }\n\n      if (type === 'audio') {\n        if (audio) {\n          await roomStore.mute(targetUid, 'audio');\n        } else {\n          await roomStore.unmute(targetUid, 'audio');\n        }\n        return;\n      }\n\n      if (type === 'chat') {\n        if (chat) {\n          await roomStore.mute(targetUid, 'chat');\n        } else {\n          await roomStore.unmute(targetUid, 'chat');\n        }\n        return;\n      }\n    }\n  }\n  return value;\n}","import React, { useRef, useEffect, useState, useLayoutEffect } from 'react';\nimport VideoPlayer from './video-player';\nimport './video-marquee.scss';\nimport useStream from '../hooks/use-streams';\nimport { AgoraMediaStream } from '../utils/types';\n\nconst showScrollbar = () => {\n  const $marquee = document.querySelector(\".video-marquee .agora-video-view\");\n  if ($marquee) {\n    const clientWidth = $marquee.clientWidth;\n    const marqueeLength: number = document.querySelectorAll(\".video-marquee .agora-video-view\").length;\n    const videoMarqueeMark = document.querySelector('.video-marquee-mask')\n    if (clientWidth && videoMarqueeMark) {\n      const videoMarqueeWidth = videoMarqueeMark.clientWidth;\n      const width: number = clientWidth * marqueeLength;\n      if (videoMarqueeWidth <= width) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction VideoMarquee() {\n\n  const {teacher, students, onPlayerClick} = useStream();\n\n  const marqueeEl = useRef(null);\n\n  const scrollLeft = (current: any, offset: number) => {\n    current.scrollLeft += (offset * current.childNodes[1].offsetWidth);\n  }\n\n  const handleScrollLeft = (evt: any) => {\n    scrollLeft(marqueeEl.current, 1);\n  }\n\n  const handleScrollRight = (evt: any) => {\n    scrollLeft(marqueeEl.current, -1);\n  }\n\n  const ref = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      ref.current = true;\n    }\n  }, []);\n\n  const [scrollBar, setScrollBar] = useState<boolean>(false);\n\n  useLayoutEffect(() => {\n    if (!students.length) return;\n    !ref.current && setScrollBar(showScrollbar());\n  }, [students]);\n\n  useEffect(() => {\n    window.addEventListener('resize', (evt: any) => {\n      !ref.current && setScrollBar(showScrollbar());\n    });\n    return () => {\n      window.removeEventListener('resize', () => {});\n    }\n  }, []);\n\n  return (\n    <div className=\"video-marquee-container\">\n      <div className=\"main\">\n        {teacher ?\n          <VideoPlayer\n            role=\"teacher\"\n            domId={`dom-${teacher.streamID}`}\n            id={`${teacher.streamID}`}\n            streamID={teacher.streamID}\n            stream={teacher.stream}\n            account={teacher.account}\n            audio={Boolean(teacher.audio)}\n            video={Boolean(teacher.video)}\n            local={Boolean(teacher.local)}\n            handleClick={onPlayerClick}\n            autoplay={true}\n          />\n          :\n          <VideoPlayer role=\"teacher\" account={'teacher'} video audio streamID={0} />\n          }\n      </div>\n      <div className=\"video-marquee-mask\">\n        <div className=\"video-marquee\" ref={marqueeEl}>\n        {scrollBar ? \n          <div className=\"scroll-btn-group\">\n            <div className=\"icon icon-left\" onClick={handleScrollLeft}></div>\n            <div className=\"icon icon-right\" onClick={handleScrollRight}></div>\n          </div> : null\n        }\n          {students.map((student: AgoraMediaStream, key: number) => (\n            <VideoPlayer\n              role=\"student\"\n              domId={`dom-${student.streamID}`}\n              key={`${key}${student.streamID}`}\n              id={`${student.streamID}`}\n              account={student.account}\n              streamID={student.streamID}\n              stream={student.stream}\n              video={student.video}\n              audio={student.audio}\n              local={student.local}\n              handleClick={onPlayerClick}\n              autoplay={true}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default React.memo(VideoMarquee);","import React, {useEffect, useRef} from 'react';\nimport './whiteboard.scss';\nimport { Room } from 'white-web-sdk';\nimport { whiteboard } from '../stores/whiteboard';\nimport { t } from '../i18n';\nimport { Progress } from '../components/progress/progress';\nimport { ResizeObserver } from '@juggle/resize-observer';\n\ninterface WhiteBoardProps {\n  room?: Room | null\n  className: string\n  loading: boolean\n}\n\nexport default function Whiteboard ({\n  room,\n  className,\n  loading\n}: WhiteBoardProps) {\n\n  const domRef = useRef(null);\n  const domObserver = useRef<any>(null)\n\n  useEffect(() => {\n    if (!room || !whiteboard.state.room || !domRef.current) return;\n    room.bindHtmlElement(domRef.current);\n    domObserver.current = new ResizeObserver((entries, observer) => {\n      if (!whiteboard.disconnected && whiteboard.state.room !== null && whiteboard.state.room.isWritable) {\n        whiteboard.state.room.moveCamera({centerX: 0, centerY: 0});\n        whiteboard.state.room.refreshViewSize();           \n      }\n    })\n    if (domObserver.current) {\n      domObserver.current.observe(domRef.current)\n    }\n    whiteboard.updateRoomState();\n    return () => {\n      if (whiteboard.state.room) {\n        whiteboard.state.room.bindHtmlElement(null);\n      }\n    }\n  }, [room, domRef]);\n\n  return (\n    <div className=\"whiteboard\">\n      { loading || !room ? <Progress title={t(\"whiteboard.loading\")}></Progress> : null}\n      <div ref={domRef} id=\"whiteboard\" className={`whiteboard-canvas ${className}`}></div>\n    </div>\n  )\n}","import React, { useRef } from 'react';\nimport Icon from '../icon';\nimport { roomStore } from '@/stores/room';\nimport { whiteboard } from '@/stores/whiteboard';\nimport moment from 'moment';\nimport { globalStore } from '@/stores/global';\nimport { t } from '@/i18n';\nimport { Tooltip } from '@material-ui/core';\nimport { useRoomState } from '@/containers/root-container';\ninterface ControlItemProps {\n  name: string\n  onClick: (evt: any, name: string) => void\n  active: boolean\n  text?: string\n  loading?: boolean\n}\n\nconst ControlItem = (props: ControlItemProps) => {\n  const onClick = (evt: any) => {\n    props.onClick(evt, props.name);\n  }\n  return (\n    props.text ?\n      <div className={`control-btn control-${props.name} ${props.loading ? 'icon-loading' : ''}`} onClick={onClick}>\n        <div className={`btn-icon ${props.name} ${props.active ? 'active' : ''}`}\n          data-name={props.name} />\n        <div className=\"control-text\">{props.text}</div>\n      </div>\n      :\n      <Icon\n        loading={props.loading}\n        data={props.name}\n        onClick={onClick}\n        className={`items ${props.name} ${props.active ? 'active' : ''}`}\n      />\n  )\n}\n\ninterface NoticeProps {\n  reason: string\n  text?: string\n}\n\ninterface ControlProps {\n  sharing: boolean\n  isHost?: boolean\n  current: string\n  currentPage: number\n  totalPage: number\n  role: number\n  notice?: NoticeProps\n  onClick: (evt: any, type: string) => void\n}\n\nexport default function Control({\n  sharing,\n  isHost,\n  current,\n  currentPage,\n  totalPage,\n  onClick,\n  role,\n  notice,\n}: ControlProps) {\n\n  const roomState = useRoomState();\n  const lock = useRef<boolean>(false);\n\n  const canStop = () => {\n    const timeMoment = moment(whiteboard.state.startTime).add(15, 'seconds');\n    if (+timeMoment >= +Date.now()) {\n      globalStore.showToast({\n        type: 'netlessClient',\n        message: t('toast.recording_too_short')\n      })\n      return false;\n    }\n    return true;\n  }\n\n  const onRecordButtonClick = (evt: any, type: string) => {\n    handleRecording(evt, type)\n    .then(() => {}).catch(console.warn);\n  }\n  \n  const handleRecording = async (evt: any, type: string) => {\n    try {\n      const roomState = roomStore.state;\n      const me = roomState.me;\n      if (lock.current || !me.uid) return;\n  \n      if (roomState.course.isRecording) {\n        if (!canStop()) return;\n        await roomStore.stopRecording();\n        globalStore.showToast({\n          type: 'recording',\n          message: t('toast.stop_recording'),\n        });\n      } else {\n        await roomStore.startRecording();\n        globalStore.showToast({\n          type: 'recording',\n          message: t('toast.start_recording'),\n        });\n      }\n    } catch(err) {\n      if (err.recordingErr) {\n        globalStore.showToast({\n          type: 'recordingErr',\n          message: t('toast.recording_failed', {reason: err.recordingErr.message})\n        });\n      }\n    }\n  }\n\n  return (\n    <div className=\"controls-container\">\n      <div className=\"interactive\">\n      {notice && roomState.users.count() <= 1 ?\n          <ControlItem name={notice.reason}\n            onClick={onClick}\n            active={notice.reason === current} />\n        : null}\n      </div>\n      <div className=\"controls\">\n        {!sharing && role === 1 ?\n          <>\n            <Tooltip title={t(`control_items.first_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`first_page`}\n                  active={'first_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <Tooltip title={t(`control_items.prev_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`prev_page`}\n                  active={'prev_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <div className=\"current_page\">\n              <span>{currentPage}/{totalPage}</span>\n            </div>\n            <Tooltip title={t(`control_items.next_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`next_page`}\n                  active={'next_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <Tooltip title={t(`control_items.last_page`)} placement=\"top\">\n              <span>\n                <ControlItem name={`last_page`}\n                  active={'last_page' === current}\n                  onClick={onClick} />\n              </span>\n            </Tooltip>\n            <div className=\"menu-split\" style={{ marginLeft: '7px', marginRight: '7px' }}></div>\n          </> : null\n        }\n        {+role === 1 ?\n          <>\n            <Tooltip title={t(roomStore.state.course.isRecording ? 'control_items.stop_recording' : 'control_items.recording')} placement=\"top\">\n              <span>\n                <ControlItem\n                  loading={Boolean(roomStore.state.recordLock)}\n                  name={Boolean(roomStore.state.recordLock) ? 'icon-loading ' : (roomStore.state.course.isRecording ? 'stop_recording' : 'recording')}\n                  onClick={onRecordButtonClick}\n                  active={false}\n                />\n              </span>\n            </Tooltip>\n            <Tooltip title={t(sharing ? 'control_items.quit_screen_sharing' : 'control_items.screen_sharing')} placement=\"top\">\n              <span>\n                <ControlItem\n                  name={sharing ? 'quit_screen_sharing' : 'screen_sharing'}\n                  onClick={(evt: any) => {\n                    if (sharing) {\n                      roomStore.stopScreenShare()\n                      .then(() => {\n                        console.log(\"stop screen share\")\n                      }).catch(console.warn)\n                    } else {\n                      roomStore.startScreenShare()\n                      .then(() => {\n                        console.log(\"start screen share\")\n                      }).catch(console.warn)\n                    }\n                  }}\n                  active={false}\n                  text={sharing ? 'stop sharing' : ''}\n                />\n              </span>\n            </Tooltip>\n          </> : null }\n        {+role === 2 ?\n          <>\n            <ControlItem\n              name={isHost ? 'hands_up_end' : 'hands_up'}\n              onClick={onClick}\n              active={false}\n              text={''}\n            />\n          </>\n         :null}\n      </div>\n\n    </div>\n  )\n}","import React from 'react';\nimport Icon from '../icon';\nimport { Tooltip } from '@material-ui/core';\nimport {t} from '@/i18n';\n\nconst ToolItem = (props: any) => {\n  const onClick = (evt: any) => {\n    props.onClick(evt, props.name);\n  }\n  return (\n    <Tooltip title={t(`tool.${props.name}`)} placement=\"right\">\n      <span>\n      <Icon data={props.name}\n        onClick={onClick} className={`items ${props.name} ${props.active ? 'active' : ''}`} />\n      </span>\n    </Tooltip>\n  )\n}\n\ninterface ToolsProps {\n  items: any[]\n  currentTool: string\n  handleToolClick: (evt: any, name: string) => void\n};\n\nexport default function Tools (props: ToolsProps) {\n  return (\n    <div className=\"menu\">\n      {props.items.map((item: any, key: number) => (\n        <ToolItem key={key}\n          name={item.name}\n          onClick={props.handleToolClick}\n          active={props.currentTool === item.name}\n        >\n        </ToolItem>\n      ))}\n    </div>\n  )\n}","import { MultipartUploadResult } from 'ali-oss';\nimport uuidv4 from 'uuid/v4';\nimport {Room, PptConverter, PptKind, Ppt} from 'white-web-sdk';\nimport MD5 from 'js-md5';\nimport { resolveFileInfo } from './helper';\n\nexport type imageSize = {\n  width: number\n  height: number\n};\n\nexport type PPTDataType = {\n    active: boolean\n    pptType: PPTType\n    id: string\n    data: any\n    cover?: any\n};\n\nexport enum PPTType {\n    dynamic = \"dynamic\",\n    static = \"static\",\n    init = \"init\",\n}\nexport type NetlessImageFile = {\n  width: number;\n  height: number;\n  file: File;\n  coordinateX: number;\n  coordinateY: number;\n};\n\nexport type TaskType = {\n  uuid: string,\n  imageFile: NetlessImageFile\n};\n\nexport type PPTProgressListener = (phase: PPTProgressPhase, percent: number) => void;\n\nexport enum PPTProgressPhase {\n  Uploading,\n  Converting,\n}\n\nexport class UploadManager {\n\n  private readonly ossClient: any;\n  private readonly room: Room;\n  private readonly ossUploadCallback?: (res: any) => void;\n  public constructor(ossClient: any, room: Room, ossUploadCallback?: (res: any) => void) {\n    this.ossClient = ossClient;\n    this.room = room;\n    this.ossUploadCallback = ossUploadCallback;\n  }\n  \n  public async convertFile(\n    rawFile: File,\n    pptConverter: PptConverter,\n    kind: PptKind,\n    folder: string,\n    uuid: string,\n    onProgress?: PPTProgressListener,\n  ): Promise<void> {\n    const {fileType} = resolveFileInfo(rawFile);\n    const path = `/${folder}/${uuid}${fileType}`;\n    const pptURL = await this.addFile(path, rawFile, onProgress);\n    let res: Ppt;\n    if (kind === PptKind.Static) {\n        res = await pptConverter.convert({\n          url: pptURL,\n          kind: kind,\n          onProgressUpdated: progress => {\n            if (onProgress) {\n              onProgress(PPTProgressPhase.Converting, progress);\n            }\n          },\n        });\n        const documentFile: PPTDataType = {\n          active: true,\n          id: `${uuidv4()}`,\n          pptType: PPTType.static,\n          data: res.scenes,\n        };\n        const scenePath = MD5(`/${uuid}/${documentFile.id}`);\n        this.room.putScenes(`/${scenePath}`, res.scenes);\n        this.room.setScenePath(`/${scenePath}/${res.scenes[0].name}`);\n    } else {\n      console.log(\"convert no static ppt\");\n        res = await pptConverter.convert({\n          url: pptURL,\n          kind: kind,\n          onProgressUpdated: progress => {\n            if (onProgress) {\n              onProgress(PPTProgressPhase.Converting, progress);\n            }\n          },\n        });\n        const documentFile: PPTDataType = {\n          active: true,\n          id: `${uuidv4()}`,\n          pptType: PPTType.dynamic,\n          data: res.scenes,\n        };\n        const scenePath = MD5(`/${uuid}/${documentFile.id}`);\n        this.room.putScenes(`/${scenePath}`, res.scenes);\n        this.room.setScenePath(`/${scenePath}/${res.scenes[0].name}`);\n    }\n    if (onProgress) {\n        onProgress(PPTProgressPhase.Converting, 1);\n    }\n  }\n  private getImageSize(imageInnerSize: imageSize): imageSize {\n    const windowSize: imageSize = {width: window.innerWidth, height: window.innerHeight};\n    const widthHeightProportion: number = imageInnerSize.width / imageInnerSize.height;\n    const maxSize: number = 960;\n    if ((imageInnerSize.width > maxSize && windowSize.width > maxSize) || (imageInnerSize.height > maxSize && windowSize.height > maxSize)) {\n      if (widthHeightProportion > 1) {\n        return {\n          width: maxSize,\n          height: maxSize / widthHeightProportion,\n        };\n      } else {\n        return {\n          width: maxSize * widthHeightProportion,\n          height: maxSize,\n        };\n      }\n    } else {\n      if (imageInnerSize.width > windowSize.width || imageInnerSize.height > windowSize.height) {\n        if (widthHeightProportion > 1) {\n          return {\n            width: windowSize.width,\n            height: windowSize.width / widthHeightProportion,\n          };\n        } else {\n          return {\n            width: windowSize.height * widthHeightProportion,\n            height: windowSize.height,\n          };\n        }\n      } else {\n        return {\n          width: imageInnerSize.width,\n          height: imageInnerSize.height,\n        };\n      }\n    }\n  }\n  public async uploadImageFiles(imageFiles: File[], x: number, y: number, onProgress?: PPTProgressListener): Promise<void> {\n    const newAcceptedFilePromises = imageFiles.map(file => this.fetchWhiteImageFileWith(file, x, y));\n    const newAcceptedFiles = await Promise.all(newAcceptedFilePromises);\n    await this.uploadImageFilesArray(newAcceptedFiles, onProgress);\n  }\n\n  private fetchWhiteImageFileWith(file: File, x: number, y: number): Promise<NetlessImageFile> {\n    return new Promise(resolve => {\n      const image = new Image();\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        image.src = reader.result as string;\n        image.onload = async () => {\n          const res = this.getImageSize(image);\n          const imageFile: NetlessImageFile = {\n            width: res.width,\n            height: res.height,\n            file: file,\n            coordinateX: x,\n            coordinateY: y,\n          };\n          resolve(imageFile);\n        };\n      };\n    });\n  }\n  private async uploadImageFilesArray(imageFiles: NetlessImageFile[], onProgress?: PPTProgressListener): Promise<void> {\n    if (imageFiles.length > 0) {\n\n      const tasks: { uuid: string, imageFile: NetlessImageFile }[] = imageFiles.map(imageFile => {\n        return {\n          uuid: uuidv4(),\n          imageFile: imageFile,\n        };\n      });\n\n      for (const {uuid, imageFile} of tasks) {\n        const {x, y} = this.room.convertToPointInWorld({x: imageFile.coordinateX, y: imageFile.coordinateY});\n        this.room.insertImage({\n          uuid: uuid,\n          centerX: x,\n          centerY: y,\n          width: imageFile.width,\n          height: imageFile.height,\n        });\n      }\n      await Promise.all(tasks.map(task => this.handleUploadTask(task, onProgress)));\n      if (this.room.isWritable) {\n        this.room.setMemberState({\n          currentApplianceName: \"selector\",\n        });\n      }\n    }\n  }\n  private async handleUploadTask(task: TaskType, onProgress?: PPTProgressListener): Promise<void> {\n    const fileUrl: string = await this.addFile(`${task.uuid}${task.imageFile.file.name}`, task.imageFile.file, onProgress);\n    if (this.room.isWritable) {\n      this.room.completeImageUpload(task.uuid, fileUrl);\n    }\n  }\n\n  private getFile = (name: string): string => {\n    return this.ossClient.generateObjectUrl(name);\n  }\n  public addFile = async (path: string, rawFile: File, onProgress?: PPTProgressListener): Promise<string> => {\n    const res: MultipartUploadResult = await this.ossClient.multipartUpload(\n      path,\n      rawFile,\n      {\n        progress: (p: any) => {\n          if (onProgress) {\n            onProgress(PPTProgressPhase.Uploading, p);\n          }\n        },\n      });\n      if (this.ossUploadCallback) {\n        this.ossUploadCallback(res);\n      }\n    if (res.res.status === 200) {\n      return this.getFile(path);\n    } else {\n      throw new Error(`upload to ali oss error, status is ${res.res.status}`);\n    }\n  }\n}","import React, { useRef } from 'react';\nimport uuidv4 from 'uuid/v4';\nimport { PPTProgressListener, UploadManager } from \"@/utils/upload-manager\";\nimport { PptKind, Room } from \"white-web-sdk\";\nimport { ossConfig, ossClient, resolveFileInfo } from '@/utils/helper';\nimport { whiteboard } from '@/stores/whiteboard';\nimport {t} from '@/i18n';\n\nexport type UploadBtnProps = {\n  room: Room,\n  uuid: string,\n  roomToken: string,\n  onProgress?: PPTProgressListener,\n  onFailure?: (err: any) => void,\n  onSuccess?: () => void,\n  didUpload: () => void\n};\n\nexport const UploadBtn: React.FC<UploadBtnProps> = ({\n  room, uuid, roomToken,\n  onProgress, onFailure,\n  onSuccess,\n  didUpload\n}) => {\n\n  const ImageInput = useRef<any>(null);\n  const DynamicInput = useRef<any>(null);\n  const StaticInput = useRef<any>(null);\n  const AudioVideoInput = useRef<any>(null);\n\n  const uploadDynamic = async (event: any) => {\n    try {\n      didUpload();\n      const file = event.currentTarget.files[0];\n      if (file) {\n        const uploadManager = new UploadManager(ossClient, room);\n        const pptConverter = whiteboard.client.pptConverter(roomToken);\n        await uploadManager.convertFile(\n          file,\n          pptConverter,\n          PptKind.Dynamic,\n          ossConfig.folder,\n          uuid,\n          onProgress,\n        );\n        onSuccess && onSuccess();\n      }\n    } catch (err) {\n      onFailure && onFailure(err);\n      console.warn(err)\n    } finally {\n      if (DynamicInput.current) {\n        DynamicInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadStatic = async (event: any) => {\n    try {\n      didUpload();\n      const file = event.currentTarget.files[0];\n      if (file) {\n        const uploadManager = new UploadManager(ossClient, room);\n        const pptConverter = whiteboard.client.pptConverter(roomToken);\n        await uploadManager.convertFile(\n          file,\n          pptConverter,\n          PptKind.Static,\n          ossConfig.folder,\n          uuid,\n          onProgress);\n        onSuccess && onSuccess();\n      }\n    } catch (err) {\n      onFailure && onFailure(err)\n      console.warn(err)\n    } finally {\n      if (StaticInput.current) {\n        StaticInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadImage = async (event: any) => {\n    try {\n      didUpload();\n      const file = event.currentTarget.files[0];\n      if (file) {\n        const uploadFileArray: File[] = [];\n        uploadFileArray.push(file);\n        const uploadManager = new UploadManager(ossClient, room);\n        const $whiteboard = document.getElementById('whiteboard') as HTMLDivElement;\n        if ($whiteboard) {\n          const { clientWidth, clientHeight } = $whiteboard;\n          await uploadManager.uploadImageFiles(uploadFileArray, clientWidth / 2, clientHeight / 2, onProgress);\n        } else {\n          const clientWidth = window.innerWidth;\n          const clientHeight = window.innerHeight;\n          await uploadManager.uploadImageFiles(uploadFileArray, clientWidth / 2, clientHeight / 2, onProgress);\n        }\n        onSuccess && onSuccess();\n      }\n    } catch (err) {\n      onFailure && onFailure(err)\n      console.warn(err)\n    } finally {\n      if (ImageInput.current) {\n        ImageInput.current.value = ''\n      }\n    }\n  }\n\n  const uploadAudioVideo = async (event: any) => {\n    didUpload()\n    const uploadManager = new UploadManager(ossClient, room);\n    const file = event.currentTarget.files[0];\n    if (file) {\n      try {\n        const {fileName, fileType} = resolveFileInfo(file);\n        const path = `/${ossConfig.folder}`\n        const uuid = uuidv4();\n        const res = await uploadManager.addFile(`${path}/video-${fileName}${uuid}`, file,\n          onProgress\n        );\n        const isHttps = res.indexOf(\"https\") !== -1;\n        let url;\n        if (isHttps) {\n          url = res;\n        } else {\n          url = res.replace(\"http\", \"https\");\n        }\n        const type = fileType.split(\".\")[1];\n        if (url && whiteboard.state.room) {\n          if (type.toLowerCase() === 'mp4') {\n            const res = whiteboard.state.room.insertPlugin('video', {\n              originX: 0,\n              originY: 0,\n              width: 480,\n              height: 270,\n              attributes: {\n                  pluginVideoUrl: url,\n              },\n            });\n            console.log(\"[upload-btn] video resource after insert plugin, res: \", res);\n          }\n          if (type.toLowerCase() === 'mp3') {\n            const res = whiteboard.state.room.insertPlugin('audio', {\n              originX: 0,\n              originY: 0,\n              width: 480,\n              height: 86,\n              attributes: {\n                  pluginAudioUrl: url,\n              },\n            });\n            console.log(\"[upload-btn] audio resource after insert plugin, res: \", res);\n          }\n          onSuccess && onSuccess();\n        }\n      } catch(err) {\n        onFailure && onFailure(err);\n      } finally {\n        if (AudioVideoInput.current) {\n          AudioVideoInput.current.value = ''\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"upload-btn\">\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-image\">\n          <div className=\"upload-image-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('upload_picture')}</div>\n            <div className=\"description\">bmp, jpg, png, gif</div>\n          </div>\n        </label>\n        <input ref={ImageInput} id=\"upload-image\" accept=\"image/*,.bmp,.jpg,.png,.gif\"\n          onChange={uploadImage} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-dynamic\">\n          <div className=\"upload-dynamic-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('convert_webpage')}</div>\n            <div className=\"description\">pptx</div>\n          </div>\n        </label>\n        <input ref={DynamicInput} id=\"upload-dynamic\" accept=\".pptx\" onChange={uploadDynamic} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-static\">\n          <div className=\"upload-static-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('convert_to_picture')}</div>\n            <div className=\"description\">pptx, word, pdf support</div>\n          </div>\n        </label>\n        <input ref={StaticInput} id=\"upload-static\" accept=\".doc,.docx,.ppt,.pptx,.pdf\" onChange={uploadStatic} type=\"file\"></input>\n      </div>\n      <div className=\"slice-dash\"></div>\n      <div className=\"upload-items\">\n        <label htmlFor=\"upload-video\">\n          <div className=\"upload-static-resource\"></div>\n          <div className=\"text-container\">\n            <div className=\"title\">{t('upload_audio_video')}</div>\n            <div className=\"description\">mp4,mp3</div>\n          </div>\n        </label>\n        <input ref={AudioVideoInput} id=\"upload-video\" accept=\".mp4,.mp3\" onChange={uploadAudioVideo} type=\"file\"></input>\n      </div>\n    </div>\n  )\n}","import React, {useRef, useState, useEffect} from 'react';\nimport { SceneResource, whiteboard } from '@/stores/whiteboard';\nimport { t } from '@/i18n';\nimport { Input, Tooltip } from '@material-ui/core';\nimport { useDebounce } from 'react-use';\nimport { globalStore } from '@/stores/global';\nimport Icon from '@/components/icon'; \nimport {omit} from 'lodash';\n\ntype ResourceMenuProps = {\n  activeScenePath: string\n  items: SceneResource[]\n  onClose: (evt: any) => void\n  onClick: (rootPath: string) => void\n}\n\nconst debounceDelay = 800\n\nexport const ResourceItem: React.FC<any> = (props: any) => {\n\n  const [name, setName] = useState<string>(props.name);\n\n  const mounted = useRef<boolean>(false);\n\n  // `useDebounce` documentation: https://github.com/streamich/react-use/blob/master/docs/useDebounce.md\n  // `useDebounce` 文档请参考: https://github.com/streamich/react-use/blob/master/docs/useDebounce.md\n  const [, cancel] = useDebounce(\n    () => {\n      if (!mounted.current || !name) return\n      if (whiteboard.state.room) {\n        const globalState: any = whiteboard.state.room.state.globalState as any;\n        const sceneMap: any = globalState['sceneMap'];\n        if (!sceneMap) {\n          whiteboard.state.room?.setGlobalState({\n            sceneMap: {\n              [`${props.item.path}`]: `${name}`\n            }\n          })\n        } else {\n          const blob = new Blob([JSON.stringify(globalState)])\n          const globalStateLength = Object.keys(globalState).length\n          const sceneMapLength = Object.keys(sceneMap).length\n          // WARN: Please do not use too large size with room.setGlobalState api especially in production environment.\n          // 警告: 请不要给room.setGlobalState传递过大的参数，以免造成网络问题\n          if (\n            globalStateLength <= 30 \n            && sceneMapLength <= 30\n            && blob.size <= (1000 * 50)) {\n            whiteboard.state.room?.setGlobalState({sceneMap: {\n              ...sceneMap,\n              [`${props.item.path}`]: `${name}`\n            }})\n          } else {\n            globalStore.showToast({\n              type: 'whiteboard',\n              message: t(\"whiteboard.global_state_limit\")\n            })\n          }\n        }\n      }\n    },\n    debounceDelay,\n    [name]\n  );\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n      cancel()\n    }\n  }, [cancel])\n\n  const onChange = (evt: any) => {\n    setName(evt.target.value)\n  }\n\n  const isMainScene = [\"/\", \"/init\"].indexOf(props.item.path) !== -1\n\n  return (\n    <>\n    <div className={`item ${props.activeClass} relative`}>\n      <Tooltip title={isMainScene ? t(\"control_items.delete_all\") : t(\"control_items.delete_current\")} placement=\"bottom\">\n        <span>\n          <Icon className=\"icon-delete\" onClick={() => {\n            const room = whiteboard.state.room\n            if (room) {\n              room.removeScenes(props.item.path)\n              const roomGlobalState = room.state.globalState as any;\n              const sceneMap = roomGlobalState['sceneMap'];\n              const newSceneMap = omit(sceneMap, [`${props.item.path}`])\n              if (isMainScene) {\n                room.setGlobalState({\n                  sceneMap: ''\n                })\n              } else {\n                room.setGlobalState({\n                  sceneMap: newSceneMap\n                })\n              }\n            }\n          }} />\n        </span>\n      </Tooltip>\n      <div className={`cover-item ${props.coverType}`}\n        onClick={() => {\n          props.handleClick(props.item.rootPath);\n        }}\n      ></div>\n      <span>\n        <Input className=\"title\"\n          onChange={onChange}\n          defaultValue={props.name}\n        />\n      </span>\n    </div>\n  </>\n  )\n}\n\nexport const ResourcesMenu: React.FC<ResourceMenuProps> = (\n  {\n    onClose,\n    items,\n    activeScenePath,\n    onClick\n  }\n) => {\n  return (\n    <div className=\"resource-menu-container\">\n      <div className=\"menu-header\">\n      <div className=\"menu-title\">{t('doc_center')}</div>\n        <div className=\"menu-close\" onClick={onClose}></div>\n      </div>\n      <div className=\"menu-body\">\n        <div className=\"menu-items\">\n          {items.map((item: any, key: number) => (\n            <ResourceItem\n              activeClass={activeScenePath === item.path ? 'active' : ''}\n              coverType={item.file.type.match(/ppt/) ? 'ppt-cover' : 'doc-cover'}\n              item={item}\n              name={item.file.name}\n              key={key+item.path+item.file.name}\n              handleClick={onClick}\n            ></ResourceItem>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { Tooltip } from '@material-ui/core';\nimport {t} from '@/i18n';\nimport {roomStore} from '@/stores/room';\n\nexport type ScaleControllerProps = {\n  zoomScale: number\n  zoomChange: (scale: number) => void\n  onClick: () => void\n  onClickBoardLock: () => void\n};\n\nexport default class ScaleController extends React.Component<ScaleControllerProps, {}> {\n\n  private static readonly syncDuration: number = 200;\n\n  private static readonly dividingRule: ReadonlyArray<number> = Object.freeze(\n      [\n          0.10737418240000011,\n          0.13421772800000012,\n          0.16777216000000014,\n          0.20971520000000016,\n          0.26214400000000015,\n          0.3276800000000002,\n          0.4096000000000002,\n          0.5120000000000001,\n          0.6400000000000001,\n          0.8,\n          1,\n          1.26,\n          1.5876000000000001,\n          2.000376,\n          2.5204737600000002,\n          3.1757969376000004,\n          4.001504141376,\n          5.041895218133761,\n          6.352787974848539,\n          8.00451284830916,\n          10,\n      ],\n  );\n\n  private tempRuleIndex?: number;\n  private syncRuleIndexTimer: any = null;\n\n  public constructor(props: ScaleControllerProps) {\n      super(props);\n  }\n\n  private delaySyncRuleIndex(): void {\n      if (this.syncRuleIndexTimer !== null) {\n          clearTimeout(this.syncRuleIndexTimer);\n          this.syncRuleIndexTimer = null;\n      }\n      this.syncRuleIndexTimer = setTimeout(() => {\n          this.syncRuleIndexTimer = null;\n          this.tempRuleIndex = undefined;\n\n      }, ScaleController.syncDuration);\n  }\n\n  private static readRuleIndexByScale(scale: number): number {\n      const {dividingRule} = ScaleController;\n\n      if (scale < dividingRule[0]) {\n          return 0;\n      }\n      for (let i = 0; i < dividingRule.length; ++i) {\n          const prePoint = dividingRule[i - 1];\n          const point = dividingRule[i];\n          const nextPoint = dividingRule[i + 1];\n\n          const begin = prePoint === undefined ? Number.MIN_SAFE_INTEGER : (prePoint + point) / 2;\n          const end = nextPoint === undefined ? Number.MAX_SAFE_INTEGER : (nextPoint + point) / 2;\n\n          if (scale >= begin && scale <= end) {\n              return i;\n          }\n      }\n      return dividingRule.length - 1;\n  }\n\n  private moveTo100(): void {\n      this.tempRuleIndex = ScaleController.readRuleIndexByScale(1);\n      this.delaySyncRuleIndex();\n      this.props.zoomChange(1);\n  }\n\n\n  private moveRuleIndex(deltaIndex: number): void {\n\n      if (this.tempRuleIndex === undefined) {\n          this.tempRuleIndex = ScaleController.readRuleIndexByScale(this.props.zoomScale);\n      }\n      this.tempRuleIndex += deltaIndex;\n\n      if (this.tempRuleIndex > ScaleController.dividingRule.length - 1) {\n          this.tempRuleIndex = ScaleController.dividingRule.length - 1;\n\n      } else if (this.tempRuleIndex < 0) {\n          this.tempRuleIndex = 0;\n      }\n      const targetScale = ScaleController.dividingRule[this.tempRuleIndex];\n\n      this.delaySyncRuleIndex();\n      this.props.zoomChange(targetScale);\n  }\n\n  public render(): React.ReactNode {\n      return (\n        <div className=\"zoom-controls\">\n          <Tooltip title={t(\"zoom_control.folder\")} placement=\"top\">\n            <div className=\"zoom-icon\" onClick={() => this.props.onClick()}>\n            </div>\n          </Tooltip>\n          <div className=\"zoom-hold\"></div>\n          <div className=\"zoom-size\">{Math.ceil(this.props.zoomScale * 100)} %</div>\n          <div className=\"zoom-items\">\n            <div className=\"item zoom-in\" onClick={() => this.moveRuleIndex(-1)}>-</div>\n            <div className=\"item zoom-out\" onClick={() => this.moveRuleIndex(+1)}>+</div>\n          </div>\n          <Tooltip title={!roomStore.state.course.lockBoard ? t(\"zoom_control.lock_board\") : t(\"zoom_control.unlock_board\")} placement=\"top\">\n            <div className=\"lock-board\" onClick={() => this.props.onClickBoardLock() }></div>\n          </Tooltip>\n        </div>\n      );\n  }\n}","import React, { useRef, useEffect, useState } from 'react';\n\nimport './upload-notice.scss';\nimport { useGlobalState } from '@/containers/root-container';\n\ntype UploadNoticeProps = {\n  title: string\n  type: string\n}\n\nconst UploadNotice: React.FC<UploadNoticeProps> = ({\n  type,\n  title\n}) => {\n  return (\n    <div className={`notice-container ${type}`}>\n      <span className={`icon-${type}`}></span>\n      <span className=\"title\">{title}</span>\n    </div>\n  )\n}\n\nexport interface NoticeMessage {\n  title: string\n  key?: number\n  type: string\n}\n\ntype NoticeContext = {\n  state: NoticeMessage\n  Notice: (state: NoticeMessage) => any\n}\n\nconst UploadNoticeContext = React.createContext({} as NoticeContext);\n\nexport const useUploadNotice = () => React.useContext(UploadNoticeContext);\n\nconst duration = 2500;\n\nexport const UploadNoticeContainer: React.FC<{}> = () => {\n\n  const globalState = useGlobalState();\n\n  const uploadNotice = globalState.uploadNotice;\n\n  const queueRef = React.useRef<NoticeMessage[]>([]);\n  const [messages, setMessages] = useState<NoticeMessage[]>([]);\n  const timerRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (messages.length > 0 && timerRef.current === null) {\n      timerRef.current = setTimeout(() => {\n        queueRef.current.shift()\n        setMessages([...queueRef.current]);\n        timerRef.current = null;\n      }, duration);\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    if (!uploadNotice.title || !uploadNotice.type) return;\n    if (queueRef.current) {\n      queueRef.current.push({\n        ...uploadNotice,\n        key: +Date.now()\n      })\n      setMessages([...queueRef.current]);\n    }\n  }, [uploadNotice]);\n\n  return (\n    <div className=\"upload-notice\">\n      {messages.map((it: any, idx: number) => \n        <UploadNotice key={`${idx}${it.key}`}\n          type={it.type}\n          title={it.title}\n        />\n      )}\n    </div>\n  )\n}\n\nexport const UploadNoticeView = React.memo(UploadNoticeContainer);","import React, { useMemo, useEffect, useState, useRef, useCallback } from 'react';\nimport Whiteboard from './whiteboard';\nimport VideoPlayer from '../components/video-player';\nimport Control from './whiteboard/control';\nimport { AgoraStream } from '../utils/types';\nimport useStream from '../hooks/use-streams';\nimport { useLocation } from 'react-router';\nimport Tools from './whiteboard/tools';\nimport { SketchPicker, RGBColor } from 'react-color';\nimport { AgoraElectronClient } from '../utils/agora-electron-client';\nimport { UploadBtn } from './whiteboard/upload/upload-btn';\nimport { ResourcesMenu } from './whiteboard/resources-menu';\nimport ScaleController from './whiteboard/scale-controller';\nimport { PPTProgressPhase } from '../utils/upload-manager';\nimport { UploadNoticeView } from '../components/whiteboard/upload/upload-notice';\nimport Progress from '../components/progress/progress';\nimport { useRoomState, useWhiteboardState, useGlobalState } from '../containers/root-container';\nimport { roomStore } from '../stores/room';\nimport { whiteboard } from '../stores/whiteboard';\nimport { globalStore } from '../stores/global';\nimport { platform } from '../utils/platform';\nimport \"white-web-sdk/style/index.css\";\nimport { ViewMode } from 'white-web-sdk';\nimport { t } from '../i18n';\nimport { Collapse, Paper} from '@material-ui/core';\n\nconst pathName = (path: string): string => {\n  const reg = /\\/([^/]*)\\//g;\n  reg.exec(path);\n  if (RegExp.$1 === \"aria\") {\n      return \"\";\n  } else {\n      return RegExp.$1;\n  }\n}\n\ninterface MediaBoardProps {\n  handleClick?: (type: string) => void\n  children?: any\n}\n\nconst MediaBoard: React.FC<MediaBoardProps> = ({\n  handleClick,\n  children\n}) => {\n\n  const location = useLocation()\n\n  const roomState = useRoomState();\n\n  const whiteboardState = useWhiteboardState();\n  \n  const role = roomState.me.role;\n  const room = whiteboardState.room;\n  const me = roomState.me;\n  const course = roomState.course;\n  const rtmState = roomState.rtm;\n  \n  const ref = useRef<any>(false);\n\n  const [pageTool, setPageTool] = useState<string>('');\n\n  const {sharedStream} = useStream();\n\n  const handlePageTool: any = (evt: any, type: string) => {\n    setPageTool(type);\n    console.log(\"[page-tool] click \", type);\n    if (type === 'first_page') {\n      changePage(1, true);\n    }\n\n    if (type === 'last_page') {\n      changePage(totalPage, true);\n    }\n\n    if (type === 'prev_page') {\n      changePage(currentPage-1);\n    }\n\n    if (type === 'next_page') {\n      changePage(currentPage+1);\n    }\n\n    if (type === 'peer_hands_up') {\n      globalStore.showDialog({\n        type: 'apply',\n        message: `${globalStore.state.notice.text}`,\n      })\n      setPageTool('');\n    }\n\n    if (handleClick) {\n      handleClick(type);\n    }\n  }\n\n  const studentIsHost = useMemo(() => {\n    if (\n      location.pathname.match(/big-class/) \n      && me.role === 2 && me.coVideo) {\n      return true\n    }\n    return false\n  }, [me.role, me.coVideo, location])\n\n  \n  const current = useMemo(() => {\n    return {\n      totalPage: whiteboardState.totalPage,\n      currentPage: whiteboardState.currentPage,\n      type: whiteboardState.type\n    }\n  }, [whiteboardState.currentPage, whiteboardState.totalPage, whiteboardState.type]);\n\n  const totalPage = useMemo(() => {\n    if (!current) return 0;\n    return current.totalPage;\n  }, [current]);\n\n  const currentPage = useMemo(() => {\n    if (!current) return 0;\n    return current.currentPage + 1;\n  }, [current]);\n\n  const addNewPage: any = (evt: any) => {\n    if (!current || !room) return;\n    // const newIndex = netlessClient.state.sceneState.scenes.length;\n    const newIndex = room.state.sceneState.index + 1;\n    const scenePath = room.state.sceneState.scenePath;\n    const currentPath = `/${pathName(scenePath)}`;\n    if (room.isWritable) {\n      room.putScenes(currentPath, [{}], newIndex);\n      room.setSceneIndex(newIndex);\n    }\n\n    whiteboard.updateRoomState();\n  }\n\n  const changePage = (idx: number, force?: boolean) => {\n    if (ref.current || !current || !room || !room.isWritable) return;\n    const _idx = idx -1;\n    if (_idx < 0 || _idx >= current.totalPage) return;\n    if (force) {\n      room.setSceneIndex(_idx);\n      whiteboard.updateRoomState();\n      return\n    }\n    if (current.type === 'dynamic') {\n      if (_idx > current.currentPage) {\n        room.pptNextStep();\n        console.log(\"room.pptNextStep\");\n      } else {\n        room.pptPreviousStep();\n        console.log(\"room.pptPreviousStep\");\n      }\n    } else {\n      room.setSceneIndex(_idx);\n      console.log(\"room.setSceneIndex\", _idx);\n    }\n    whiteboard.updateRoomState();\n  }\n\n  const showControl: boolean = useMemo(() => {\n    if (+me.role === 1) return true;\n    if (location.pathname.match(/big-class/)) {\n      if (+me.role === 2) {\n        return true;\n      }\n    }\n    return false;\n  }, []);\n\nconst items = [\n  {\n    name: 'selector'\n  },\n  {\n    name: 'pencil'\n  },\n  {\n    name: 'rectangle',\n  },\n  {\n    name: 'ellipse'\n  },\n  {\n    name: 'text'\n  },\n  {\n    name: 'eraser'\n  },\n  {\n    name: 'color_picker'\n  },\n  {\n    name: 'add'\n  },\n  {\n    name: 'upload'\n  },\n  {\n    name: 'hand_tool'\n  }\n];\n\n  const toolItems = useMemo(() => {\n    return items.filter((item: any) => {\n      if (+role === 1) return item;\n      if (['add', 'folder', 'upload'].indexOf(item.name) === -1) {\n        if (item.name === 'hand_tool') {\n          if (course.lockBoard) {\n            return false;\n          } else {\n            return true;\n          }\n        }\n        return item;\n      }\n    });\n  }, [course.lockBoard]);\n\n  const drawable: string = useMemo(() => {\n    if (location.pathname.match('small-class|big-class')) {\n      if (+me.role === 1) {\n        return 'drawable';\n      }\n      if (+me.role === 2) {\n        if (Boolean(me.grantBoard)) {\n          return 'drawable';\n        } else {\n          return 'panel';\n        }\n      }\n    }\n    return 'drawable';\n  }, [me.role, me.grantBoard, location]);\n\n  const [tool, setTool] = useState<string | any>(drawable === 'drawable' ? 'pencil' : '');\n  \n  const [selector, updateSelector] = useState<string>('');\n\n  const handleToolClick = (evt: any, name: string) => {\n    if (!room || !room.isWritable) return;\n    if (['upload', 'color_picker', 'hand_tool'].indexOf(name) !== -1 && name === tool) {\n      setTool('');\n      if (name === 'hand_tool') {\n        room.handToolActive = false;\n        updateSelector('');\n      }\n      return;\n    }\n    if (name !== 'hand_tool') {\n      room.handToolActive = false;\n      updateSelector('');\n    }\n    setTool(name);\n    if (name === 'upload'\n      || name === 'folder'\n      || name === 'color_picker'\n      || name === 'add'\n      || name === 'hand_tool'\n    ) {\n      if (name === 'hand_tool') {\n        room.handToolActive = true;\n        updateSelector('hand');\n        room.setMemberState({currentApplianceName: 'selector'});\n      } else {\n        if (name === 'add' && addNewPage) {\n          addNewPage();\n        }\n      }\n      return;\n    }\n    room.setMemberState({currentApplianceName: name});\n  }\n\n  const onColorChanged = (color: any) => {\n    if (!room || !room.isWritable) return;\n    const {rgb} = color;\n    const {r, g, b} = rgb;\n    room.setMemberState({\n      strokeColor: [r, g, b]\n    });\n  }\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      lock.current = true;\n      whiteboard.destroy()\n      .then(() => {\n        console.log(\"destroy whiteboard\");\n      }).catch(console.warn);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!rtmState.joined) return;\n    if (!lock.current && !whiteboard.state.room) {\n      lock.current = true;\n      whiteboard.join({\n        rid: roomStore.state.course.rid,\n        uuid: course.boardId,\n        roomToken: course.boardToken,\n        location: location.pathname,\n        userPayload: {\n          userId: roomStore.state.me.uid,\n          identity: +roomStore.state.me.role === 1 ? 'host' : 'guest'\n        }\n      })\n      .then(() => {\n        console.log(\"join whiteboard success\");\n      }).catch((err: any) => {\n        console.warn(err)\n      })\n      .finally(() => {\n        lock.current = false;\n      })\n    }\n\n  }, [JSON.stringify([rtmState.joined, course.boardId, course.boardToken])]);\n\n  const [uploadPhase, updateUploadPhase] = useState<string>('');\n  const [convertPhase, updateConvertPhase] = useState<string>('');\n\n  useEffect(() => {\n    console.log(\"uploading [mediaboard] uploadPhase: \", uploadPhase, \" convertPhase: \", convertPhase);\n  }, [uploadPhase, convertPhase]);\n\n  const UploadPanel = useCallback(() => {\n    if (tool !== 'upload' || !room) return null;\n    return (<UploadBtn \n      room={room}\n      uuid={room.uuid}\n      roomToken={room.roomToken}\n      didUpload={() => {\n        setTool('')\n      }}\n      onProgress={(phase: PPTProgressPhase, percent: number) => {\n        console.log(\"uploading [onProgress] phase: \", phase, \" percent: \", percent, \"uploadPhase: \", uploadPhase, \"convertPhase: \", convertPhase);\n        if (phase === PPTProgressPhase.Uploading) {\n          if (percent < 1) {\n            uploadPhase !== 'uploading' && updateUploadPhase('uploading');\n          } else {\n            updateUploadPhase('upload_success');\n          }\n          return;\n        }\n\n        if (phase === PPTProgressPhase.Converting) {\n          if (percent < 1) {\n            convertPhase !== 'converting' && updateConvertPhase('converting');\n          } else {\n            updateConvertPhase('convert_success');\n          }\n          return;\n        }\n      }}\n      onSuccess={() => {\n        uploadPhase && updateUploadPhase('');\n        updateConvertPhase && updateConvertPhase('');\n        console.log(\"uploading [onSuccess]\", uploadPhase, convertPhase);\n      }}\n      onFailure={(err: any) => {\n        // WARN: capture exception\n        if (uploadPhase === 'uploading') {\n          updateUploadPhase('upload_failure');\n          return;\n        }\n        if (convertPhase === 'converting') {\n          updateConvertPhase('convert_failure');\n          return;\n        }\n      }}\n    />)\n  }, [tool, room]);\n\n  useEffect(() => {\n    if (uploadPhase === 'upload_success') {\n      globalStore.showUploadNotice({\n        title: t('room.upload_success'),\n        type: 'ok',\n      });\n    }\n    if (uploadPhase === 'convert_failure') {\n      globalStore.showUploadNotice({\n        title: t('room.upload_failure'),\n        type: 'error',\n      });\n    }\n  }, [uploadPhase]);\n\n  useEffect(() => {\n    if (convertPhase === 'convert_success') {\n      globalStore.showUploadNotice({\n        title: t('room.convert_success'),\n        type: 'ok',\n      });\n    }\n    if (convertPhase === 'convert_failure') {\n      globalStore.showUploadNotice({\n        title: t('room.convert_failure'),\n        type: 'error',\n      });\n    }\n  }, [convertPhase]);\n\n  useMemo(() => {\n    if (+roomState.me.role === 2 && +roomState.course.lockBoard === 1) {\n      globalStore.showToast({\n        type: \"whiteboard\",\n        message: t(\"whiteboard.locked_board\")\n      })\n    }\n  }, [roomState.course.lockBoard, roomState.me.role])\n\n  useEffect(() => {\n    if (!me.role || !room) return;\n    if (+me.role === 1) {\n      if (roomStore.state.course.lockBoard) {\n        room.setViewMode(ViewMode.Broadcaster);\n      } else {\n        room.setViewMode(ViewMode.Freedom);\n      }\n    }\n    if (+me.role === 2) {\n      if (roomStore.state.course.lockBoard) {\n        room.handToolActive = false;\n        room.disableCameraTransform = true;\n        room.disableDeviceInputs = true;\n      } else {\n        room.disableCameraTransform = false;\n        room.disableDeviceInputs = false;\n      }\n    }\n  }, [room, roomStore.state.course.lockBoard, roomStore.state.me.role]);\n\n  const globalState = useGlobalState();\n\n  const scale = whiteboardState.scale ? whiteboardState.scale : 1;\n\n  const UploadProgressView = useCallback(() => {\n    if (uploadPhase === 'uploading') {\n      return (\n        <Progress title={t(\"room.uploading\")} />\n      )\n    } else \n    if (convertPhase === 'converting') {\n      return (\n        <Progress title={t(\"room.converting\")} />\n      )\n    }\n    return null;\n  }, [uploadPhase, convertPhase]);\n\n  let strokeColor: RGBColor | undefined = undefined;\n\n  if (whiteboardState.room && whiteboardState.room.state.memberState.strokeColor) {\n    const color = whiteboardState.room.state.memberState.strokeColor;\n    strokeColor = {\n      r: color[0],\n      g: color[1],\n      b: color[2],\n    }\n  }\n\n  // useEffect(() => {\n  //   if (!room) return;\n  //   if (drawable === 'panel') {\n  //     room.disableDeviceInputs = true;\n  //     room.disableCameraTransform = true;\n  //     return;\n  //   }\n  //   room.disableDeviceInputs = false;\n  //   room.disableCameraTransform = false;\n  // }, [drawable, room]);\n\n  const showTools = drawable === 'drawable';\n  \n  return (\n    <div className={`media-board ${drawable}`}>\n      {sharedStream ? \n        <VideoPlayer\n          id={`${sharedStream.streamID}`}\n          domId={`shared-${sharedStream.streamID}`}\n          className={'screen-sharing'}\n          streamID={sharedStream.streamID}\n          stream={sharedStream.stream}\n          video={true}\n          audio={true}\n          local={sharedStream.local}\n        />\n        :\n        <Whiteboard\n          loading={whiteboardState.loading}\n          className={selector}\n          room={room}\n        />\n      }\n      <div className=\"layer\">\n        {!sharedStream ? \n        <>\n          {showTools ? <Tools\n          items={toolItems}\n          currentTool={tool}\n          handleToolClick={handleToolClick} /> : null}\n          {tool === 'color_picker' && strokeColor ?\n            <SketchPicker\n              color={strokeColor}\n              onChangeComplete={onColorChanged} />\n          : null}\n        </> : null}\n        <UploadPanel />\n        {children ? children : null}\n      </div>\n      {me.role === 1 && room ?\n        <ScaleController\n          zoomScale={scale}\n          onClick={() => {\n            setTool('folder');\n          }}\n          onClickBoardLock={() => {\n            whiteboard.lock()\n              .then(console.log)\n              .catch(console.warn);\n          }}\n          zoomChange={(scale: number) => {\n            room.moveCamera({scale});\n            whiteboard.updateScale(scale);\n          }}\n        />\n        :\n        null\n      }\n      { showControl ?\n      <Control\n        notice={globalState.notice}\n        role={role}\n        sharing={Boolean(sharedStream)}\n        current={pageTool}\n        currentPage={currentPage}\n        totalPage={totalPage}\n        isHost={studentIsHost}\n        onClick={handlePageTool}/> : null }\n        {tool === 'folder' && whiteboardState.room ? \n        <ResourcesMenu\n          activeScenePath={whiteboardState.currentScenePath}\n          items={whiteboardState.dirs}\n          onClick={(rootPath: string) => {\n            if (room) {\n              room.setScenePath(rootPath);\n              room.setSceneIndex(0);\n              whiteboard.updateRoomState();\n            }\n          }}\n          onClose={(evt: any) => {\n            setTool('')\n          }}\n        />\n        : null}\n      <UploadNoticeView />\n      <UploadProgressView />\n    </div>\n  )\n} \n\nexport default React.memo(MediaBoard);","import React, { useRef, useEffect } from 'react';\nimport {Message} from './message';\nimport { Input } from '@material-ui/core';\nimport Button from '../custom-button';\nimport './panel.scss';\nimport { List } from 'immutable';\nimport { ChatMessage } from '@/utils/types';\nimport { useRoomState } from '@/containers/root-container';\nimport useChatControl from '@/hooks/use-chat-control';\nimport { t } from '@/i18n';\n\ninterface ChatPanelProps {\n  messages: List<ChatMessage>\n  value: string\n  sendMessage: (evt: any) => void\n  handleChange: (evt: any) => void\n}\n\nconst regexPattern = /^\\s+/;\n\nconst truncateBlank: (m: string) => string = (message: string) => message.replace(regexPattern, '');\n\nexport default function ChatPanel ({\n  messages,\n  value,\n  sendMessage,\n  handleChange,\n}: ChatPanelProps) {\n  \n  const {handleMute, disableChat, muteControl, muteChat} = useChatControl();\n\n  const ref = useRef(null);\n\n  const scrollDown = (current: any) => {\n    current.scrollTop = current.scrollHeight;\n  }\n\n  useEffect(() => {\n    scrollDown(ref.current);\n  }, [messages]);\n\n  const roomState = useRoomState();\n\n  return (\n    <>\n      <div className=\"chat-messages-container\">\n        <div className=\"chat-messages\" ref={ref}>\n          {messages.map((item: ChatMessage, key: number) => (\n            <Message key={key} nickname={item.account} content={item.text} link={item.link} sender={item.id === roomState.me.uid} />\n          ))}\n        </div>   \n      </div>\n      <div className=\"message-panel\">\n        {muteControl ?\n          <div className={`icon ${muteChat ? 'icon-chat-off' : 'icon-chat-on' }`}\n            onClick={() => {\n              handleMute(muteChat ? 'unmute' : 'mute')\n            }}></div> : null}\n        <Input\n          disabled={disableChat}\n          value={value}\n          placeholder={disableChat ? t(\"chat.banned\") : t(\"chat.placeholder\")}\n          disableUnderline\n          className={\"message-input\"}\n          onKeyPress={async (evt: any) => {\n            if (evt.key === 'Enter') {\n              const val = truncateBlank(value)\n              val.length > 0 && await sendMessage(val);\n            }\n          }}\n          onChange={handleChange}/>\n        <Button className={'chat-panel-btn'} name={t(\"chat.send\")}\n          onClick={async (evt: any) => {\n            const val = truncateBlank(value)\n            val.length > 0 && await sendMessage(val);\n          }} />\n      </div>\n    </>\n  )\n}","import { roomStore } from '@/stores/room';\nimport {useEffect, useRef, useMemo} from 'react';\n\nexport default function useChatControl () {\n\n  const lock = useRef<boolean>(false);\n\n  useEffect(() => {\n    lock.current = false;\n    return () => {\n      lock.current = true;\n    }\n  }, []);\n\n  const me = roomStore.state.me;\n  const course = roomStore.state.course;\n\n  const muteControl = me.role === 1;\n\n  const muteChat = Boolean(course.muteChat);\n\n  const chat =  Boolean(me.chat);\n\n  const disableChat: boolean = useMemo(() => {\n    if (+me.role === 2 && (muteChat || !chat)) return true;\n    return false;\n  }, [muteChat, chat, me.role]);\n\n  return {\n    chat,\n    disableChat,\n    muteControl,\n    muteChat,\n    handleMute (type: string) {\n      if (!lock.current) {\n        lock.current = true;\n        roomStore.updateCourse({\n          muteChat: type === 'mute' ? 1 : 0\n        }).then(() => {\n          console.log(\"update success\");\n        }).catch(console.warn)\n        .finally(() => {\n          lock.current = false;\n        })\n      }\n\n    }\n  }\n}","import React, {useRef } from 'react';\nimport './student-list.scss';\nimport Icon from './icon';\nimport { useRoomState } from '../containers/root-container';\nimport {roomStore, AgoraUser} from '../stores/room';\nimport { get } from 'lodash';\n\ninterface CustomIconProps {\n  value: boolean\n  type: string\n  icon: string\n  id: string\n  onClick: (evt: any, id: string, type: string) => any\n}\n\nfunction CustomIcon ({\n  value,\n  icon,\n  id,\n  type,\n  onClick\n}: CustomIconProps) {\n  const handleClick = (evt: any) => {\n    onClick(evt, id, type);\n  }\n  return (\n    <div className=\"items\">\n        {/* {value ? */}\n          <Icon className={`icon-${icon}-${value ? \"on\" : \"off\"}`}\n            onClick={handleClick}\n            />\n             {/* : null } */}\n    </div>\n  )\n}\n\ninterface UserProps {\n  uid: string\n  account: string\n  video: number\n  audio: number\n  chat: number\n}\n\ninterface StudentListProps {\n  list: AgoraUser[]\n  role: number\n}\n\nexport default function StudentList ({\n  list,\n  role\n}: StudentListProps) {\n\n  const state = useRoomState();\n\n  const me = state.me;\n\n  const lock = useRef<any>(false);\n\n  const handleClick = (evt: any, id: string, type: string) => {\n    if (!roomStore.state || !me) return;\n    const targetUser = roomStore.state.users.get(`${id}`);\n    if (!targetUser) return;\n    if (!lock.current) {\n      const val = Boolean(get(targetUser, type));\n      lock.current = true;\n      if (val) {\n        roomStore.mute(targetUser.uid, type)\n        .then(() => {\n        }).catch(console.warn)\n        .finally(() => {\n          lock.current = false;\n        });\n      } else {\n        roomStore.unmute(targetUser.uid, type)\n        .then(() => {\n        }).catch(console.warn)\n        .finally(() => {\n          lock.current = false;\n        });\n      }\n    }\n  }\n\n  return (\n    <div className=\"student-list\">\n      {list.map((item: AgoraUser, key: number) => (\n        <div key={key} className=\"item\">\n          <div className=\"nickname\">{item.account}</div>\n          <div className=\"attrs-group\">\n            <CustomIcon type=\"grantBoard\" id={item.uid} value={Boolean(item.grantBoard)} icon=\"connect\" onClick={handleClick} />\n            <CustomIcon type=\"chat\" id={item.uid} value={Boolean(item.chat)} icon=\"chat\" onClick={handleClick} />\n            <CustomIcon type=\"audio\" id={item.uid} value={Boolean(item.audio)} icon=\"audio\" onClick={handleClick} />\n            <CustomIcon type=\"video\" id={item.uid} value={Boolean(item.video)} icon=\"video\" onClick={handleClick} />\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}","import { useState, useMemo } from 'react';\nimport { useRoomState } from '../containers/root-container';\nimport { roomStore, AgoraUser } from '../stores/room';\n\nexport default function useChatText () {\n  const [value, setValue] = useState('');\n\n  const roomState = useRoomState();\n\n  const roomName = roomState.course.roomName;\n\n  const me = roomState.me;\n\n  const role = me.role;\n\n  const messages = useMemo(() => {\n    return roomState.messages;\n  }, [roomState.messages]);\n\n  const rtmClient = roomStore.rtmClient;\n\n  const sendMessage = async (content: string) => {\n    if (rtmClient &&  me.uid) {\n      if (me.role !== 1 && (!me.chat || Boolean(roomState.course.muteChat))) return console.warn(\"chat already muted\");\n      if (me.role === 1 && !me.chat) return console.warn(\"chat already muted\");\n      await roomStore.sendChannelMessage({\n        message: content,\n      });\n      const message = {\n        account: me.account,\n        id: me.uid,\n        text: content,\n        ts: +Date.now()\n      }\n      roomStore.updateChannelMessage(message);\n      setValue('');\n    }\n  }\n\n  const handleChange = (evt: any) => {\n    setValue(evt.target.value.slice(0, 100));\n  }\n  const list = useMemo(() => {\n    if (!roomState.me.uid || !roomState.rtc.users.count() && !roomState.rtc.localStream) return [];\n    const my = roomState.users.get(roomState.me.uid);\n    const users = [];\n    if (my) {\n      users.push(my);\n    }\n    for (let id of roomState.rtc.users) {\n      const user = roomState.users.get(''+id);\n      if (user) {\n        users.push(user);\n      }\n    }\n    return users.filter((user: AgoraUser) => +user.role === 2);\n  }, [roomState.me.uid, roomState.rtc.users, roomState.users, roomState.rtc.localStream]);\n\n  return {\n    list,\n    role,\n    messages,\n    sendMessage,\n    value,\n    handleChange,\n    roomName\n  }\n}","import React, {useState} from 'react';\nimport ChatPanel from './chat/panel';\nimport StudentList from './student-list';\nimport useChatText from '../hooks/use-chat-text';\nimport { t } from '../i18n';\nimport { useGlobalState } from '../containers/root-container';\nimport { globalStore } from '../stores/global';\n\nexport default function Roomboard (props: any) {\n  const {\n    role, list, value,\n    messages, sendMessage, handleChange\n  } = useChatText();\n\n  const {active} = useGlobalState();\n\n  const [visible, setVisible] = useState(true);\n\n  const toggleCollapse = (evt: any) => {\n    setVisible(!visible);\n  }\n\n  const count = active !== 'chatroom' ? globalStore.state.newMessageCount : 0;\n\n  return (\n    <>\n    <div className={`${visible ? \"icon-collapse-off\" : \"icon-collapse-on\" } fixed`} onClick={toggleCollapse}></div>\n    {visible ? \n    <div className={`small-class chat-board`}>\n      <div className=\"menu\">\n        <div onClick={() => { globalStore.setActive('chatroom') }} className={`item ${active === 'chatroom' ? 'active' : ''}`}>\n          {t('room.chat_room')}\n          {active !== 'chatroom' && count > 0 ? <span className={`message-count ${globalStore.state.language}`}>{count}</span> : null}\n        </div>\n        <div onClick={() => { globalStore.setActive('studentList') }} className={`item ${active === 'studentList' ? 'active' : ''}`}>{t('room.student_list')}</div>\n      </div>\n      <div className={`chat-container ${active === 'chatroom' ? '' : 'hide'}`}>\n        <ChatPanel\n          messages={messages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n      <div className={`student-container ${active !== 'chatroom' ? '' : 'hide'}`}>\n        <StudentList\n          role={role}\n          list={list}\n        />\n      </div>\n    </div>\n    : null}\n    </>\n  )\n}","import React from 'react';\nimport VideoMarquee from '@/components/video-marquee';\nimport MediaBoard from '@/components/mediaboard';\nimport Roomboard from '@/components/roomboard';\nimport './small-class.scss';\n\nexport default function SmallClass() {\n  return (\n    <div className=\"room-container\">\n      <VideoMarquee />\n      <div className=\"container\">\n        <MediaBoard />\n        <Roomboard currentActive={'media'} />\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport ChatPanel from './panel';\nimport { ChatMessage } from '@/utils/types';\nimport { List } from 'immutable';\n\ninterface ChatBoard {\n  name?: string\n  messages: List<ChatMessage>\n  value: string\n  teacher?: boolean\n  mute?: boolean\n  roomCount?: number\n  sendMessage: (evt: any) => void\n  handleChange: (evt: any) => void\n}\n\nexport default function ChatBoard (props: ChatBoard) {\n  return (\n    <div className=\"chat-board\">\n      {props.name ? <div className=\"chat-roomname\">{props.name}{props.roomCount ? `(${props.roomCount})` : null }</div> : null}\n        <ChatPanel\n          messages={props.messages}\n          value={props.value}\n          sendMessage={props.sendMessage}\n          handleChange={props.handleChange} />\n    </div>\n  )\n}","import React from 'react';\nimport VideoPlayer from '@/components/video-player';\nimport MediaBoard from '@/components/mediaboard';\nimport ChatBoard from '@/components/chat/board';\nimport useStream from '@/hooks/use-streams';\nimport useChatText from '@/hooks/use-chat-text';\n\nexport default function OneToOne() {\n  const {\n    value,\n    messages,\n    sendMessage,\n    handleChange,    \n  } = useChatText();\n\n  const {teacher, students, onPlayerClick} = useStream();\n\n  return (\n    <div className=\"room-container\">\n      <MediaBoard />\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n          {teacher ?\n            <VideoPlayer\n              role=\"teacher\"\n              streamID={teacher.streamID}\n              stream={teacher.stream}\n              domId={`${teacher.streamID}`}\n              id={`${teacher.streamID}`}\n              account={teacher.account}\n              handleClick={onPlayerClick}\n              video={teacher.video}\n              audio={teacher.audio}\n              local={teacher.local}\n              autoplay={true}\n              /> :\n            <VideoPlayer\n              role=\"teacher\"\n              account={'teacher'}\n              domId={'teacher'}\n              streamID={0}\n              video\n              audio\n              />}\n          {students[0] ?\n            <VideoPlayer\n              role=\"student\"\n              streamID={students[0].streamID}\n              stream={students[0].stream}\n              domId={`${students[0].streamID}`}\n              id={`${students[0].streamID}`}\n              handleClick={onPlayerClick}\n              account={students[0].account}\n              video={students[0].video}\n              audio={students[0].audio}\n              local={students[0].local}\n              autoplay={true}\n            /> :\n            <VideoPlayer\n              role=\"student\"\n              account={\"student\"}\n              domId={\"student\"}\n              streamID={0}\n              video={false}\n              audio={false}\n            />}\n        </div>\n        <ChatBoard\n          messages={messages}\n          value={value}\n          sendMessage={sendMessage}\n          handleChange={handleChange}\n        />\n      </div>\n    </div>\n  )\n}","import React, {useRef, useEffect} from 'react';\nimport VideoPlayer from '@/components/video-player';\n\nimport './big-class.scss';\nimport ChatBoard from '@/components/chat/board';\nimport MediaBoard from '@/components/mediaboard';\nimport useStream from '@/hooks/use-streams';\nimport useChatText from '@/hooks/use-chat-text';\nimport { AgoraElectronClient } from '@/utils/agora-electron-client';\nimport {AgoraWebClient} from '@/utils/agora-web-client';\nimport { useRoomState } from '@/containers/root-container';\nimport { roomStore } from '@/stores/room';\nimport { platform } from '@/utils/platform';\nimport { eduApi } from '@/services/edu-api';\nimport { globalStore } from '@/stores/global';\nimport { t } from '@/i18n';\n\nexport default function BigClass() {\n  const {\n    value,\n    messages,\n    sendMessage,\n    handleChange,\n    role,\n    roomName\n  } = useChatText();\n\n  const roomState = useRoomState();\n\n  const me = roomState.me;\n\n  const memberCount = roomState.course.memberCount;\n\n  const {teacher, currentHost, onPlayerClick} = useStream();\n\n  const rtmLock = useRef<boolean>(false);\n  const lock = useRef<boolean>(false);\n  \n  useEffect(() => {\n    rtmLock.current = false;\n    return () => {\n      rtmLock.current = true;\n      lock.current = true;\n    }\n  }, []);\n\n  const handleClick = (type: string) => {\n    if (rtmLock.current) return;\n\n    if (type === 'hands_up') {\n      if (roomStore.state.course.teacherId) {\n        eduApi.studentSendApply(roomStore.state.course.roomId)\n          .then((data: any) => {\n            console.log('hands_up fulfilled', data)\n          })\n          .catch((err: any) => {\n            console.warn(err)\n          })\n      }\n    }\n  \n    if (type === 'hands_up_end') {\n      rtmLock.current = true;\n      eduApi.studentStopCoVideo(roomStore.state.course.roomId)\n        .then((data: any) => {\n          console.log('hands_up_end success', data)\n        })\n        .catch((err: any) => {\n          console.warn(err)\n        })\n        .finally(() => {\n          rtmLock.current = false;\n        })\n    }\n  }\n\n  // TODO: handleClose\n  const closeLock = useRef<boolean>(false);\n\n  useEffect(() => {\n    return () => {\n      closeLock.current = true;\n    }\n  }, []);\n\n  const handleClose = (type: string, streamID: number) => {\n    if (type === 'close') {\n      if (!currentHost || closeLock.current) return;\n\n      const rtmClient = roomStore.rtmClient;\n      const rtcClient = roomStore.rtcClient;\n      const teacherUid = roomStore.state.course.teacherId;\n\n      console.log(\"close rtmClient: \", rtmClient, \", rtcClient: \", rtcClient, \", teacherUid: \", teacherUid, \", lock :\", closeLock.current);\n\n      if (currentHost.streamID === +me.uid && teacherUid) {\n        const quitClient = new Promise((resolve, reject) => {\n          if (platform === 'electron') {\n            const nativeClient = rtcClient as AgoraElectronClient;\n            const val = nativeClient.unpublish();\n            if (val >= 0) {\n              resolve();\n            } else {\n              console.warn('quit native client failed');\n              reject(val);\n            }\n          }\n          if (platform === 'web') {\n            const webClient = rtcClient as AgoraWebClient;\n            resolve(webClient.unpublishLocalStream());\n          }\n        });\n        closeLock.current = true;\n        rtmLock.current = true;\n        Promise.all([\n          eduApi.studentStopCoVideo(\n            roomStore.state.course.roomId\n          ),\n          quitClient\n        ]).then(() => {\n          globalStore.showToast({\n            type: 'close_youself_co_video',\n            message: t('toast.close_youself_co_video')\n          })\n          rtmLock.current = false;\n        }).catch((err: any) => {\n          rtmLock.current = false;\n          console.warn(err);\n          throw err;\n        }).finally(() => {\n          closeLock.current = false;\n        })\n      }\n\n      if (`${teacherUid}` && `${teacherUid}` === `${me.uid}`) {\n        rtmLock.current = true;\n        closeLock.current = true;\n        Promise.all([\n          eduApi.teacherCancelStudent(\n            roomStore.state.course.roomId,\n            roomStore.state.applyUser.userId,\n          )\n        ]).then(() => {\n          globalStore.showToast({\n            type: 'peer_hands_up',\n            message: t(\"toast.close_co_video\")\n          })\n          roomStore.updateApplyUser({\n            account: '',\n            userId: '',\n          })\n          rtmLock.current = false;\n        }).catch((err: any) => {\n          rtmLock.current = false;\n          console.warn(err);\n        }).finally(() => {\n          closeLock.current = false;\n        })\n      }\n    }\n  }\n  \n  return (\n    <div className=\"room-container\">\n      <div className=\"live-container\">\n        <MediaBoard\n          handleClick={handleClick}\n        >\n          <div className=\"video-container\">\n          {currentHost ? \n            <VideoPlayer\n              role=\"teacher\"\n              streamID={currentHost.streamID}\n              stream={currentHost.stream}\n              domId={`${currentHost.streamID}`}\n              id={`${currentHost.streamID}`}\n              account={currentHost.account}\n              handleClick={onPlayerClick}\n              close={me.role === 1 || +me.uid === currentHost.streamID}\n              handleClose={handleClose}\n              video={currentHost.video}\n              audio={currentHost.audio}\n              local={currentHost.local}\n              autoplay={Boolean(me.coVideo)}\n            /> :\n            null\n          }\n        </div>\n        </MediaBoard>\n      </div>\n      <div className=\"live-board\">\n        <div className=\"video-board\">\n          {teacher ?\n            <VideoPlayer\n              role=\"teacher\"\n              streamID={teacher.streamID}\n              stream={teacher.stream}\n              domId={`dom-${teacher.streamID}`}\n              id={`${teacher.streamID}`}\n              account={teacher.account}\n              handleClick={onPlayerClick}\n              audio={Boolean(teacher.audio)}\n              video={Boolean(teacher.video)}\n              local={Boolean(teacher.local)}\n              autoplay={Boolean(me.coVideo)}\n              /> :\n            <VideoPlayer\n              role=\"teacher\"\n              account={'teacher'}\n              streamID={0}\n              video={true}\n              audio={true}\n              />}\n        </div>\n        <ChatBoard\n          name={roomName}\n          teacher={role === 1}\n          messages={messages}\n          mute={Boolean(roomState.course.muteChat)}\n          value={value}\n          roomCount={memberCount}\n          sendMessage={sendMessage}\n          handleChange={handleChange} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport {t} from '../i18n';\n\nimport './404.scss';\nimport { useHistory } from 'react-router-dom';\n\nconst BasicLayout: React.FC<any> = ({children}) => {\n  return (\n    <div className=\"main-layout-container\">\n      {children}\n    </div>\n  )\n}\n\nexport const PageNotFound: React.FC<any> = () => {\n\n  const history = useHistory();\n\n  return (\n    <BasicLayout>\n      <div className=\"layout-content\">\n        <h1>404</h1>\n        <h2>{t('error.not_found')}</h2>\n        <a style={{\"cursor\": \"pointer\"}} onClick={() => {\n            history.push('/');\n        }}>{t('return.home')}</a>\n      </div>\n    </BasicLayout>\n  )\n}","import React, { useState } from 'react';\nimport '../classroom/room.scss';\nimport { isElectron } from '@/utils/platform';\nimport '@/components/nav.scss';\nimport { Tooltip } from '@material-ui/core';\nimport { t } from '@/i18n';\nimport { globalStore } from '@/stores/global';\nimport Log from '@/utils/LogUploader';\nimport { usePlatform } from '@/containers/platform-container';\nimport Icon from '@/components/icon';\n\nconst MenuNav = () => {\n\n  const [loading, setLoading] = useState<boolean>(false)\n\n  const {NavBtn} = usePlatform();\n\n  const handleClick = (type: string) => {\n    if (type === 'exit') {\n      globalStore.showDialog({\n        type: 'exitRoom',\n        message: t('toast.quit_room'),\n      });\n    } else if (type === 'uploadLog') {\n      setLoading(true)\n      Log.doUpload().then((resultCode: any) => {\n        globalStore.showDialog({\n          type: 'uploadLog',\n          message: t('toast.show_log_id', { reason: `${resultCode}` })\n        });\n      }).finally(() => {\n        setLoading(false)\n      })\n    }\n  }\n  return (\n    <div className={`nav-container menu-nav ${isElectron ? 'draggable' : ''}`}>\n      <div className=\"menu-nav-right\">\n        {/* <Tooltip title={t(\"icon.upload-log\")} placement=\"bottom\">\n          <div>\n            <Icon className={loading ? \"icon-loading\" : \"icon-upload\"} onClick={(evt: any) => {\n              handleClick('uploadLog')\n            }}></Icon>\n          </div>\n        </Tooltip> */}\n        <NavBtn />\n      </div>\n    </div>\n  )\n}\n\nexport function ReplayPageWrapper({ children }: any) {\n  return (\n    <>\n    {isElectron ? \n      <div className=\"replay-page-wrapper\">\n        <MenuNav />\n        {children}\n      </div>\n      : children\n    }\n    </>\n  );\n}\n\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport function ConfigPage() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"appID\"\n            label=\"Agora AppID\"\n            name=\"appID\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"Netless SDKToken\"\n            label=\"Netless SDKToken\"\n            id=\"sdkToken\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Send\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"https://github.com/agoraio-usecase/eEducation/issues/new\" target=\"_blank\" variant=\"body2\">\n                Feedback Github issues\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CustomBrowserRouter from '../containers/custom-browser-router';\nimport ThemeContainer from '../containers/theme-container';\nimport Home from './home';\nimport DeviceTest from './device-test';\nimport { RoomPage } from './classroom';\nimport Loading from '../components/loading';\nimport Toast from '../components/toast';\nimport '../icons.scss';\nimport { PlatformContainer } from '../containers/platform-container';\nimport ReplayContainer from './replay/replay';\nimport AgoraReplayContainer from './replay/agora-replay';\nimport { RootProvider } from '../containers/root-container';\nimport SmallClass from './classroom/small-class';\nimport OneToOne from './classroom/one-to-one';\nimport BigClass from './classroom/big-class';\nimport { PageNotFound } from './404';\nimport RoomDialog from '../components/dialog';\nimport { ReplayPageWrapper } from './replay';\nimport { ConfigPage } from './config';\n\nexport default function () {\n  return (\n    <ThemeContainer>\n      <CustomBrowserRouter>\n        <PlatformContainer>\n        <RootProvider>\n          <Loading />\n          <Toast />\n          <RoomDialog />\n          <Route exact path=\"/device_test\">\n            <DeviceTest />\n          </Route>\n          <Route exact path=\"/classroom/one-to-one\">\n            <RoomPage >\n              <OneToOne />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/classroom/small-class\">\n            <RoomPage>\n              <SmallClass />\n            </RoomPage>\n          </Route>\n          <Route exact path=\"/classroom/big-class\">\n            <RoomPage>\n              <BigClass />\n            </RoomPage>\n          </Route>\n          <Route path=\"/replay/record/:recordId\">\n            <ReplayPageWrapper>\n              <ReplayContainer />\n            </ReplayPageWrapper>\n          </Route>\n          <Route path=\"/replay/agora_record/:recordId\">\n            <ReplayPageWrapper>\n              <AgoraReplayContainer />\n            </ReplayPageWrapper>\n          </Route>\n          <Route path=\"/config\">\n            <ConfigPage />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          {/* <Route path=\"/error\">\n            <ErrorPage />\n          </Route> */}\n          <Route exact path=\"/404\">\n            <PageNotFound />\n          </Route>\n        </RootProvider>\n        </PlatformContainer>\n      </CustomBrowserRouter>\n    </ThemeContainer>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './pages/index';\nimport * as serviceWorker from './serviceWorker';\nimport TagManager from 'react-gtm-module';\nimport Eruda from 'eruda';\nimport UAParser from 'ua-parser-js';\nimport {isElectron} from './utils/platform';\n\nconst parser = new UAParser();\n\nconst userAgentInfo = parser.getResult();\n\nconst isMobile = () => {\n  return userAgentInfo.device.type === 'mobile';\n};\n\n// use gtm\nif (process.env.REACT_APP_AGORA_GTM_ID) {\n  !isElectron && TagManager.initialize({\n    gtmId: process.env.REACT_APP_AGORA_GTM_ID\n  })\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'));\n  document.getElementById(\"room_join\")?.click();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (isMobile()) {\n  const el = document.createElement('div');\n  document.body.appendChild(el);\n  \n  Eruda.init({\n    container: el,\n    tool: ['console', 'elements']\n  });\n}"],"sourceRoot":""}